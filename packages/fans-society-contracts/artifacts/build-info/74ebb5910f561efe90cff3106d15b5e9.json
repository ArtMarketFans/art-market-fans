{"id":"74ebb5910f561efe90cff3106d15b5e9","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/FansSociety.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport { Projects } from './Projects.sol';\n\ncontract FansSociety is Projects  {\n    \n    constructor(\n        address _wethTokenAddress,\n\t\taddress _tokenFactoryAddress, \n\t\taddress _poolFactoryAddress\n    ) Projects(_wethTokenAddress, _tokenFactoryAddress, _poolFactoryAddress) {\n        \n    }\n\n}\n"},"contracts/Projects.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.17;\n\nimport { Initializable } from '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport { Ownable } from '@openzeppelin/contracts/access/Ownable.sol';\n\nimport { IProjectTokenFactory } from './tokens/interfaces/IProjectTokenFactory.sol';\nimport { ITokensPoolFactory } from './pools/interfaces/ITokensPoolFactory.sol';\n\ncontract Projects is Ownable {\n\tstruct Project {\n\t\tstring name;\n\t\tstring description;\n\t\tstring symbol;\n\t\tuint256 fund;\n\t\tuint256 liquidity;\n\t\tuint32 startsAt;\n\t\tuint32 endsAt;\n\t\tuint32 target;\n\t\tuint16 minInvest;\n\t\tbool completed;\n\t\taddress authorAddress;\n\t\taddress tokenAddress;\n\t}\n\n\taddress internal wethTokenAddress;\n\n\taddress internal tokenFactoryAddress;\n\taddress internal poolFactoryAddress;\n\n\tuint256 private constant FSOCIETY_SUPPLY = 27;\n\tuint256 private constant AUTHOR_SUPPLY = 27;\n\tuint256 private constant LIQUIDITY_SUPPLY = 30;\n\tuint256 private constant INVESTORS_SUPPLY = 35;\n\n\tuint256 private constant MAX_DURATION = 604800; // 1 week\n\n\tuint256 private constant PRECISION = 2;\n\n\n\tuint256 public count;\n\n\tmapping(uint256 => Project) public projects;\n\n\tmapping(uint256 => mapping(address => uint256)) public commitments;\n\n\tevent ProjectCreated(\n\t\tuint256 id,\n\t\tstring name,\n\t\tstring symbol,\n\t\tstring description,\n\t\tuint32 indexed startsAt,\n\t\tuint32 indexed endsAt,\n\t\tuint32 target,\n\t\tuint16 minInvest,\n\t\taddress indexed author\n\t);\n\n\tevent ProjectCancelled(uint256 id);\n\n\tevent Committed(uint256 indexed id, address indexed caller, uint256 amount);\n\n\tevent Withdrawed(uint256 indexed id, address indexed caller, uint256 amount);\n\n\tevent Claimed(uint256 indexed id, address indexed caller, uint256 amount);\n\n\tevent ProjectCompleted(uint256 indexed id, uint fund, uint liquidity);\n\n\tevent ProjectValidated(uint256 indexed id);\n\n\tmodifier onlyAuthor(uint256 _id) {\n\t\trequire(msg.sender == projects[_id].authorAddress, 'Not author');\n\t\t_;\n\t}\n\n\tmodifier crowdfundingOpened(uint256 _id) {\n\t\t//require(block.timestamp >= projects[_id].startsAt, 'not started');\n\t\trequire(block.timestamp <= projects[_id].endsAt, 'Already ended');\n\t\trequire(projects[_id].completed == false, 'Project completed');\n\t\t_;\n\t}\n\n\tmodifier crowdfundingClosed(uint256 _id) {\n\t\trequire(\n\t\t\tblock.timestamp > projects[_id].endsAt || projects[_id].completed,\n\t\t\t'not closed'\n\t\t);\n\t\t_;\n\t}\n\n\tmodifier isCommited(uint256 _id) {\n\t\trequire(commitments[_id][msg.sender] >= 0, 'No commitment');\n\t\t_;\n\t}\n\n\tconstructor(\n\t\taddress _wethTokenAddress,\n\t\taddress _tokenFactoryAddress, \n\t\taddress _poolFactoryAddress\n\t) {\n\t\twethTokenAddress = _wethTokenAddress;\n\t\ttokenFactoryAddress = _tokenFactoryAddress;\n\t\tpoolFactoryAddress = _poolFactoryAddress;\n\t}\n\n\tfunction createProject(\n\t\taddress _authorAddress,\n\t\tstring calldata _name,\n\t\tstring calldata _symbol,\n\t\tstring calldata _description,\n\t\tuint32 _startsAt,\n\t\tuint32 _endsAt,\n\t\tuint32 _target,\n\t\tuint16 _minInvest\n\t) external onlyOwner {\n\t\trequire(_startsAt >= block.timestamp, 'Invalid start time');\n\t\trequire(_endsAt > _startsAt, 'Invalid end time');\n\t\trequire(\n\t\t\t_endsAt <= block.timestamp + MAX_DURATION,\n\t\t\t'Maximum duration exceeded'\n\t\t);\n\n\t\tcount++;\n\n\t\tprojects[count] = Project({\n\t\t\tname: _name,\n\t\t\tsymbol: _symbol,\n\t\t\tdescription: _description,\n\t\t\tfund: 0,\n\t\t\tliquidity: 0,\n\t\t\tstartsAt: _startsAt,\n\t\t\tendsAt: _endsAt,\n\t\t\ttarget: _target,\n\t\t\tminInvest: _minInvest,\n\t\t\tcompleted: false,\n\t\t\tauthorAddress: _authorAddress,\n\t\t\ttokenAddress: address(0)\n\t\t});\n\n\t\temit ProjectCreated(\n\t\t\tcount,\n\t\t\t_name,\n\t\t\t_symbol,\n\t\t\t_description,\n\t\t\t_startsAt,\n\t\t\t_endsAt,\n\t\t\t_target,\n\t\t\t_minInvest,\n\t\t\t_authorAddress\n\t\t);\n\t}\n\n\tfunction cancelProject(uint256 _id) external onlyOwner crowdfundingOpened(_id) {\n\t\trequire(projects[_id].startsAt > block.timestamp, 'Project already started');\n\t\tdelete projects[_id];\n\t\temit ProjectCancelled(_id);\n\t}\n\n\tfunction commitOnProject(uint256 _id) external payable crowdfundingOpened(_id) {\n\t\trequire(msg.value >= 0.01 ether, 'min 0.01 ether');\n\n\t\tProject memory project = projects[_id];\n\n\t\t(uint value, uint liquidity) = computeValueAndLiquidity(msg.value);\n\n\t\tproject.fund += value;\n\t\tproject.liquidity += liquidity;\n\n\t\tcommitments[_id][msg.sender] += msg.value;\n\t\temit Committed(_id, msg.sender, msg.value);\n\n\t\tif (project.fund >= project.target) {\n\t\t\tproject.completed = true;\n\t\t\temit ProjectCompleted(_id, project.fund, project.liquidity);\n\t\t}\n\t}\n\n\tfunction withdrawOnProject(uint256 _id) external crowdfundingOpened(_id) isCommited(_id) {\n\t\tuint256 commitment = commitments[_id][msg.sender];\n\n\t\t(uint value, uint liquidity) = computeValueAndLiquidity(commitment);\n\t\tprojects[_id].fund -= value;\n\t\tprojects[_id].liquidity -= liquidity;\n\n\t\tcommitments[_id][msg.sender] = 0;\n\n\t\t(bool sent, ) = msg.sender.call{ value: commitment }('');\n\t\trequire(sent, 'withdraw failed');\n\n\t\temit Withdrawed(_id, msg.sender, commitment);\n\t}\n\n\tfunction validateProject(uint256 _id) external onlyAuthor(_id) crowdfundingClosed(_id) {\n\t\tProject memory project = projects[_id];\n\n\t\taddress tokenAddress = IProjectTokenFactory(tokenFactoryAddress).createToken(\n\t\t\tproject.name,\n\t\t\tproject.symbol,\n\t\t\taddress(this),\n\t\t\tFSOCIETY_SUPPLY,\n\t\t\tproject.authorAddress,\n\t\t\tAUTHOR_SUPPLY,\n\t\t\tINVESTORS_SUPPLY\n\t\t);\n\n\t\t(address poolAddress, ) = ITokensPoolFactory(poolFactoryAddress).createPool(\n\t\t\ttokenAddress,\n\t\t\twethTokenAddress\n\t\t);\n\n\t\t// TODO: add pool liquidity here \n\n\t\temit ProjectValidated(_id);\n\t}\n\n\tfunction claimProjectTokens(uint256 _id) external crowdfundingClosed(_id) isCommited(_id) {\n\t\tuint256 commitment = commitments[_id][msg.sender];\n\n\t\t(uint value, ) = computeValueAndLiquidity(commitment);\n\n\t\tuint256 tokenAmount = (INVESTORS_SUPPLY / projects[_id].fund) * value;\n\t\t\n\t\tIProjectTokenFactory(tokenFactoryAddress)\n\t\t\t.tokens(projects[_id].tokenAddress)\n\t\t\t.transfer(msg.sender, tokenAmount);\n\t}\n\n\tfunction computeValueAndLiquidity(uint256 _value) private pure returns (uint256 amount, uint256 liquidity) {\n\t\tuint256 _liquidity = (_value ** PRECISION) / 20; // 5%\n\t\tuint256 _amount = (_value ** PRECISION) - liquidity;\n\t\treturn (_amount, _liquidity);\n\t}\n}\n"},"contracts/tokens/interfaces/IProjectTokenFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport { IERC20MetadataUpgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol';\n\ninterface IProjectTokenFactory {\n    \n    function tokens(address tokenAddress) external returns (IERC20MetadataUpgradeable);\n\n    function createToken(\n        string memory _name, \n        string memory _symbol, \n        address _fsocietyAddress,\n        uint256 _fsocietySupply,\n        address _author,\n        uint256 _authorSupply, \n        uint256 _otherSupply\n    ) external returns (address);\n    \n}\n"},"contracts/pools/interfaces/ITokensPoolFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport { ITokensPool } from './ITokensPool.sol';\n\ninterface ITokensPoolFactory {\n    \n    function createPool(\n        address _token1,\n        address _token2\n    ) external returns (address poolAddress, bytes32 poolHash);\n\n    function getPoolByTokensPair(address _token1, address _token2) external view returns (ITokensPool);\n\n    function getPoolByHash(bytes32 _hash) external view returns (ITokensPool);\n\n    function getTokenPools(address _token) external view returns (address[] memory);\n\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"contracts/pools/interfaces/ITokensPool.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\ninterface ITokensPool {\n\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"contracts/tokens/ProjectTokenFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport { Address } from '@openzeppelin/contracts/utils/Address.sol';\nimport { Clones } from '@openzeppelin/contracts/proxy/Clones.sol';\nimport { Ownable } from '@openzeppelin/contracts/access/Ownable.sol';\nimport { IERC20MetadataUpgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol';\n\nimport { IProjectTokenFactory } from './interfaces/IProjectTokenFactory.sol';\nimport { ProjectTokenERC20 } from './ProjectTokenERC20.sol';\n\ncontract ProjectTokenFactory is IProjectTokenFactory, Ownable {\n    \n    address immutable private proxy;\n\n    mapping(address => IERC20MetadataUpgradeable) public tokens;\n\n    event TokenCreated(address token, string name, string symbol);\n\n    constructor() {\n        proxy = address(new ProjectTokenERC20());\n    }\n\n    function createToken(\n        string memory _name, \n        string memory _symbol, \n        address _fsociety,\n        uint256 _fsocietySupply, \n        address _author,\n        uint256 _authorSupply, \n        uint256 _otherSupply\n    ) public onlyOwner returns (address) {\n        address token = Clones.clone(proxy);\n        ProjectTokenERC20(token).initialize(_name, _symbol, _fsociety, _fsocietySupply, _author, _authorSupply, msg.sender, _otherSupply);\n        emit TokenCreated(token, _name, _symbol);\n        return token;\n    }\n\n}\n\n"},"contracts/tokens/ProjectTokenERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport { ERC20Upgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\nimport { Initializable } from '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\n\ncontract ProjectTokenERC20 is Initializable, ERC20Upgradeable {\n    function initialize(\n        string memory _name, \n        string memory _symbol, \n        address _fsociety,\n        uint256 _fsocietySupply,\n        address _author,\n        uint256 _authorSupply, \n        address _other,\n        uint256 _otherSupply\n    ) public virtual initializer {\n        __ProjectTokenERC20_init(_name, _symbol, _fsociety, _fsocietySupply, _author, _authorSupply, _other, _otherSupply);\n    }\n    \n    /**\n     * @dev Mint supplies\n     * - `fsocietySupply` amount of token and transfers them to `fsociety` contract.\n     * - `authorSupply` amount of token and transfers them to `author`.\n     * - `otherSupply` amount of token and transfers them to `otherContract`.\n     *\n     * See {ERC20-constructor}.\n     */\n    function __ProjectTokenERC20_init(\n        string memory _name, \n        string memory _symbol, \n        address _fsociety,\n        uint256 _fsocietySupply,\n        address _author,\n        uint256 _authorSupply, \n        address _other,\n        uint256 _otherSupply\n    ) internal onlyInitializing {\n        __ERC20_init_unchained(_name, _symbol);\n        __ProjectTokenERC20_init_unchained(_fsociety, _fsocietySupply, _author, _authorSupply, _other, _otherSupply);\n    }\n\n    function __ProjectTokenERC20_init_unchained(\n        address _fsociety,\n        uint256 _fsocietySupply,\n        address _author,\n        uint256 _authorSupply, \n        address _other,\n        uint256 _otherSupply\n    ) internal onlyInitializing {\n        _mint(_fsociety, _fsocietySupply);\n        _mint(_author, _authorSupply);\n        _mint(_other, _otherSupply);\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create(0, ptr, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create2(0, ptr, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            predicted := keccak256(add(ptr, 0x37), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"contracts/test/WETHToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\n\ncontract WETHToken is ERC20 {\n    constructor() ERC20('Wrapped ETHER', 'WETH') {\n        _mint(msg.sender, 1000 ether);\n    }\n}"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/Projects.sol:208:4:\n    |\n208 | \t\t(address poolAddress, ) = ITokensPoolFactory(poolFactoryAddress).createPool(\n    | \t\t ^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":5317,"file":"contracts/Projects.sol","start":5298},"type":"Warning"}],"sources":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1167],"Initializable":[168]},"id":169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":169,"sourceUnit":1168,"src":"138:44:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"184:2198:0","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":168,"linearizedBaseContracts":[168],"name":"Initializable","nameLocation":"2401:13:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"2421:109:0","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":6,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:0","nodeType":"VariableDeclaration","scope":168,"src":"2535:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"2568:91:0","text":" @dev Indicates that the contract is in the process of being initialized."},"id":9,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:0","nodeType":"VariableDeclaration","scope":168,"src":"2664:26:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"2697:90:0","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":14,"name":"Initialized","nameLocation":"2798:11:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:0","nodeType":"VariableDeclaration","scope":14,"src":"2810:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:0"},"src":"2792:33:0"},{"body":{"id":69,"nodeType":"Block","src":"3258:483:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3273:14:0","nodeType":"VariableDeclaration","scope":69,"src":"3268:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"3268:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":21,"initialValue":{"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3290:14:0","subExpression":{"id":19,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3291:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3268:36:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":23,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3336:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":24,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3354:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3369:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3354:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3336:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":28,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3335:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3376:45:0","subExpression":{"arguments":[{"arguments":[{"id":33,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3415:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$168","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$168","typeString":"contract Initializable"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3407:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"3407:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3407:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":29,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3377:18:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1167_$","typeString":"type(library AddressUpgradeable)"}},"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3396:10:0","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":901,"src":"3377:29:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3377:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":37,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3425:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":38,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3441:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3376:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":41,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3375:68:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3335:108:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3457:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":22,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3314:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:201:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45,"nodeType":"ExpressionStatement","src":"3314:201:0"},{"expression":{"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":46,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3525:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3540:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3525:16:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":49,"nodeType":"ExpressionStatement","src":"3525:16:0"},{"condition":{"id":50,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3555:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":56,"nodeType":"IfStatement","src":"3551:65:0","trueBody":{"id":55,"nodeType":"Block","src":"3571:45:0","statements":[{"expression":{"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":51,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3585:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3601:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3585:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":54,"nodeType":"ExpressionStatement","src":"3585:20:0"}]}},{"id":57,"nodeType":"PlaceholderStatement","src":"3625:1:0"},{"condition":{"id":58,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3640:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":68,"nodeType":"IfStatement","src":"3636:99:0","trueBody":{"id":67,"nodeType":"Block","src":"3656:79:0","statements":[{"expression":{"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"3670:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":60,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3686:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3670:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62,"nodeType":"ExpressionStatement","src":"3670:21:0"},{"eventCall":{"arguments":[{"hexValue":"31","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":63,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"3710:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3710:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"EmitStatement","src":"3705:19:0"}]}}]},"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"2831:399:0","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":70,"name":"initializer","nameLocation":"3244:11:0","nodeType":"ModifierDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"3255:2:0"},"src":"3235:506:0","virtual":false,"visibility":"internal"},{"body":{"id":102,"nodeType":"Block","src":"4852:255:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:14:0","subExpression":{"id":76,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"4871:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4888:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":79,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"4903:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4888:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4870:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:48:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":75,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4862:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4862:99:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":84,"nodeType":"ExpressionStatement","src":"4862:99:0"},{"expression":{"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":85,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4971:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":86,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"4986:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4971:22:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":88,"nodeType":"ExpressionStatement","src":"4971:22:0"},{"expression":{"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":89,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5003:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":90,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5019:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5003:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":92,"nodeType":"ExpressionStatement","src":"5003:20:0"},{"id":93,"nodeType":"PlaceholderStatement","src":"5033:1:0"},{"expression":{"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":94,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5044:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5060:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5044:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":97,"nodeType":"ExpressionStatement","src":"5044:21:0"},{"eventCall":{"arguments":[{"id":99,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"5092:7:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":98,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5080:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":101,"nodeType":"EmitStatement","src":"5075:25:0"}]},"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"3747:1062:0","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":103,"name":"reinitializer","nameLocation":"4823:13:0","nodeType":"ModifierDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"version","nameLocation":"4843:7:0","nodeType":"VariableDeclaration","scope":103,"src":"4837:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":72,"name":"uint8","nodeType":"ElementaryTypeName","src":"4837:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4836:15:0"},"src":"4814:293:0","virtual":false,"visibility":"internal"},{"body":{"id":112,"nodeType":"Block","src":"5345:97:0","statements":[{"expression":{"arguments":[{"id":107,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5363:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5378:45:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5355:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:69:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"ExpressionStatement","src":"5355:69:0"},{"id":111,"nodeType":"PlaceholderStatement","src":"5434:1:0"}]},"documentation":{"id":104,"nodeType":"StructuredDocumentation","src":"5113:199:0","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":113,"name":"onlyInitializing","nameLocation":"5326:16:0","nodeType":"ModifierDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"5342:2:0"},"src":"5317:125:0","virtual":false,"visibility":"internal"},{"body":{"id":148,"nodeType":"Block","src":"5977:230:0","statements":[{"expression":{"arguments":[{"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5995:14:0","subExpression":{"id":118,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5996:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6011:41:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5987:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5987:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":122,"nodeType":"ExpressionStatement","src":"5987:66:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6067:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":125,"name":"uint8","nodeType":"ElementaryTypeName","src":"6087:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6082:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6094:3:0","memberName":"max","nodeType":"MemberAccess","src":"6082:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6067:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":147,"nodeType":"IfStatement","src":"6063:138:0","trueBody":{"id":146,"nodeType":"Block","src":"6099:102:0","statements":[{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":130,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6113:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":132,"name":"uint8","nodeType":"ElementaryTypeName","src":"6133:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6128:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6140:3:0","memberName":"max","nodeType":"MemberAccess","src":"6128:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6113:30:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":137,"nodeType":"ExpressionStatement","src":"6113:30:0"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6179:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":140,"name":"uint8","nodeType":"ElementaryTypeName","src":"6179:5:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6174:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:11:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6186:3:0","memberName":"max","nodeType":"MemberAccess","src":"6174:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":138,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"6162:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6162:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":145,"nodeType":"EmitStatement","src":"6157:33:0"}]}}]},"documentation":{"id":114,"nodeType":"StructuredDocumentation","src":"5448:475:0","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":149,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5937:20:0","nodeType":"FunctionDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[],"src":"5957:2:0"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"5977:0:0"},"scope":168,"src":"5928:279:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":157,"nodeType":"Block","src":"6384:36:0","statements":[{"expression":{"id":155,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6401:12:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":154,"id":156,"nodeType":"Return","src":"6394:19:0"}]},"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"6213:102:0","text":" @dev Internal function that returns the initialized version. Returns `_initialized`"},"id":158,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6329:22:0","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"6351:2:0"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"6377:5:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":152,"name":"uint8","nodeType":"ElementaryTypeName","src":"6377:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6376:7:0"},"scope":168,"src":"6320:100:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":166,"nodeType":"Block","src":"6590:37:0","statements":[{"expression":{"id":164,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"6607:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":163,"id":165,"nodeType":"Return","src":"6600:20:0"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"6426:103:0","text":" @dev Internal function that returns the initialized version. Returns `_initializing`"},"id":167,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6543:15:0","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"6558:2:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"6584:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":161,"name":"bool","nodeType":"ElementaryTypeName","src":"6584:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6583:6:0"},"scope":168,"src":"6534:93:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":169,"src":"2383:4246:0","usedErrors":[]}],"src":"113:6517:0"},"id":0},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1167],"ContextUpgradeable":[1209],"ERC20Upgradeable":[780],"IERC20MetadataUpgradeable":[883],"IERC20Upgradeable":[858],"Initializable":[168]},"id":781,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":170,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":781,"sourceUnit":859,"src":"130:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":781,"sourceUnit":884,"src":"164:52:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":781,"sourceUnit":1210,"src":"217:44:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":781,"sourceUnit":169,"src":"262:45:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":176,"name":"Initializable","nameLocations":["1509:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"1509:13:1"},"id":177,"nodeType":"InheritanceSpecifier","src":"1509:13:1"},{"baseName":{"id":178,"name":"ContextUpgradeable","nameLocations":["1524:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":1209,"src":"1524:18:1"},"id":179,"nodeType":"InheritanceSpecifier","src":"1524:18:1"},{"baseName":{"id":180,"name":"IERC20Upgradeable","nameLocations":["1544:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"1544:17:1"},"id":181,"nodeType":"InheritanceSpecifier","src":"1544:17:1"},{"baseName":{"id":182,"name":"IERC20MetadataUpgradeable","nameLocations":["1563:25:1"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"1563:25:1"},"id":183,"nodeType":"InheritanceSpecifier","src":"1563:25:1"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"309:1170:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":780,"linearizedBaseContracts":[780,883,858,1209,168],"name":"ERC20Upgradeable","nameLocation":"1489:16:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":187,"mutability":"mutable","name":"_balances","nameLocation":"1631:9:1","nodeType":"VariableDeclaration","scope":780,"src":"1595:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":186,"keyType":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1603:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1595:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":193,"mutability":"mutable","name":"_allowances","nameLocation":"1703:11:1","nodeType":"VariableDeclaration","scope":780,"src":"1647:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":192,"keyType":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"1655:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1647:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":191,"keyType":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"1674:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1666:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":195,"mutability":"mutable","name":"_totalSupply","nameLocation":"1737:12:1","nodeType":"VariableDeclaration","scope":780,"src":"1721:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":197,"mutability":"mutable","name":"_name","nameLocation":"1771:5:1","nodeType":"VariableDeclaration","scope":780,"src":"1756:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":196,"name":"string","nodeType":"ElementaryTypeName","src":"1756:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":199,"mutability":"mutable","name":"_symbol","nameLocation":"1797:7:1","nodeType":"VariableDeclaration","scope":780,"src":"1782:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":198,"name":"string","nodeType":"ElementaryTypeName","src":"1782:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":214,"nodeType":"Block","src":"2206:55:1","statements":[{"expression":{"arguments":[{"id":210,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"2239:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":211,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"2246:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":209,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2216:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"ExpressionStatement","src":"2216:38:1"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"1811:298:1","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":215,"implemented":true,"kind":"function","modifiers":[{"id":207,"kind":"modifierInvocation","modifierName":{"id":206,"name":"onlyInitializing","nameLocations":["2189:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"2189:16:1"},"nodeType":"ModifierInvocation","src":"2189:16:1"}],"name":"__ERC20_init","nameLocation":"2123:12:1","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"name_","nameLocation":"2150:5:1","nodeType":"VariableDeclaration","scope":215,"src":"2136:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":201,"name":"string","nodeType":"ElementaryTypeName","src":"2136:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"symbol_","nameLocation":"2171:7:1","nodeType":"VariableDeclaration","scope":215,"src":"2157:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":203,"name":"string","nodeType":"ElementaryTypeName","src":"2157:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2135:44:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2206:0:1"},"scope":780,"src":"2114:147:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":232,"nodeType":"Block","src":"2369:57:1","statements":[{"expression":{"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":224,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2379:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":225,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"2387:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2379:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":227,"nodeType":"ExpressionStatement","src":"2379:13:1"},{"expression":{"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":228,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"2402:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":229,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"2412:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2402:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":231,"nodeType":"ExpressionStatement","src":"2402:17:1"}]},"id":233,"implemented":true,"kind":"function","modifiers":[{"id":222,"kind":"modifierInvocation","modifierName":{"id":221,"name":"onlyInitializing","nameLocations":["2352:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"2352:16:1"},"nodeType":"ModifierInvocation","src":"2352:16:1"}],"name":"__ERC20_init_unchained","nameLocation":"2276:22:1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"name_","nameLocation":"2313:5:1","nodeType":"VariableDeclaration","scope":233,"src":"2299:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":216,"name":"string","nodeType":"ElementaryTypeName","src":"2299:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"symbol_","nameLocation":"2334:7:1","nodeType":"VariableDeclaration","scope":233,"src":"2320:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":218,"name":"string","nodeType":"ElementaryTypeName","src":"2320:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2298:44:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"2369:0:1"},"scope":780,"src":"2267:159:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[870],"body":{"id":242,"nodeType":"Block","src":"2560:29:1","statements":[{"expression":{"id":240,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"2577:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":239,"id":241,"nodeType":"Return","src":"2570:12:1"}]},"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"2432:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":243,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2500:4:1","nodeType":"FunctionDefinition","overrides":{"id":236,"nodeType":"OverrideSpecifier","overrides":[],"src":"2527:8:1"},"parameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"2504:2:1"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":243,"src":"2545:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":237,"name":"string","nodeType":"ElementaryTypeName","src":"2545:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2544:15:1"},"scope":780,"src":"2491:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":252,"nodeType":"Block","src":"2773:31:1","statements":[{"expression":{"id":250,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"2790:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":249,"id":251,"nodeType":"Return","src":"2783:14:1"}]},"documentation":{"id":244,"nodeType":"StructuredDocumentation","src":"2595:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":253,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2711:6:1","nodeType":"FunctionDefinition","overrides":{"id":246,"nodeType":"OverrideSpecifier","overrides":[],"src":"2740:8:1"},"parameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"2717:2:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":253,"src":"2758:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":247,"name":"string","nodeType":"ElementaryTypeName","src":"2758:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2757:15:1"},"scope":780,"src":"2702:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[882],"body":{"id":262,"nodeType":"Block","src":"3493:26:1","statements":[{"expression":{"hexValue":"3138","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3510:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":259,"id":261,"nodeType":"Return","src":"3503:9:1"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"2810:613:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":263,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3437:8:1","nodeType":"FunctionDefinition","overrides":{"id":256,"nodeType":"OverrideSpecifier","overrides":[],"src":"3468:8:1"},"parameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"3445:2:1"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"3486:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":257,"name":"uint8","nodeType":"ElementaryTypeName","src":"3486:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3485:7:1"},"scope":780,"src":"3428:91:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[807],"body":{"id":272,"nodeType":"Block","src":"3649:36:1","statements":[{"expression":{"id":270,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3666:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":269,"id":271,"nodeType":"Return","src":"3659:19:1"}]},"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"3525:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":273,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3588:11:1","nodeType":"FunctionDefinition","overrides":{"id":266,"nodeType":"OverrideSpecifier","overrides":[],"src":"3622:8:1"},"parameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"3599:2:1"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"3640:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3639:9:1"},"scope":780,"src":"3579:106:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[815],"body":{"id":286,"nodeType":"Block","src":"3826:42:1","statements":[{"expression":{"baseExpression":{"id":282,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"3843:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":284,"indexExpression":{"id":283,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3853:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3843:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":281,"id":285,"nodeType":"Return","src":"3836:25:1"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"3691:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":287,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3752:9:1","nodeType":"FunctionDefinition","overrides":{"id":278,"nodeType":"OverrideSpecifier","overrides":[],"src":"3799:8:1"},"parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"account","nameLocation":"3770:7:1","nodeType":"VariableDeclaration","scope":287,"src":"3762:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"3762:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3761:17:1"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":287,"src":"3817:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3817:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3816:9:1"},"scope":780,"src":"3743:125:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[825],"body":{"id":311,"nodeType":"Block","src":"4149:104:1","statements":[{"assignments":[299],"declarations":[{"constant":false,"id":299,"mutability":"mutable","name":"owner","nameLocation":"4167:5:1","nodeType":"VariableDeclaration","scope":311,"src":"4159:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"4159:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":302,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":300,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4175:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4175:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4159:28:1"},{"expression":{"arguments":[{"id":304,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"4207:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"4214:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"4218:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":303,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"4197:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"4197:28:1"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4242:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":297,"id":310,"nodeType":"Return","src":"4235:11:1"}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"3874:185:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4073:8:1","nodeType":"FunctionDefinition","overrides":{"id":294,"nodeType":"OverrideSpecifier","overrides":[],"src":"4125:8:1"},"parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"to","nameLocation":"4090:2:1","nodeType":"VariableDeclaration","scope":312,"src":"4082:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"4082:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"amount","nameLocation":"4102:6:1","nodeType":"VariableDeclaration","scope":312,"src":"4094:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4081:28:1"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"4143:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":295,"name":"bool","nodeType":"ElementaryTypeName","src":"4143:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4142:6:1"},"scope":780,"src":"4064:189:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[835],"body":{"id":329,"nodeType":"Block","src":"4409:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":323,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"4426:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":325,"indexExpression":{"id":324,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4438:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4426:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":327,"indexExpression":{"id":326,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4445:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4426:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":322,"id":328,"nodeType":"Return","src":"4419:34:1"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"4259:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":330,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4320:9:1","nodeType":"FunctionDefinition","overrides":{"id":319,"nodeType":"OverrideSpecifier","overrides":[],"src":"4382:8:1"},"parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"owner","nameLocation":"4338:5:1","nodeType":"VariableDeclaration","scope":330,"src":"4330:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4330:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"spender","nameLocation":"4353:7:1","nodeType":"VariableDeclaration","scope":330,"src":"4345:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"4345:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4329:32:1"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":330,"src":"4400:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"4400:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4399:9:1"},"scope":780,"src":"4311:149:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[845],"body":{"id":354,"nodeType":"Block","src":"4857:108:1","statements":[{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"owner","nameLocation":"4875:5:1","nodeType":"VariableDeclaration","scope":354,"src":"4867:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"4867:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":345,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":343,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"4883:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4883:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4867:28:1"},{"expression":{"arguments":[{"id":347,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"4914:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":348,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"4921:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":349,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4930:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":346,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4905:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4905:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"ExpressionStatement","src":"4905:32:1"},{"expression":{"hexValue":"74727565","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4954:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":340,"id":353,"nodeType":"Return","src":"4947:11:1"}]},"documentation":{"id":331,"nodeType":"StructuredDocumentation","src":"4466:297:1","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":355,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4777:7:1","nodeType":"FunctionDefinition","overrides":{"id":337,"nodeType":"OverrideSpecifier","overrides":[],"src":"4833:8:1"},"parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"spender","nameLocation":"4793:7:1","nodeType":"VariableDeclaration","scope":355,"src":"4785:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"amount","nameLocation":"4810:6:1","nodeType":"VariableDeclaration","scope":355,"src":"4802:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"4802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:33:1"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"4851:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":338,"name":"bool","nodeType":"ElementaryTypeName","src":"4851:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4850:6:1"},"scope":780,"src":"4768:197:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[857],"body":{"id":387,"nodeType":"Block","src":"5660:153:1","statements":[{"assignments":[369],"declarations":[{"constant":false,"id":369,"mutability":"mutable","name":"spender","nameLocation":"5678:7:1","nodeType":"VariableDeclaration","scope":387,"src":"5670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"5670:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":372,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":370,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"5688:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5688:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5670:30:1"},{"expression":{"arguments":[{"id":374,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5726:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":375,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"5732:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5741:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":373,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5710:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5710:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"ExpressionStatement","src":"5710:38:1"},{"expression":{"arguments":[{"id":380,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"5768:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":381,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5774:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":382,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"5778:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":379,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5758:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5758:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"ExpressionStatement","src":"5758:27:1"},{"expression":{"hexValue":"74727565","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5802:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":367,"id":386,"nodeType":"Return","src":"5795:11:1"}]},"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"4971:551:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5536:12:1","nodeType":"FunctionDefinition","overrides":{"id":364,"nodeType":"OverrideSpecifier","overrides":[],"src":"5636:8:1"},"parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"from","nameLocation":"5566:4:1","nodeType":"VariableDeclaration","scope":388,"src":"5558:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"to","nameLocation":"5588:2:1","nodeType":"VariableDeclaration","scope":388,"src":"5580:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"5580:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"amount","nameLocation":"5608:6:1","nodeType":"VariableDeclaration","scope":388,"src":"5600:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"5600:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5548:72:1"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":388,"src":"5654:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":365,"name":"bool","nodeType":"ElementaryTypeName","src":"5654:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5653:6:1"},"scope":780,"src":"5527:286:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":416,"nodeType":"Block","src":"6302:140:1","statements":[{"assignments":[399],"declarations":[{"constant":false,"id":399,"mutability":"mutable","name":"owner","nameLocation":"6320:5:1","nodeType":"VariableDeclaration","scope":416,"src":"6312:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"6312:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":402,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":400,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"6328:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6328:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6312:28:1"},{"expression":{"arguments":[{"id":404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6359:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":405,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"6366:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":407,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6385:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":408,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"6392:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":406,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"6375:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6375:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":410,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"6403:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6375:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":403,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"6350:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6350:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":413,"nodeType":"ExpressionStatement","src":"6350:64:1"},{"expression":{"hexValue":"74727565","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":397,"id":415,"nodeType":"Return","src":"6424:11:1"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"5819:384:1","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":417,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6217:17:1","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"spender","nameLocation":"6243:7:1","nodeType":"VariableDeclaration","scope":417,"src":"6235:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"6235:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"addedValue","nameLocation":"6260:10:1","nodeType":"VariableDeclaration","scope":417,"src":"6252:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"6252:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6234:37:1"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":417,"src":"6296:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6295:6:1"},"scope":780,"src":"6208:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":457,"nodeType":"Block","src":"7028:328:1","statements":[{"assignments":[428],"declarations":[{"constant":false,"id":428,"mutability":"mutable","name":"owner","nameLocation":"7046:5:1","nodeType":"VariableDeclaration","scope":457,"src":"7038:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"7038:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":431,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":429,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"7054:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7054:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7038:28:1"},{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"currentAllowance","nameLocation":"7084:16:1","nodeType":"VariableDeclaration","scope":457,"src":"7076:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"7076:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":438,"initialValue":{"arguments":[{"id":435,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"7113:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":436,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7120:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":434,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"7103:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7103:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7076:52:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":440,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"7146:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":441,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7166:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7146:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7183:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7138:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7138:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"7138:85:1"},{"id":454,"nodeType":"UncheckedBlock","src":"7233:95:1","statements":[{"expression":{"arguments":[{"id":447,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"7266:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":448,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7273:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":449,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"7282:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":450,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7301:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7282:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":446,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"7257:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7257:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":453,"nodeType":"ExpressionStatement","src":"7257:60:1"}]},{"expression":{"hexValue":"74727565","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7345:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":426,"id":456,"nodeType":"Return","src":"7338:11:1"}]},"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"6448:476:1","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":458,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6938:17:1","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"spender","nameLocation":"6964:7:1","nodeType":"VariableDeclaration","scope":458,"src":"6956:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"6956:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"subtractedValue","nameLocation":"6981:15:1","nodeType":"VariableDeclaration","scope":458,"src":"6973:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"6973:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6955:42:1"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":458,"src":"7022:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":424,"name":"bool","nodeType":"ElementaryTypeName","src":"7022:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7021:6:1"},"scope":780,"src":"6929:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":534,"nodeType":"Block","src":"7918:710:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":469,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7936:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7944:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"7944:7:1","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7944:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7936:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7956:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7928:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7928:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":477,"nodeType":"ExpressionStatement","src":"7928:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8014:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8028:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8020:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"8020:7:1","typeDescriptions":{}}},"id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8014:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8032:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8006:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8006:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":487,"nodeType":"ExpressionStatement","src":"8006:64:1"},{"expression":{"arguments":[{"id":489,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8102:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":490,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8108:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":491,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8112:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":488,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"8081:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8081:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"8081:38:1"},{"assignments":[495],"declarations":[{"constant":false,"id":495,"mutability":"mutable","name":"fromBalance","nameLocation":"8138:11:1","nodeType":"VariableDeclaration","scope":534,"src":"8130:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"8130:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":499,"initialValue":{"baseExpression":{"id":496,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"8152:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":498,"indexExpression":{"id":497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8162:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8152:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8130:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":501,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8185:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":502,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8200:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8185:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8208:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8177:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8177:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"8177:72:1"},{"id":521,"nodeType":"UncheckedBlock","src":"8259:273:1","statements":[{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":507,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"8283:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":509,"indexExpression":{"id":508,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8293:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8283:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":510,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8301:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":511,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8315:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8301:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8283:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":514,"nodeType":"ExpressionStatement","src":"8283:38:1"},{"expression":{"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":515,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"8498:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":517,"indexExpression":{"id":516,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8508:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8498:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":518,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8515:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8498:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":520,"nodeType":"ExpressionStatement","src":"8498:23:1"}]},{"eventCall":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8556:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8562:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8566:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8547:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8547:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"EmitStatement","src":"8542:31:1"},{"expression":{"arguments":[{"id":529,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8604:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8610:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"8614:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":528,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"8584:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8584:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"8584:37:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7362:443:1","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":535,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7819:9:1","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"from","nameLocation":"7846:4:1","nodeType":"VariableDeclaration","scope":535,"src":"7838:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7838:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"to","nameLocation":"7868:2:1","nodeType":"VariableDeclaration","scope":535,"src":"7860:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"7860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"amount","nameLocation":"7888:6:1","nodeType":"VariableDeclaration","scope":535,"src":"7880:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"7880:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7828:72:1"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[],"src":"7918:0:1"},"scope":780,"src":"7810:818:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":591,"nodeType":"Block","src":"8969:470:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":544,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"8987:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8998:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"8998:7:1","typeDescriptions":{}}},"id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8998:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8987:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9010:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8979:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8979:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"ExpressionStatement","src":"8979:65:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9084:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9076:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"9076:7:1","typeDescriptions":{}}},"id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9076:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":558,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"9088:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"9097:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":553,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9055:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9055:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":561,"nodeType":"ExpressionStatement","src":"9055:49:1"},{"expression":{"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":562,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"9115:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":563,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"9131:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9115:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":565,"nodeType":"ExpressionStatement","src":"9115:22:1"},{"id":572,"nodeType":"UncheckedBlock","src":"9147:175:1","statements":[{"expression":{"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":566,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"9283:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":568,"indexExpression":{"id":567,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"9293:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9283:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":569,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"9305:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9283:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":571,"nodeType":"ExpressionStatement","src":"9283:28:1"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9353:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9345:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"9345:7:1","typeDescriptions":{}}},"id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9345:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":578,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"9357:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":579,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"9366:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":573,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"9336:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9336:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"EmitStatement","src":"9331:42:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9404:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"9404:7:1","typeDescriptions":{}}},"id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9404:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":587,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"9416:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"9425:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":582,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"9384:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9384:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"9384:48:1"}]},"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"8634:265:1","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":592,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8913:5:1","nodeType":"FunctionDefinition","parameters":{"id":541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"account","nameLocation":"8927:7:1","nodeType":"VariableDeclaration","scope":592,"src":"8919:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"8919:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"amount","nameLocation":"8944:6:1","nodeType":"VariableDeclaration","scope":592,"src":"8936:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"8936:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8918:33:1"},"returnParameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"8969:0:1"},"scope":780,"src":"8904:535:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"9824:594:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":601,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"9842:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9861:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9853:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"9853:7:1","typeDescriptions":{}}},"id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9853:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9842:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9865:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9834:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9834:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":609,"nodeType":"ExpressionStatement","src":"9834:67:1"},{"expression":{"arguments":[{"id":611,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"9933:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9950:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9942:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"9942:7:1","typeDescriptions":{}}},"id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9942:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"9954:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":610,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"9912:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9912:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":618,"nodeType":"ExpressionStatement","src":"9912:49:1"},{"assignments":[620],"declarations":[{"constant":false,"id":620,"mutability":"mutable","name":"accountBalance","nameLocation":"9980:14:1","nodeType":"VariableDeclaration","scope":663,"src":"9972:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"9972:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":624,"initialValue":{"baseExpression":{"id":621,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"9997:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":623,"indexExpression":{"id":622,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10007:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9997:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9972:43:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"10033:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":627,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"10051:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10059:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10025:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10025:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"ExpressionStatement","src":"10025:71:1"},{"id":644,"nodeType":"UncheckedBlock","src":"10106:194:1","statements":[{"expression":{"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":632,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"10130:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":634,"indexExpression":{"id":633,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10140:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10130:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":635,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"10151:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"10168:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10151:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10130:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":639,"nodeType":"ExpressionStatement","src":"10130:44:1"},{"expression":{"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":640,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"10267:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":641,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"10283:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10267:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":643,"nodeType":"ExpressionStatement","src":"10267:22:1"}]},{"eventCall":{"arguments":[{"id":646,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10324:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10341:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10333:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"10333:7:1","typeDescriptions":{}}},"id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"10345:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":645,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"10315:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10315:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"EmitStatement","src":"10310:42:1"},{"expression":{"arguments":[{"id":655,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10383:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10392:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"10392:7:1","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10392:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"10404:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"10363:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10363:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"10363:48:1"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"9445:309:1","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9768:5:1","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"account","nameLocation":"9782:7:1","nodeType":"VariableDeclaration","scope":664,"src":"9774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"9774:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"amount","nameLocation":"9799:6:1","nodeType":"VariableDeclaration","scope":664,"src":"9791:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"9791:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9773:33:1"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"9824:0:1"},"scope":780,"src":"9759:659:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":708,"nodeType":"Block","src":"10954:257:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":675,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"10972:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10989:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10981:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"10981:7:1","typeDescriptions":{}}},"id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10981:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10972:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10993:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":674,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10964:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10964:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"10964:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":685,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"11050:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11069:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11061:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"11061:7:1","typeDescriptions":{}}},"id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11061:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11050:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11073:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11042:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11042:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"ExpressionStatement","src":"11042:68:1"},{"expression":{"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":694,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"11121:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":697,"indexExpression":{"id":695,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"11133:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11121:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":698,"indexExpression":{"id":696,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"11140:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11121:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":699,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"11151:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11121:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":701,"nodeType":"ExpressionStatement","src":"11121:36:1"},{"eventCall":{"arguments":[{"id":703,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"11181:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":704,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"11188:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":705,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"11197:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":702,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"11172:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11172:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":707,"nodeType":"EmitStatement","src":"11167:37:1"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"10424:412:1","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":709,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10850:8:1","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"owner","nameLocation":"10876:5:1","nodeType":"VariableDeclaration","scope":709,"src":"10868:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"10868:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"spender","nameLocation":"10899:7:1","nodeType":"VariableDeclaration","scope":709,"src":"10891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"10891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"amount","nameLocation":"10924:6:1","nodeType":"VariableDeclaration","scope":709,"src":"10916:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"10916:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10858:78:1"},"returnParameters":{"id":673,"nodeType":"ParameterList","parameters":[],"src":"10954:0:1"},"scope":780,"src":"10841:370:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":751,"nodeType":"Block","src":"11612:321:1","statements":[{"assignments":[720],"declarations":[{"constant":false,"id":720,"mutability":"mutable","name":"currentAllowance","nameLocation":"11630:16:1","nodeType":"VariableDeclaration","scope":751,"src":"11622:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint256","nodeType":"ElementaryTypeName","src":"11622:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":725,"initialValue":{"arguments":[{"id":722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"11659:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"11666:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":721,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"11649:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11649:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11622:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":726,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"11688:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11713:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":728,"name":"uint256","nodeType":"ElementaryTypeName","src":"11713:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":727,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11708:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11708:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11722:3:1","memberName":"max","nodeType":"MemberAccess","src":"11708:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11688:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":750,"nodeType":"IfStatement","src":"11684:243:1","trueBody":{"id":749,"nodeType":"Block","src":"11727:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":734,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"11749:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":735,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"11769:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11749:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11777:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11741:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11741:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"ExpressionStatement","src":"11741:68:1"},{"id":748,"nodeType":"UncheckedBlock","src":"11823:94:1","statements":[{"expression":{"arguments":[{"id":741,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"11860:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"11867:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":743,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"11876:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":744,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"11895:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11876:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":740,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"11851:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11851:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"11851:51:1"}]}]}}]},"documentation":{"id":710,"nodeType":"StructuredDocumentation","src":"11217:270:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":752,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11501:15:1","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"owner","nameLocation":"11534:5:1","nodeType":"VariableDeclaration","scope":752,"src":"11526:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"11526:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"spender","nameLocation":"11557:7:1","nodeType":"VariableDeclaration","scope":752,"src":"11549:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"11549:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"amount","nameLocation":"11582:6:1","nodeType":"VariableDeclaration","scope":752,"src":"11574:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"11574:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11516:78:1"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"11612:0:1"},"scope":780,"src":"11492:441:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":762,"nodeType":"Block","src":"12636:2:1","statements":[]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"11939:573:1","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":763,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12526:20:1","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"from","nameLocation":"12564:4:1","nodeType":"VariableDeclaration","scope":763,"src":"12556:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"12556:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"to","nameLocation":"12586:2:1","nodeType":"VariableDeclaration","scope":763,"src":"12578:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"12578:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"amount","nameLocation":"12606:6:1","nodeType":"VariableDeclaration","scope":763,"src":"12598:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"12598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12546:72:1"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"12636:0:1"},"scope":780,"src":"12517:121:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":773,"nodeType":"Block","src":"13344:2:1","statements":[]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"12644:577:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":774,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13235:19:1","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"from","nameLocation":"13272:4:1","nodeType":"VariableDeclaration","scope":774,"src":"13264:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"13264:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"to","nameLocation":"13294:2:1","nodeType":"VariableDeclaration","scope":774,"src":"13286:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"13286:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"amount","nameLocation":"13314:6:1","nodeType":"VariableDeclaration","scope":774,"src":"13306:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"13306:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13254:72:1"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"13344:0:1"},"scope":780,"src":"13226:120:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"13352:254:1","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":779,"mutability":"mutable","name":"__gap","nameLocation":"13631:5:1","nodeType":"VariableDeclaration","scope":780,"src":"13611:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"13611:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":778,"length":{"hexValue":"3435","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13619:2:1","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13611:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":781,"src":"1480:12159:1","usedErrors":[]}],"src":"105:13535:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[858]},"id":859,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":782,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":858,"linearizedBaseContracts":[858],"name":"IERC20Upgradeable","nameLocation":"212:17:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"236:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":792,"name":"Transfer","nameLocation":"405:8:2","nodeType":"EventDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:2","nodeType":"VariableDeclaration","scope":792,"src":"414:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:2","nodeType":"VariableDeclaration","scope":792,"src":"436:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:2","nodeType":"VariableDeclaration","scope":792,"src":"456:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:2"},"src":"399:72:2"},{"anonymous":false,"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"477:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":801,"name":"Approval","nameLocation":"636:8:2","nodeType":"EventDefinition","parameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:2","nodeType":"VariableDeclaration","scope":801,"src":"645:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":797,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:2","nodeType":"VariableDeclaration","scope":801,"src":"668:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":799,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:2","nodeType":"VariableDeclaration","scope":801,"src":"693:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:2"},"src":"630:78:2"},{"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"714:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":807,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:2","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[],"src":"805:2:2"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":807,"src":"831:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:2"},"scope":858,"src":"785:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"846:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":815,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:2","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"account","nameLocation":"950:7:2","nodeType":"VariableDeclaration","scope":815,"src":"942:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:2"},"returnParameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":815,"src":"982:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:2"},"scope":858,"src":"923:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"997:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":825,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:2","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"to","nameLocation":"1230:2:2","nodeType":"VariableDeclaration","scope":825,"src":"1222:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"amount","nameLocation":"1242:6:2","nodeType":"VariableDeclaration","scope":825,"src":"1234:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:2"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":825,"src":"1268:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":822,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:2"},"scope":858,"src":"1204:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"1280:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":835,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:2","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"owner","nameLocation":"1576:5:2","nodeType":"VariableDeclaration","scope":835,"src":"1568:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"spender","nameLocation":"1591:7:2","nodeType":"VariableDeclaration","scope":835,"src":"1583:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:2"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":835,"src":"1623:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:2"},"scope":858,"src":"1549:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":836,"nodeType":"StructuredDocumentation","src":"1638:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":845,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:2","nodeType":"FunctionDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":838,"mutability":"mutable","name":"spender","nameLocation":"2310:7:2","nodeType":"VariableDeclaration","scope":845,"src":"2302:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":840,"mutability":"mutable","name":"amount","nameLocation":"2327:6:2","nodeType":"VariableDeclaration","scope":845,"src":"2319:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:2"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":845,"src":"2353:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":842,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:2"},"scope":858,"src":"2285:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"2365:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":857,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:2","nodeType":"FunctionDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"from","nameLocation":"2696:4:2","nodeType":"VariableDeclaration","scope":857,"src":"2688:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"to","nameLocation":"2718:2:2","nodeType":"VariableDeclaration","scope":857,"src":"2710:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"amount","nameLocation":"2738:6:2","nodeType":"VariableDeclaration","scope":857,"src":"2730:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:72:2"},"returnParameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":857,"src":"2769:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":854,"name":"bool","nodeType":"ElementaryTypeName","src":"2769:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2768:6:2"},"scope":858,"src":"2657:118:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":859,"src":"202:2575:2","usedErrors":[]}],"src":"106:2672:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[883],"IERC20Upgradeable":[858]},"id":884,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":860,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":861,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":884,"sourceUnit":859,"src":"135:34:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":863,"name":"IERC20Upgradeable","nameLocations":["327:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":858,"src":"327:17:3"},"id":864,"nodeType":"InheritanceSpecifier","src":"327:17:3"}],"canonicalName":"IERC20MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"171:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":883,"linearizedBaseContracts":[883,858],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"351:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":870,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:3","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[],"src":"423:2:3"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":870,"src":"449:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":867,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:3"},"scope":883,"src":"410:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"470:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"546:2:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"572:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":873,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:3"},"scope":883,"src":"531:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"593:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":882,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:3","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"680:2:3"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":882,"src":"706:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":879,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:3"},"scope":883,"src":"663:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":884,"src":"288:427:3","usedErrors":[]}],"src":"110:606:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1167]},"id":1168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":885,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1167,"linearizedBaseContracts":[1167],"name":"AddressUpgradeable","nameLocation":"202:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":900,"nodeType":"Block","src":"1252:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":894,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"1476:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1484:4:4","memberName":"code","nodeType":"MemberAccess","src":"1476:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1489:6:4","memberName":"length","nodeType":"MemberAccess","src":"1476:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":893,"id":899,"nodeType":"Return","src":"1469:30:4"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"227:954:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":901,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:4","nodeType":"FunctionDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"account","nameLocation":"1214:7:4","nodeType":"VariableDeclaration","scope":901,"src":"1206:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:4"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"1246:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":891,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:4"},"scope":1167,"src":"1186:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"2494:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":912,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1167","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1167","typeString":"library AddressUpgradeable"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:4","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:7:4","memberName":"balance","nodeType":"MemberAccess","src":"2512:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2537:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"ExpressionStatement","src":"2504:73:4"},{"assignments":[921,null],"declarations":[{"constant":false,"id":921,"mutability":"mutable","name":"success","nameLocation":"2594:7:4","nodeType":"VariableDeclaration","scope":934,"src":"2589:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":920,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":928,"initialValue":{"arguments":[{"hexValue":"","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":922,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2607:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2617:4:4","memberName":"call","nodeType":"MemberAccess","src":"2607:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":924,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2629:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:4"},{"expression":{"arguments":[{"id":930,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"2658:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"2650:78:4"}]},"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"1512:906:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":935,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:4","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:4","nodeType":"VariableDeclaration","scope":935,"src":"2442:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"amount","nameLocation":"2477:6:4","nodeType":"VariableDeclaration","scope":935,"src":"2469:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:4"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"2494:0:4"},"scope":1167,"src":"2423:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"3566:96:4","statements":[{"expression":{"arguments":[{"id":946,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"3605:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":947,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"3613:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3619:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3622:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":945,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[993,1037],"referencedDeclaration":1037,"src":"3583:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3583:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":944,"id":951,"nodeType":"Return","src":"3576:79:4"}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"2741:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:4","nodeType":"FunctionDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"target","nameLocation":"3507:6:4","nodeType":"VariableDeclaration","scope":953,"src":"3499:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"data","nameLocation":"3528:4:4","nodeType":"VariableDeclaration","scope":953,"src":"3515:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":939,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:4"},"returnParameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":953,"src":"3552:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":942,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:4"},"scope":1167,"src":"3477:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":972,"nodeType":"Block","src":"4031:76:4","statements":[{"expression":{"arguments":[{"id":966,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"4070:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":967,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4078:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":969,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"4087:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":965,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[993,1037],"referencedDeclaration":1037,"src":"4048:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":964,"id":971,"nodeType":"Return","src":"4041:59:4"}]},"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"3668:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":973,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3893:12:4","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"target","nameLocation":"3923:6:4","nodeType":"VariableDeclaration","scope":973,"src":"3915:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"3915:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"data","nameLocation":"3952:4:4","nodeType":"VariableDeclaration","scope":973,"src":"3939:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":957,"name":"bytes","nodeType":"ElementaryTypeName","src":"3939:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"errorMessage","nameLocation":"3980:12:4","nodeType":"VariableDeclaration","scope":973,"src":"3966:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":959,"name":"string","nodeType":"ElementaryTypeName","src":"3966:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3905:93:4"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"4017:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":962,"name":"bytes","nodeType":"ElementaryTypeName","src":"4017:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4016:14:4"},"scope":1167,"src":"3884:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"4612:111:4","statements":[{"expression":{"arguments":[{"id":986,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"4651:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4659:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"4665:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4672:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":985,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[993,1037],"referencedDeclaration":1037,"src":"4629:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4629:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":984,"id":991,"nodeType":"Return","src":"4622:94:4"}]},"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"4113:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4478:21:4","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"target","nameLocation":"4517:6:4","nodeType":"VariableDeclaration","scope":993,"src":"4509:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"4509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"data","nameLocation":"4546:4:4","nodeType":"VariableDeclaration","scope":993,"src":"4533:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":977,"name":"bytes","nodeType":"ElementaryTypeName","src":"4533:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"value","nameLocation":"4568:5:4","nodeType":"VariableDeclaration","scope":993,"src":"4560:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"4560:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:80:4"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":993,"src":"4598:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":982,"name":"bytes","nodeType":"ElementaryTypeName","src":"4598:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4597:14:4"},"scope":1167,"src":"4469:254:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1036,"nodeType":"Block","src":"5150:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1010,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5176:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1167","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1167","typeString":"library AddressUpgradeable"}],"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5168:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:4","typeDescriptions":{}}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5182:7:4","memberName":"balance","nodeType":"MemberAccess","src":"5168:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"5193:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5200:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5160:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1017,"nodeType":"ExpressionStatement","src":"5160:81:4"},{"assignments":[1019,1021],"declarations":[{"constant":false,"id":1019,"mutability":"mutable","name":"success","nameLocation":"5257:7:4","nodeType":"VariableDeclaration","scope":1036,"src":"5252:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1018,"name":"bool","nodeType":"ElementaryTypeName","src":"5252:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"returndata","nameLocation":"5279:10:4","nodeType":"VariableDeclaration","scope":1036,"src":"5266:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1020,"name":"bytes","nodeType":"ElementaryTypeName","src":"5266:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1028,"initialValue":{"arguments":[{"id":1026,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"5319:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1022,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5293:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5300:4:4","memberName":"call","nodeType":"MemberAccess","src":"5293:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"5312:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5293:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5293:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5251:73:4"},{"expression":{"arguments":[{"id":1030,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"5368:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1031,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"5376:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1032,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5385:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1033,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"5397:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1029,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5341:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1006,"id":1035,"nodeType":"Return","src":"5334:76:4"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"4729:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1037,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4980:21:4","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"target","nameLocation":"5019:6:4","nodeType":"VariableDeclaration","scope":1037,"src":"5011:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"data","nameLocation":"5048:4:4","nodeType":"VariableDeclaration","scope":1037,"src":"5035:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":997,"name":"bytes","nodeType":"ElementaryTypeName","src":"5035:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"value","nameLocation":"5070:5:4","nodeType":"VariableDeclaration","scope":1037,"src":"5062:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"5062:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"errorMessage","nameLocation":"5099:12:4","nodeType":"VariableDeclaration","scope":1037,"src":"5085:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1001,"name":"string","nodeType":"ElementaryTypeName","src":"5085:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5001:116:4"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1037,"src":"5136:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"5136:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5135:14:4"},"scope":1167,"src":"4971:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"5694:97:4","statements":[{"expression":{"arguments":[{"id":1048,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"5730:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"5738:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5744:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1047,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1054,1083],"referencedDeclaration":1083,"src":"5711:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5711:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1046,"id":1052,"nodeType":"Return","src":"5704:80:4"}]},"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"5423:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5603:18:4","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"target","nameLocation":"5630:6:4","nodeType":"VariableDeclaration","scope":1054,"src":"5622:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"5622:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"data","nameLocation":"5651:4:4","nodeType":"VariableDeclaration","scope":1054,"src":"5638:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"5638:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5621:35:4"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"5680:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1044,"name":"bytes","nodeType":"ElementaryTypeName","src":"5680:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5679:14:4"},"scope":1167,"src":"5594:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1082,"nodeType":"Block","src":"6133:168:4","statements":[{"assignments":[1067,1069],"declarations":[{"constant":false,"id":1067,"mutability":"mutable","name":"success","nameLocation":"6149:7:4","nodeType":"VariableDeclaration","scope":1082,"src":"6144:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1066,"name":"bool","nodeType":"ElementaryTypeName","src":"6144:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"returndata","nameLocation":"6171:10:4","nodeType":"VariableDeclaration","scope":1082,"src":"6158:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"6158:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1074,"initialValue":{"arguments":[{"id":1072,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"6203:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1070,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"6185:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6192:10:4","memberName":"staticcall","nodeType":"MemberAccess","src":"6185:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6185:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6143:65:4"},{"expression":{"arguments":[{"id":1076,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"6252:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1077,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"6260:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1078,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"6269:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1079,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"6281:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1075,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"6225:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1065,"id":1081,"nodeType":"Return","src":"6218:76:4"}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"5797:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1083,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5984:18:4","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"target","nameLocation":"6020:6:4","nodeType":"VariableDeclaration","scope":1083,"src":"6012:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"6012:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"data","nameLocation":"6049:4:4","nodeType":"VariableDeclaration","scope":1083,"src":"6036:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1058,"name":"bytes","nodeType":"ElementaryTypeName","src":"6036:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"errorMessage","nameLocation":"6077:12:4","nodeType":"VariableDeclaration","scope":1083,"src":"6063:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1060,"name":"string","nodeType":"ElementaryTypeName","src":"6063:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6002:93:4"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1083,"src":"6119:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1063,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6118:14:4"},"scope":1167,"src":"5975:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1121,"nodeType":"Block","src":"6783:434:4","statements":[{"condition":{"id":1097,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"6797:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1119,"nodeType":"Block","src":"7153:58:4","statements":[{"expression":{"arguments":[{"id":1115,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"7175:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1116,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"7187:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1114,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7167:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7167:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"ExpressionStatement","src":"7167:33:4"}]},"id":1120,"nodeType":"IfStatement","src":"6793:418:4","trueBody":{"id":1113,"nodeType":"Block","src":"6806:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1098,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"6824:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6835:6:4","memberName":"length","nodeType":"MemberAccess","src":"6824:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6845:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6824:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1110,"nodeType":"IfStatement","src":"6820:286:4","trueBody":{"id":1109,"nodeType":"Block","src":"6848:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1104,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"7050:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1103,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"7039:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7059:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1102,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7031:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7031:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"7031:60:4"}]}},{"expression":{"id":1111,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"7126:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1096,"id":1112,"nodeType":"Return","src":"7119:17:4"}]}}]},"documentation":{"id":1084,"nodeType":"StructuredDocumentation","src":"6307:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1122,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"6598:26:4","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1086,"mutability":"mutable","name":"target","nameLocation":"6642:6:4","nodeType":"VariableDeclaration","scope":1122,"src":"6634:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"success","nameLocation":"6663:7:4","nodeType":"VariableDeclaration","scope":1122,"src":"6658:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1087,"name":"bool","nodeType":"ElementaryTypeName","src":"6658:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"returndata","nameLocation":"6693:10:4","nodeType":"VariableDeclaration","scope":1122,"src":"6680:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1089,"name":"bytes","nodeType":"ElementaryTypeName","src":"6680:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"errorMessage","nameLocation":"6727:12:4","nodeType":"VariableDeclaration","scope":1122,"src":"6713:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1091,"name":"string","nodeType":"ElementaryTypeName","src":"6713:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6624:121:4"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1122,"src":"6769:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1094,"name":"bytes","nodeType":"ElementaryTypeName","src":"6769:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6768:14:4"},"scope":1167,"src":"6589:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1145,"nodeType":"Block","src":"7598:135:4","statements":[{"condition":{"id":1134,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"7612:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1143,"nodeType":"Block","src":"7669:58:4","statements":[{"expression":{"arguments":[{"id":1139,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"7691:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1140,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"7703:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1138,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7683:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"7683:33:4"}]},"id":1144,"nodeType":"IfStatement","src":"7608:119:4","trueBody":{"id":1137,"nodeType":"Block","src":"7621:42:4","statements":[{"expression":{"id":1135,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"7642:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1133,"id":1136,"nodeType":"Return","src":"7635:17:4"}]}}]},"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"7223:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1146,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7447:16:4","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"success","nameLocation":"7478:7:4","nodeType":"VariableDeclaration","scope":1146,"src":"7473:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1124,"name":"bool","nodeType":"ElementaryTypeName","src":"7473:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"returndata","nameLocation":"7508:10:4","nodeType":"VariableDeclaration","scope":1146,"src":"7495:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1126,"name":"bytes","nodeType":"ElementaryTypeName","src":"7495:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"errorMessage","nameLocation":"7542:12:4","nodeType":"VariableDeclaration","scope":1146,"src":"7528:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1128,"name":"string","nodeType":"ElementaryTypeName","src":"7528:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:97:4"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1146,"src":"7584:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1131,"name":"bytes","nodeType":"ElementaryTypeName","src":"7584:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:14:4"},"scope":1167,"src":"7438:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1165,"nodeType":"Block","src":"7822:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1153,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"7898:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7909:6:4","memberName":"length","nodeType":"MemberAccess","src":"7898:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7898:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1163,"nodeType":"Block","src":"8228:45:4","statements":[{"expression":{"arguments":[{"id":1160,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8249:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1159,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8242:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8242:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"ExpressionStatement","src":"8242:20:4"}]},"id":1164,"nodeType":"IfStatement","src":"7894:379:4","trueBody":{"id":1158,"nodeType":"Block","src":"7921:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"8079:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8097:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8126:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8120:5:4"},"nodeType":"YulFunctionCall","src":"8120:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8101:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8165:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8169:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8161:3:4"},"nodeType":"YulFunctionCall","src":"8161:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8182:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8154:6:4"},"nodeType":"YulFunctionCall","src":"8154:44:4"},"nodeType":"YulExpressionStatement","src":"8154:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1148,"isOffset":false,"isSlot":false,"src":"8126:10:4","valueSize":1},{"declaration":1148,"isOffset":false,"isSlot":false,"src":"8169:10:4","valueSize":1}],"id":1157,"nodeType":"InlineAssembly","src":"8070:142:4"}]}}]},"id":1166,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"7748:7:4","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"returndata","nameLocation":"7769:10:4","nodeType":"VariableDeclaration","scope":1166,"src":"7756:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1147,"name":"bytes","nodeType":"ElementaryTypeName","src":"7756:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"errorMessage","nameLocation":"7795:12:4","nodeType":"VariableDeclaration","scope":1166,"src":"7781:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1149,"name":"string","nodeType":"ElementaryTypeName","src":"7781:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:53:4"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[],"src":"7822:0:4"},"scope":1167,"src":"7739:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1168,"src":"194:8087:4","usedErrors":[]}],"src":"101:8181:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1167],"ContextUpgradeable":[1209],"Initializable":[168]},"id":1210,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1169,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1210,"sourceUnit":169,"src":"110:42:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1172,"name":"Initializable","nameLocations":["691:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"691:13:5"},"id":1173,"nodeType":"InheritanceSpecifier","src":"691:13:5"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"154:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1209,"linearizedBaseContracts":[1209,168],"name":"ContextUpgradeable","nameLocation":"669:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1178,"nodeType":"Block","src":"763:7:5","statements":[]},"id":1179,"implemented":true,"kind":"function","modifiers":[{"id":1176,"kind":"modifierInvocation","modifierName":{"id":1175,"name":"onlyInitializing","nameLocations":["746:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"746:16:5"},"nodeType":"ModifierInvocation","src":"746:16:5"}],"name":"__Context_init","nameLocation":"720:14:5","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"734:2:5"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"763:0:5"},"scope":1209,"src":"711:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1184,"nodeType":"Block","src":"838:7:5","statements":[]},"id":1185,"implemented":true,"kind":"function","modifiers":[{"id":1182,"kind":"modifierInvocation","modifierName":{"id":1181,"name":"onlyInitializing","nameLocations":["821:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"821:16:5"},"nodeType":"ModifierInvocation","src":"821:16:5"}],"name":"__Context_init_unchained","nameLocation":"785:24:5","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[],"src":"809:2:5"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"838:0:5"},"scope":1209,"src":"776:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"912:34:5","statements":[{"expression":{"expression":{"id":1190,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"929:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"933:6:5","memberName":"sender","nodeType":"MemberAccess","src":"929:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1189,"id":1192,"nodeType":"Return","src":"922:17:5"}]},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"859:10:5","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"869:2:5"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1194,"src":"903:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"902:9:5"},"scope":1209,"src":"850:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1202,"nodeType":"Block","src":"1019:32:5","statements":[{"expression":{"expression":{"id":1199,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1036:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:4:5","memberName":"data","nodeType":"MemberAccess","src":"1036:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1198,"id":1201,"nodeType":"Return","src":"1029:15:5"}]},"id":1203,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"961:8:5","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"969:2:5"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1203,"src":"1003:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"1003:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1002:16:5"},"scope":1209,"src":"952:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"1057:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1208,"mutability":"mutable","name":"__gap","nameLocation":"1336:5:5","nodeType":"VariableDeclaration","scope":1209,"src":"1316:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1207,"length":{"hexValue":"3530","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1316:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1210,"src":"651:693:5","usedErrors":[]}],"src":"86:1259:5"},"id":5},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2408],"Ownable":[1322]},"id":1323,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1211,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1212,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1323,"sourceUnit":2409,"src":"127:30:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1214,"name":"Context","nameLocations":["683:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2408,"src":"683:7:6"},"id":1215,"nodeType":"InheritanceSpecifier","src":"683:7:6"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"159:494:6","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1322,"linearizedBaseContracts":[1322,2408],"name":"Ownable","nameLocation":"672:7:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1217,"mutability":"mutable","name":"_owner","nameLocation":"713:6:6","nodeType":"VariableDeclaration","scope":1322,"src":"697:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1223,"name":"OwnershipTransferred","nameLocation":"732:20:6","nodeType":"EventDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:6","nodeType":"VariableDeclaration","scope":1223,"src":"753:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:6","nodeType":"VariableDeclaration","scope":1223,"src":"784:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:6"},"src":"726:84:6"},{"body":{"id":1232,"nodeType":"Block","src":"926:49:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1228,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"955:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1227,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"936:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1231,"nodeType":"ExpressionStatement","src":"936:32:6"}]},"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"816:91:6","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":1233,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[],"src":"923:2:6"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[],"src":"926:0:6"},"scope":1322,"src":"912:63:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"1084:41:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1236,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"1094:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"ExpressionStatement","src":"1094:13:6"},{"id":1239,"nodeType":"PlaceholderStatement","src":"1117:1:6"}]},"documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"981:77:6","text":" @dev Throws if called by any account other than the owner."},"id":1241,"name":"onlyOwner","nameLocation":"1072:9:6","nodeType":"ModifierDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[],"src":"1081:2:6"},"src":"1063:62:6","virtual":false,"visibility":"internal"},{"body":{"id":1249,"nodeType":"Block","src":"1256:30:6","statements":[{"expression":{"id":1247,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"1273:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1246,"id":1248,"nodeType":"Return","src":"1266:13:6"}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"1131:65:6","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1250,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:6","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[],"src":"1215:2:6"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1250,"src":"1247:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:6"},"scope":1322,"src":"1201:85:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1263,"nodeType":"Block","src":"1404:85:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1255,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"1422:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1257,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"1433:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"ExpressionStatement","src":"1414:68:6"}]},"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"1292:62:6","text":" @dev Throws if the sender is not the owner."},"id":1264,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:6","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[],"src":"1379:2:6"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"1404:0:6"},"scope":1322,"src":"1359:130:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1277,"nodeType":"Block","src":"1885:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:6","typeDescriptions":{}}},"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1270,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"1895:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"ExpressionStatement","src":"1895:30:6"}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"1495:331:6","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1278,"implemented":true,"kind":"function","modifiers":[{"id":1268,"kind":"modifierInvocation","modifierName":{"id":1267,"name":"onlyOwner","nameLocations":["1875:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"1875:9:6"},"nodeType":"ModifierInvocation","src":"1875:9:6"}],"name":"renounceOwnership","nameLocation":"1840:17:6","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[],"src":"1857:2:6"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[],"src":"1885:0:6"},"scope":1322,"src":"1831:101:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1300,"nodeType":"Block","src":"2151:128:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"2169:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:6","typeDescriptions":{}}},"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":1286,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"ExpressionStatement","src":"2161:73:6"},{"expression":{"arguments":[{"id":1297,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"2263:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1296,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"2244:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1299,"nodeType":"ExpressionStatement","src":"2244:28:6"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"1938:138:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1301,"implemented":true,"kind":"function","modifiers":[{"id":1284,"kind":"modifierInvocation","modifierName":{"id":1283,"name":"onlyOwner","nameLocations":["2141:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"2141:9:6"},"nodeType":"ModifierInvocation","src":"2141:9:6"}],"name":"transferOwnership","nameLocation":"2090:17:6","nodeType":"FunctionDefinition","parameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:6","nodeType":"VariableDeclaration","scope":1301,"src":"2108:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:6"},"returnParameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"2151:0:6"},"scope":1322,"src":"2081:198:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1320,"nodeType":"Block","src":"2496:124:6","statements":[{"assignments":[1308],"declarations":[{"constant":false,"id":1308,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:6","nodeType":"VariableDeclaration","scope":1320,"src":"2506:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1310,"initialValue":{"id":1309,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2525:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:6"},{"expression":{"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1311,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2541:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1312,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"2550:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1314,"nodeType":"ExpressionStatement","src":"2541:17:6"},{"eventCall":{"arguments":[{"id":1316,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"2594:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1317,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"2604:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1315,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"2573:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1319,"nodeType":"EmitStatement","src":"2568:45:6"}]},"documentation":{"id":1302,"nodeType":"StructuredDocumentation","src":"2285:143:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:6","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:6","nodeType":"VariableDeclaration","scope":1321,"src":"2461:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:6"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"2496:0:6"},"scope":1322,"src":"2433:187:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1323,"src":"654:1968:6","usedErrors":[]}],"src":"102:2521:6"},"id":6},"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[1402]},"id":1403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1324,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"125:629:7","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"},"fullyImplemented":true,"id":1402,"linearizedBaseContracts":[1402],"name":"Clones","nameLocation":"763:6:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1344,"nodeType":"Block","src":"1048:483:7","statements":[{"AST":{"nodeType":"YulBlock","src":"1110:348:7","statements":[{"nodeType":"YulVariableDeclaration","src":"1124:22:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1141:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1135:5:7"},"nodeType":"YulFunctionCall","src":"1135:11:7"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1128:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1166:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"1171:66:7","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:7"},"nodeType":"YulFunctionCall","src":"1159:79:7"},"nodeType":"YulExpressionStatement","src":"1159:79:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1262:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"1267:4:7","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1258:3:7"},"nodeType":"YulFunctionCall","src":"1258:14:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1278:4:7","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"1284:14:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1274:3:7"},"nodeType":"YulFunctionCall","src":"1274:25:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1251:6:7"},"nodeType":"YulFunctionCall","src":"1251:49:7"},"nodeType":"YulExpressionStatement","src":"1251:49:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1324:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"1329:4:7","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1320:3:7"},"nodeType":"YulFunctionCall","src":"1320:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"1336:66:7","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1313:6:7"},"nodeType":"YulFunctionCall","src":"1313:90:7"},"nodeType":"YulExpressionStatement","src":"1313:90:7"},{"nodeType":"YulAssignment","src":"1416:32:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1435:1:7","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"1443:4:7","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"1428:6:7"},"nodeType":"YulFunctionCall","src":"1428:20:7"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"1416:8:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1328,"isOffset":false,"isSlot":false,"src":"1284:14:7","valueSize":1},{"declaration":1331,"isOffset":false,"isSlot":false,"src":"1416:8:7","valueSize":1}],"id":1333,"nodeType":"InlineAssembly","src":"1101:357:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1335,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"1475:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1495:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1487:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:7","typeDescriptions":{}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1487:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1475:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a20637265617465206661696c6564","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1499:24:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""},"value":"ERC1167: create failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""}],"id":1334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1467:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1467:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1343,"nodeType":"ExpressionStatement","src":"1467:57:7"}]},"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"776:192:7","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":1345,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"982:5:7","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"implementation","nameLocation":"996:14:7","nodeType":"VariableDeclaration","scope":1345,"src":"988:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"987:24:7"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"instance","nameLocation":"1038:8:7","nodeType":"VariableDeclaration","scope":1345,"src":"1030:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"1030:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1029:18:7"},"scope":1402,"src":"973:558:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1366,"nodeType":"Block","src":"2008:491:7","statements":[{"AST":{"nodeType":"YulBlock","src":"2070:355:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2084:22:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2101:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2095:5:7"},"nodeType":"YulFunctionCall","src":"2095:11:7"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2088:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2126:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"2131:66:7","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2119:6:7"},"nodeType":"YulFunctionCall","src":"2119:79:7"},"nodeType":"YulExpressionStatement","src":"2119:79:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2222:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"2227:4:7","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:7"},"nodeType":"YulFunctionCall","src":"2218:14:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2238:4:7","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2244:14:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2234:3:7"},"nodeType":"YulFunctionCall","src":"2234:25:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2211:6:7"},"nodeType":"YulFunctionCall","src":"2211:49:7"},"nodeType":"YulExpressionStatement","src":"2211:49:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2284:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"2289:4:7","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2280:3:7"},"nodeType":"YulFunctionCall","src":"2280:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"2296:66:7","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2273:6:7"},"nodeType":"YulFunctionCall","src":"2273:90:7"},"nodeType":"YulExpressionStatement","src":"2273:90:7"},{"nodeType":"YulAssignment","src":"2376:39:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2396:1:7","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2399:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"2404:4:7","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"2410:4:7"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"2388:7:7"},"nodeType":"YulFunctionCall","src":"2388:27:7"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"2376:8:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1348,"isOffset":false,"isSlot":false,"src":"2244:14:7","valueSize":1},{"declaration":1353,"isOffset":false,"isSlot":false,"src":"2376:8:7","valueSize":1},{"declaration":1350,"isOffset":false,"isSlot":false,"src":"2410:4:7","valueSize":1}],"id":1355,"nodeType":"InlineAssembly","src":"2061:364:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1357,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"2442:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2462:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2454:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:7","typeDescriptions":{}}},"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2454:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2442:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a2063726561746532206661696c6564","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2466:25:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""},"value":"ERC1167: create2 failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""}],"id":1356,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2434:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1365,"nodeType":"ExpressionStatement","src":"2434:58:7"}]},"documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"1537:364:7","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."},"id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"1915:18:7","nodeType":"FunctionDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"implementation","nameLocation":"1942:14:7","nodeType":"VariableDeclaration","scope":1367,"src":"1934:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"1934:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"salt","nameLocation":"1966:4:7","nodeType":"VariableDeclaration","scope":1367,"src":"1958:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1958:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1933:38:7"},"returnParameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"instance","nameLocation":"1998:8:7","nodeType":"VariableDeclaration","scope":1367,"src":"1990:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1989:18:7"},"scope":1402,"src":"1906:593:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1380,"nodeType":"Block","src":"2774:582:7","statements":[{"AST":{"nodeType":"YulBlock","src":"2836:514:7","statements":[{"nodeType":"YulVariableDeclaration","src":"2850:22:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2861:5:7"},"nodeType":"YulFunctionCall","src":"2861:11:7"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2854:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2892:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"2897:66:7","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2885:6:7"},"nodeType":"YulFunctionCall","src":"2885:79:7"},"nodeType":"YulExpressionStatement","src":"2885:79:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2988:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"2993:4:7","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2984:3:7"},"nodeType":"YulFunctionCall","src":"2984:14:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3004:4:7","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"3010:14:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3000:3:7"},"nodeType":"YulFunctionCall","src":"3000:25:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2977:6:7"},"nodeType":"YulFunctionCall","src":"2977:49:7"},"nodeType":"YulExpressionStatement","src":"2977:49:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3050:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3055:4:7","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3046:3:7"},"nodeType":"YulFunctionCall","src":"3046:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"3062:66:7","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3039:6:7"},"nodeType":"YulFunctionCall","src":"3039:90:7"},"nodeType":"YulExpressionStatement","src":"3039:90:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3153:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3158:4:7","type":"","value":"0x38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3149:3:7"},"nodeType":"YulFunctionCall","src":"3149:14:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3169:4:7","type":"","value":"0x60"},{"name":"deployer","nodeType":"YulIdentifier","src":"3175:8:7"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3165:3:7"},"nodeType":"YulFunctionCall","src":"3165:19:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3142:6:7"},"nodeType":"YulFunctionCall","src":"3142:43:7"},"nodeType":"YulExpressionStatement","src":"3142:43:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3209:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3214:4:7","type":"","value":"0x4c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3205:3:7"},"nodeType":"YulFunctionCall","src":"3205:14:7"},{"name":"salt","nodeType":"YulIdentifier","src":"3221:4:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3198:6:7"},"nodeType":"YulFunctionCall","src":"3198:28:7"},"nodeType":"YulExpressionStatement","src":"3198:28:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3250:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3255:4:7","type":"","value":"0x6c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3246:3:7"},"nodeType":"YulFunctionCall","src":"3246:14:7"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3272:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3277:4:7","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3262:9:7"},"nodeType":"YulFunctionCall","src":"3262:20:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3239:6:7"},"nodeType":"YulFunctionCall","src":"3239:44:7"},"nodeType":"YulExpressionStatement","src":"3239:44:7"},{"nodeType":"YulAssignment","src":"3296:44:7","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3323:3:7"},{"kind":"number","nodeType":"YulLiteral","src":"3328:4:7","type":"","value":"0x37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3319:3:7"},"nodeType":"YulFunctionCall","src":"3319:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"3335:4:7","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3309:9:7"},"nodeType":"YulFunctionCall","src":"3309:31:7"},"variableNames":[{"name":"predicted","nodeType":"YulIdentifier","src":"3296:9:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1374,"isOffset":false,"isSlot":false,"src":"3175:8:7","valueSize":1},{"declaration":1370,"isOffset":false,"isSlot":false,"src":"3010:14:7","valueSize":1},{"declaration":1377,"isOffset":false,"isSlot":false,"src":"3296:9:7","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":false,"src":"3221:4:7","valueSize":1}],"id":1379,"nodeType":"InlineAssembly","src":"2827:523:7"}]},"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"2505:99:7","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"2618:27:7","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"implementation","nameLocation":"2663:14:7","nodeType":"VariableDeclaration","scope":1381,"src":"2655:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"salt","nameLocation":"2695:4:7","nodeType":"VariableDeclaration","scope":1381,"src":"2687:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2687:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"deployer","nameLocation":"2717:8:7","nodeType":"VariableDeclaration","scope":1381,"src":"2709:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"2709:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2645:86:7"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"predicted","nameLocation":"2763:9:7","nodeType":"VariableDeclaration","scope":1381,"src":"2755:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"2755:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2754:19:7"},"scope":1402,"src":"2609:747:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1400,"nodeType":"Block","src":"3611:88:7","statements":[{"expression":{"arguments":[{"id":1392,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"3656:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1393,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"3672:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1396,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3686:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$1402","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$1402","typeString":"library Clones"}],"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3678:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"3678:7:7","typeDescriptions":{}}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3678:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1391,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[1381,1401],"referencedDeclaration":1381,"src":"3628:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3628:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1390,"id":1399,"nodeType":"Return","src":"3621:71:7"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"3362:99:7","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3475:27:7","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"implementation","nameLocation":"3511:14:7","nodeType":"VariableDeclaration","scope":1401,"src":"3503:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"salt","nameLocation":"3535:4:7","nodeType":"VariableDeclaration","scope":1401,"src":"3527:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3527:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3502:38:7"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"predicted","nameLocation":"3596:9:7","nodeType":"VariableDeclaration","scope":1401,"src":"3588:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"3588:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3587:19:7"},"scope":1402,"src":"3466:233:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1403,"src":"755:2946:7","usedErrors":[]}],"src":"100:3602:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2408],"ERC20":[1988],"IERC20":[2066],"IERC20Metadata":[2091]},"id":1989,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1404,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1989,"sourceUnit":2067,"src":"130:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1989,"sourceUnit":2092,"src":"153:41:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1989,"sourceUnit":2409,"src":"195:33:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1409,"name":"Context","nameLocations":["1421:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2408,"src":"1421:7:8"},"id":1410,"nodeType":"InheritanceSpecifier","src":"1421:7:8"},{"baseName":{"id":1411,"name":"IERC20","nameLocations":["1430:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":2066,"src":"1430:6:8"},"id":1412,"nodeType":"InheritanceSpecifier","src":"1430:6:8"},{"baseName":{"id":1413,"name":"IERC20Metadata","nameLocations":["1438:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":2091,"src":"1438:14:8"},"id":1414,"nodeType":"InheritanceSpecifier","src":"1438:14:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"230:1172:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1988,"linearizedBaseContracts":[1988,2091,2066,2408],"name":"ERC20","nameLocation":"1412:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1418,"mutability":"mutable","name":"_balances","nameLocation":"1495:9:8","nodeType":"VariableDeclaration","scope":1988,"src":"1459:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1417,"keyType":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1459:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1424,"mutability":"mutable","name":"_allowances","nameLocation":"1567:11:8","nodeType":"VariableDeclaration","scope":1988,"src":"1511:67:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1423,"keyType":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1511:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":1422,"keyType":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1530:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1426,"mutability":"mutable","name":"_totalSupply","nameLocation":"1601:12:8","nodeType":"VariableDeclaration","scope":1988,"src":"1585:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1428,"mutability":"mutable","name":"_name","nameLocation":"1635:5:8","nodeType":"VariableDeclaration","scope":1988,"src":"1620:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1427,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1430,"mutability":"mutable","name":"_symbol","nameLocation":"1661:7:8","nodeType":"VariableDeclaration","scope":1988,"src":"1646:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1429,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1446,"nodeType":"Block","src":"2034:57:8","statements":[{"expression":{"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1438,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"2044:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1439,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2052:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2044:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1441,"nodeType":"ExpressionStatement","src":"2044:13:8"},{"expression":{"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1442,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"2067:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1443,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2077:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2067:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1445,"nodeType":"ExpressionStatement","src":"2067:17:8"}]},"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"1675:298:8","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1447,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"name_","nameLocation":"2004:5:8","nodeType":"VariableDeclaration","scope":1447,"src":"1990:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1432,"name":"string","nodeType":"ElementaryTypeName","src":"1990:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"symbol_","nameLocation":"2025:7:8","nodeType":"VariableDeclaration","scope":1447,"src":"2011:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1434,"name":"string","nodeType":"ElementaryTypeName","src":"2011:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1989:44:8"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"2034:0:8"},"scope":1988,"src":"1978:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2078],"body":{"id":1456,"nodeType":"Block","src":"2225:29:8","statements":[{"expression":{"id":1454,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"2242:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1453,"id":1455,"nodeType":"Return","src":"2235:12:8"}]},"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"2097:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2165:4:8","nodeType":"FunctionDefinition","overrides":{"id":1450,"nodeType":"OverrideSpecifier","overrides":[],"src":"2192:8:8"},"parameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"2169:2:8"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1457,"src":"2210:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1451,"name":"string","nodeType":"ElementaryTypeName","src":"2210:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2209:15:8"},"scope":1988,"src":"2156:98:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2084],"body":{"id":1466,"nodeType":"Block","src":"2438:31:8","statements":[{"expression":{"id":1464,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"2455:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1463,"id":1465,"nodeType":"Return","src":"2448:14:8"}]},"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"2260:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2376:6:8","nodeType":"FunctionDefinition","overrides":{"id":1460,"nodeType":"OverrideSpecifier","overrides":[],"src":"2405:8:8"},"parameters":{"id":1459,"nodeType":"ParameterList","parameters":[],"src":"2382:2:8"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1467,"src":"2423:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1461,"name":"string","nodeType":"ElementaryTypeName","src":"2423:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2422:15:8"},"scope":1988,"src":"2367:102:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2090],"body":{"id":1476,"nodeType":"Block","src":"3158:26:8","statements":[{"expression":{"hexValue":"3138","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3175:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1473,"id":1475,"nodeType":"Return","src":"3168:9:8"}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"2475:613:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1477,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3102:8:8","nodeType":"FunctionDefinition","overrides":{"id":1470,"nodeType":"OverrideSpecifier","overrides":[],"src":"3133:8:8"},"parameters":{"id":1469,"nodeType":"ParameterList","parameters":[],"src":"3110:2:8"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1477,"src":"3151:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1471,"name":"uint8","nodeType":"ElementaryTypeName","src":"3151:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3150:7:8"},"scope":1988,"src":"3093:91:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2015],"body":{"id":1486,"nodeType":"Block","src":"3314:36:8","statements":[{"expression":{"id":1484,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3331:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1483,"id":1485,"nodeType":"Return","src":"3324:19:8"}]},"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"3190:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3253:11:8","nodeType":"FunctionDefinition","overrides":{"id":1480,"nodeType":"OverrideSpecifier","overrides":[],"src":"3287:8:8"},"parameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"3264:2:8"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"3305:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3304:9:8"},"scope":1988,"src":"3244:106:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2023],"body":{"id":1500,"nodeType":"Block","src":"3491:42:8","statements":[{"expression":{"baseExpression":{"id":1496,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"3508:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1498,"indexExpression":{"id":1497,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"3518:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3508:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1495,"id":1499,"nodeType":"Return","src":"3501:25:8"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"3356:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1501,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3417:9:8","nodeType":"FunctionDefinition","overrides":{"id":1492,"nodeType":"OverrideSpecifier","overrides":[],"src":"3464:8:8"},"parameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"account","nameLocation":"3435:7:8","nodeType":"VariableDeclaration","scope":1501,"src":"3427:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:17:8"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1501,"src":"3482:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:9:8"},"scope":1988,"src":"3408:125:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2033],"body":{"id":1525,"nodeType":"Block","src":"3814:104:8","statements":[{"assignments":[1513],"declarations":[{"constant":false,"id":1513,"mutability":"mutable","name":"owner","nameLocation":"3832:5:8","nodeType":"VariableDeclaration","scope":1525,"src":"3824:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1512,"name":"address","nodeType":"ElementaryTypeName","src":"3824:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1516,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1514,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"3840:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3840:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3824:28:8"},{"expression":{"arguments":[{"id":1518,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3872:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"3879:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"3883:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1517,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"3862:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"3862:28:8"},{"expression":{"hexValue":"74727565","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3907:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1511,"id":1524,"nodeType":"Return","src":"3900:11:8"}]},"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"3539:185:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":1526,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3738:8:8","nodeType":"FunctionDefinition","overrides":{"id":1508,"nodeType":"OverrideSpecifier","overrides":[],"src":"3790:8:8"},"parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"to","nameLocation":"3755:2:8","nodeType":"VariableDeclaration","scope":1526,"src":"3747:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"3747:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"amount","nameLocation":"3767:6:8","nodeType":"VariableDeclaration","scope":1526,"src":"3759:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"3759:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3746:28:8"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1526,"src":"3808:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1509,"name":"bool","nodeType":"ElementaryTypeName","src":"3808:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3807:6:8"},"scope":1988,"src":"3729:189:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2043],"body":{"id":1543,"nodeType":"Block","src":"4074:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1537,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"4091:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1539,"indexExpression":{"id":1538,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"4103:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1541,"indexExpression":{"id":1540,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"4110:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1536,"id":1542,"nodeType":"Return","src":"4084:34:8"}]},"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"3924:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3985:9:8","nodeType":"FunctionDefinition","overrides":{"id":1533,"nodeType":"OverrideSpecifier","overrides":[],"src":"4047:8:8"},"parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"owner","nameLocation":"4003:5:8","nodeType":"VariableDeclaration","scope":1544,"src":"3995:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"spender","nameLocation":"4018:7:8","nodeType":"VariableDeclaration","scope":1544,"src":"4010:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"4010:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3994:32:8"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1544,"src":"4065:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4064:9:8"},"scope":1988,"src":"3976:149:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2053],"body":{"id":1568,"nodeType":"Block","src":"4522:108:8","statements":[{"assignments":[1556],"declarations":[{"constant":false,"id":1556,"mutability":"mutable","name":"owner","nameLocation":"4540:5:8","nodeType":"VariableDeclaration","scope":1568,"src":"4532:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"4532:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1559,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1557,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"4548:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4548:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4532:28:8"},{"expression":{"arguments":[{"id":1561,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"4579:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1562,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"4586:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1563,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"4595:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1560,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"4570:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1565,"nodeType":"ExpressionStatement","src":"4570:32:8"},{"expression":{"hexValue":"74727565","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4619:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1554,"id":1567,"nodeType":"Return","src":"4612:11:8"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"4131:297:8","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1569,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4442:7:8","nodeType":"FunctionDefinition","overrides":{"id":1551,"nodeType":"OverrideSpecifier","overrides":[],"src":"4498:8:8"},"parameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"spender","nameLocation":"4458:7:8","nodeType":"VariableDeclaration","scope":1569,"src":"4450:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"4450:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"amount","nameLocation":"4475:6:8","nodeType":"VariableDeclaration","scope":1569,"src":"4467:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:33:8"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1569,"src":"4516:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1552,"name":"bool","nodeType":"ElementaryTypeName","src":"4516:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4515:6:8"},"scope":1988,"src":"4433:197:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2065],"body":{"id":1601,"nodeType":"Block","src":"5325:153:8","statements":[{"assignments":[1583],"declarations":[{"constant":false,"id":1583,"mutability":"mutable","name":"spender","nameLocation":"5343:7:8","nodeType":"VariableDeclaration","scope":1601,"src":"5335:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1586,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1584,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"5353:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5335:30:8"},{"expression":{"arguments":[{"id":1588,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"5391:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1589,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5397:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"5406:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1587,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"5375:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"5375:38:8"},{"expression":{"arguments":[{"id":1594,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"5433:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"5439:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"5443:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"5423:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5423:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"5423:27:8"},{"expression":{"hexValue":"74727565","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5467:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1581,"id":1600,"nodeType":"Return","src":"5460:11:8"}]},"documentation":{"id":1570,"nodeType":"StructuredDocumentation","src":"4636:551:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5201:12:8","nodeType":"FunctionDefinition","overrides":{"id":1578,"nodeType":"OverrideSpecifier","overrides":[],"src":"5301:8:8"},"parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"from","nameLocation":"5231:4:8","nodeType":"VariableDeclaration","scope":1602,"src":"5223:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1571,"name":"address","nodeType":"ElementaryTypeName","src":"5223:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"to","nameLocation":"5253:2:8","nodeType":"VariableDeclaration","scope":1602,"src":"5245:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"5245:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"amount","nameLocation":"5273:6:8","nodeType":"VariableDeclaration","scope":1602,"src":"5265:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5213:72:8"},"returnParameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1602,"src":"5319:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1579,"name":"bool","nodeType":"ElementaryTypeName","src":"5319:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5318:6:8"},"scope":1988,"src":"5192:286:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1630,"nodeType":"Block","src":"5967:140:8","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"owner","nameLocation":"5985:5:8","nodeType":"VariableDeclaration","scope":1630,"src":"5977:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"5977:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1616,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1614,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"5993:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5993:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5977:28:8"},{"expression":{"arguments":[{"id":1618,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"6024:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1619,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"6031:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1621,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"6050:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1622,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"6057:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1620,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6040:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1624,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"6068:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1617,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"6015:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6015:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"ExpressionStatement","src":"6015:64:8"},{"expression":{"hexValue":"74727565","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6096:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1611,"id":1629,"nodeType":"Return","src":"6089:11:8"}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"5484:384:8","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":1631,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5882:17:8","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"spender","nameLocation":"5908:7:8","nodeType":"VariableDeclaration","scope":1631,"src":"5900:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"addedValue","nameLocation":"5925:10:8","nodeType":"VariableDeclaration","scope":1631,"src":"5917:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5899:37:8"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1631,"src":"5961:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1609,"name":"bool","nodeType":"ElementaryTypeName","src":"5961:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5960:6:8"},"scope":1988,"src":"5873:234:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1671,"nodeType":"Block","src":"6693:328:8","statements":[{"assignments":[1642],"declarations":[{"constant":false,"id":1642,"mutability":"mutable","name":"owner","nameLocation":"6711:5:8","nodeType":"VariableDeclaration","scope":1671,"src":"6703:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1641,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1645,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1643,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"6719:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6719:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6703:28:8"},{"assignments":[1647],"declarations":[{"constant":false,"id":1647,"mutability":"mutable","name":"currentAllowance","nameLocation":"6749:16:8","nodeType":"VariableDeclaration","scope":1671,"src":"6741:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"6741:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1652,"initialValue":{"arguments":[{"id":1649,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"6778:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1650,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"6785:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1648,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6768:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6768:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6741:52:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1654,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"6811:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1655,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"6831:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6811:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6848:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":1653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6803:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"ExpressionStatement","src":"6803:85:8"},{"id":1668,"nodeType":"UncheckedBlock","src":"6898:95:8","statements":[{"expression":{"arguments":[{"id":1661,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"6931:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1662,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"6938:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1663,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"6947:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1664,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"6966:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6947:34:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1660,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"6922:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1667,"nodeType":"ExpressionStatement","src":"6922:60:8"}]},{"expression":{"hexValue":"74727565","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7010:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1640,"id":1670,"nodeType":"Return","src":"7003:11:8"}]},"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"6113:476:8","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":1672,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6603:17:8","nodeType":"FunctionDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"spender","nameLocation":"6629:7:8","nodeType":"VariableDeclaration","scope":1672,"src":"6621:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"6621:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"subtractedValue","nameLocation":"6646:15:8","nodeType":"VariableDeclaration","scope":1672,"src":"6638:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"6638:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6620:42:8"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1672,"src":"6687:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1638,"name":"bool","nodeType":"ElementaryTypeName","src":"6687:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6686:6:8"},"scope":1988,"src":"6594:427:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1748,"nodeType":"Block","src":"7583:543:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"7601:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7609:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1684,"name":"address","nodeType":"ElementaryTypeName","src":"7609:7:8","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7609:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7601:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7621:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":1682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7593:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1691,"nodeType":"ExpressionStatement","src":"7593:68:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1693,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"7679:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7693:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7685:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"7685:7:8","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7685:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7679:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7697:37:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":1692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7671:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7671:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1701,"nodeType":"ExpressionStatement","src":"7671:64:8"},{"expression":{"arguments":[{"id":1703,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"7767:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1704,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"7773:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1705,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"7777:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1702,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"7746:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7746:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"ExpressionStatement","src":"7746:38:8"},{"assignments":[1709],"declarations":[{"constant":false,"id":1709,"mutability":"mutable","name":"fromBalance","nameLocation":"7803:11:8","nodeType":"VariableDeclaration","scope":1748,"src":"7795:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1713,"initialValue":{"baseExpression":{"id":1710,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"7817:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1712,"indexExpression":{"id":1711,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"7827:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7817:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7795:37:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1715,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"7850:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1716,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"7865:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7873:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1714,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7842:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7842:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"ExpressionStatement","src":"7842:72:8"},{"id":1729,"nodeType":"UncheckedBlock","src":"7924:73:8","statements":[{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1721,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"7948:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1723,"indexExpression":{"id":1722,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"7958:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7948:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1724,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"7966:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1725,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"7980:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7966:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1728,"nodeType":"ExpressionStatement","src":"7948:38:8"}]},{"expression":{"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1730,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"8006:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1732,"indexExpression":{"id":1731,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"8016:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8006:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1733,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8023:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8006:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1735,"nodeType":"ExpressionStatement","src":"8006:23:8"},{"eventCall":{"arguments":[{"id":1737,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"8054:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1738,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"8060:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1739,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8064:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1736,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"8045:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8045:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1741,"nodeType":"EmitStatement","src":"8040:31:8"},{"expression":{"arguments":[{"id":1743,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"8102:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1744,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"8108:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1745,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"8112:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1742,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"8082:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8082:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1747,"nodeType":"ExpressionStatement","src":"8082:37:8"}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"7027:443:8","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1749,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7484:9:8","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"from","nameLocation":"7511:4:8","nodeType":"VariableDeclaration","scope":1749,"src":"7503:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"7503:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"to","nameLocation":"7533:2:8","nodeType":"VariableDeclaration","scope":1749,"src":"7525:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1676,"name":"address","nodeType":"ElementaryTypeName","src":"7525:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"amount","nameLocation":"7553:6:8","nodeType":"VariableDeclaration","scope":1749,"src":"7545:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"7545:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7493:72:8"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"7583:0:8"},"scope":1988,"src":"7475:651:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1804,"nodeType":"Block","src":"8467:324:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1758,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"8485:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8504:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8496:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"8496:7:8","typeDescriptions":{}}},"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8496:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8485:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8508:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8477:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8477:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1766,"nodeType":"ExpressionStatement","src":"8477:65:8"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8582:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8574:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"8574:7:8","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8574:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1772,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"8586:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"8595:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1767,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8553:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1775,"nodeType":"ExpressionStatement","src":"8553:49:8"},{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1776,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"8613:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1777,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"8629:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1779,"nodeType":"ExpressionStatement","src":"8613:22:8"},{"expression":{"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1780,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"8645:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1782,"indexExpression":{"id":1781,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"8655:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8645:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1783,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"8667:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8645:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1785,"nodeType":"ExpressionStatement","src":"8645:28:8"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8705:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8697:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"8697:7:8","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8697:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1791,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"8709:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1792,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"8718:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1786,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"8688:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8688:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1794,"nodeType":"EmitStatement","src":"8683:42:8"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8764:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8756:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"8756:7:8","typeDescriptions":{}}},"id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8756:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1800,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"8768:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1801,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"8777:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1795,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"8736:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8736:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1803,"nodeType":"ExpressionStatement","src":"8736:48:8"}]},"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"8132:265:8","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1805,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8411:5:8","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"account","nameLocation":"8425:7:8","nodeType":"VariableDeclaration","scope":1805,"src":"8417:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"8417:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1754,"mutability":"mutable","name":"amount","nameLocation":"8442:6:8","nodeType":"VariableDeclaration","scope":1805,"src":"8434:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"8434:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8416:33:8"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[],"src":"8467:0:8"},"scope":1988,"src":"8402:389:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1876,"nodeType":"Block","src":"9176:511:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1814,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9194:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9213:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9205:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"9205:7:8","typeDescriptions":{}}},"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9205:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9194:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9217:35:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9186:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1822,"nodeType":"ExpressionStatement","src":"9186:67:8"},{"expression":{"arguments":[{"id":1824,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9285:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9302:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9294:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"9294:7:8","typeDescriptions":{}}},"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9294:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1829,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"9306:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1823,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"9264:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1831,"nodeType":"ExpressionStatement","src":"9264:49:8"},{"assignments":[1833],"declarations":[{"constant":false,"id":1833,"mutability":"mutable","name":"accountBalance","nameLocation":"9332:14:8","nodeType":"VariableDeclaration","scope":1876,"src":"9324:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1832,"name":"uint256","nodeType":"ElementaryTypeName","src":"9324:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1837,"initialValue":{"baseExpression":{"id":1834,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9349:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1836,"indexExpression":{"id":1835,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9359:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9349:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9324:43:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1839,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"9385:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1840,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"9403:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9385:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9411:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9377:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9377:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"ExpressionStatement","src":"9377:71:8"},{"id":1853,"nodeType":"UncheckedBlock","src":"9458:79:8","statements":[{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1845,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"9482:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1847,"indexExpression":{"id":1846,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9492:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9482:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1848,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"9503:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1849,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"9520:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9503:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9482:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ExpressionStatement","src":"9482:44:8"}]},{"expression":{"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1854,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"9546:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1855,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"9562:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9546:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1857,"nodeType":"ExpressionStatement","src":"9546:22:8"},{"eventCall":{"arguments":[{"id":1859,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9593:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9610:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9602:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1860,"name":"address","nodeType":"ElementaryTypeName","src":"9602:7:8","typeDescriptions":{}}},"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9602:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1864,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"9614:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1858,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"9584:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9584:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1866,"nodeType":"EmitStatement","src":"9579:42:8"},{"expression":{"arguments":[{"id":1868,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"9652:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9669:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9661:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"9661:7:8","typeDescriptions":{}}},"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9661:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1873,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"9673:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1867,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"9632:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9632:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1875,"nodeType":"ExpressionStatement","src":"9632:48:8"}]},"documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"8797:309:8","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9120:5:8","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1808,"mutability":"mutable","name":"account","nameLocation":"9134:7:8","nodeType":"VariableDeclaration","scope":1877,"src":"9126:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"9126:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"amount","nameLocation":"9151:6:8","nodeType":"VariableDeclaration","scope":1877,"src":"9143:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"9143:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9125:33:8"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"9176:0:8"},"scope":1988,"src":"9111:576:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1921,"nodeType":"Block","src":"10223:257:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1888,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"10241:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10258:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10250:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"10250:7:8","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10250:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10241:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10262:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10233:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10233:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1896,"nodeType":"ExpressionStatement","src":"10233:68:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1898,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"10319:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10338:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10330:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1899,"name":"address","nodeType":"ElementaryTypeName","src":"10330:7:8","typeDescriptions":{}}},"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10330:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10319:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10342:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1897,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10311:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10311:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1906,"nodeType":"ExpressionStatement","src":"10311:68:8"},{"expression":{"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1907,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"10390:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1910,"indexExpression":{"id":1908,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"10402:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10390:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1911,"indexExpression":{"id":1909,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"10409:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10390:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1912,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"10420:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10390:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1914,"nodeType":"ExpressionStatement","src":"10390:36:8"},{"eventCall":{"arguments":[{"id":1916,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"10450:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1917,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"10457:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1918,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"10466:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1915,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"10441:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1920,"nodeType":"EmitStatement","src":"10436:37:8"}]},"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"9693:412:8","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10119:8:8","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"owner","nameLocation":"10145:5:8","nodeType":"VariableDeclaration","scope":1922,"src":"10137:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1879,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"spender","nameLocation":"10168:7:8","nodeType":"VariableDeclaration","scope":1922,"src":"10160:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"10160:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"amount","nameLocation":"10193:6:8","nodeType":"VariableDeclaration","scope":1922,"src":"10185:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"10185:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10127:78:8"},"returnParameters":{"id":1886,"nodeType":"ParameterList","parameters":[],"src":"10223:0:8"},"scope":1988,"src":"10110:370:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1964,"nodeType":"Block","src":"10881:321:8","statements":[{"assignments":[1933],"declarations":[{"constant":false,"id":1933,"mutability":"mutable","name":"currentAllowance","nameLocation":"10899:16:8","nodeType":"VariableDeclaration","scope":1964,"src":"10891:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"10891:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1938,"initialValue":{"arguments":[{"id":1935,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"10928:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1936,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"10935:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1934,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"10918:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10918:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10891:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1939,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"10957:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10982:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"10982:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1940,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10977:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10977:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10991:3:8","memberName":"max","nodeType":"MemberAccess","src":"10977:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10957:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1963,"nodeType":"IfStatement","src":"10953:243:8","trueBody":{"id":1962,"nodeType":"Block","src":"10996:200:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1947,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"11018:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1948,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11038:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11018:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11046:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11010:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11010:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"ExpressionStatement","src":"11010:68:8"},{"id":1961,"nodeType":"UncheckedBlock","src":"11092:94:8","statements":[{"expression":{"arguments":[{"id":1954,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"11129:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1955,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"11136:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"11145:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1957,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"11164:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11145:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1953,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1922,"src":"11120:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11120:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1960,"nodeType":"ExpressionStatement","src":"11120:51:8"}]}]}}]},"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"10486:270:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1965,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10770:15:8","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"owner","nameLocation":"10803:5:8","nodeType":"VariableDeclaration","scope":1965,"src":"10795:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"10795:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1927,"mutability":"mutable","name":"spender","nameLocation":"10826:7:8","nodeType":"VariableDeclaration","scope":1965,"src":"10818:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"10818:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"amount","nameLocation":"10851:6:8","nodeType":"VariableDeclaration","scope":1965,"src":"10843:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"10843:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10785:78:8"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[],"src":"10881:0:8"},"scope":1988,"src":"10761:441:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1975,"nodeType":"Block","src":"11905:2:8","statements":[]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"11208:573:8","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1976,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"11795:20:8","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"from","nameLocation":"11833:4:8","nodeType":"VariableDeclaration","scope":1976,"src":"11825:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1967,"name":"address","nodeType":"ElementaryTypeName","src":"11825:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"to","nameLocation":"11855:2:8","nodeType":"VariableDeclaration","scope":1976,"src":"11847:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"11847:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"amount","nameLocation":"11875:6:8","nodeType":"VariableDeclaration","scope":1976,"src":"11867:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"11867:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11815:72:8"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[],"src":"11905:0:8"},"scope":1988,"src":"11786:121:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1986,"nodeType":"Block","src":"12613:2:8","statements":[]},"documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"11913:577:8","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1987,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12504:19:8","nodeType":"FunctionDefinition","parameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"from","nameLocation":"12541:4:8","nodeType":"VariableDeclaration","scope":1987,"src":"12533:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1978,"name":"address","nodeType":"ElementaryTypeName","src":"12533:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1981,"mutability":"mutable","name":"to","nameLocation":"12563:2:8","nodeType":"VariableDeclaration","scope":1987,"src":"12555:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"12555:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"amount","nameLocation":"12583:6:8","nodeType":"VariableDeclaration","scope":1987,"src":"12575:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"12575:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12523:72:8"},"returnParameters":{"id":1985,"nodeType":"ParameterList","parameters":[],"src":"12613:0:8"},"scope":1988,"src":"12495:120:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1989,"src":"1403:11214:8","usedErrors":[]}],"src":"105:12513:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2066]},"id":2067,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1990,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"131:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2066,"linearizedBaseContracts":[2066],"name":"IERC20","nameLocation":"212:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1992,"nodeType":"StructuredDocumentation","src":"225:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2000,"name":"Transfer","nameLocation":"394:8:9","nodeType":"EventDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:9","nodeType":"VariableDeclaration","scope":2000,"src":"403:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1993,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1996,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:9","nodeType":"VariableDeclaration","scope":2000,"src":"425:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1998,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:9","nodeType":"VariableDeclaration","scope":2000,"src":"445:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:9"},"src":"388:72:9"},{"anonymous":false,"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"466:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2009,"name":"Approval","nameLocation":"625:8:9","nodeType":"EventDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:9","nodeType":"VariableDeclaration","scope":2009,"src":"634:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2005,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:9","nodeType":"VariableDeclaration","scope":2009,"src":"657:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2007,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:9","nodeType":"VariableDeclaration","scope":2009,"src":"682:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:9"},"src":"619:78:9"},{"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"703:66:9","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":2015,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":2011,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2015,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":2066,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"835:72:9","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":2023,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:9","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"account","nameLocation":"939:7:9","nodeType":"VariableDeclaration","scope":2023,"src":"931:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2017,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:9"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2023,"src":"971:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:9"},"scope":2066,"src":"912:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"986:202:9","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2033,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:9","nodeType":"FunctionDefinition","parameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"to","nameLocation":"1219:2:9","nodeType":"VariableDeclaration","scope":2033,"src":"1211:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"amount","nameLocation":"1231:6:9","nodeType":"VariableDeclaration","scope":2033,"src":"1223:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:9"},"returnParameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"1257:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2030,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:9"},"scope":2066,"src":"1193:70:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"1269:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2043,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:9","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"owner","nameLocation":"1565:5:9","nodeType":"VariableDeclaration","scope":2043,"src":"1557:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"spender","nameLocation":"1580:7:9","nodeType":"VariableDeclaration","scope":2043,"src":"1572:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:9"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2043,"src":"1612:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:9"},"scope":2066,"src":"1538:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"1627:642:9","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2053,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:9","nodeType":"FunctionDefinition","parameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"spender","nameLocation":"2299:7:9","nodeType":"VariableDeclaration","scope":2053,"src":"2291:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"amount","nameLocation":"2316:6:9","nodeType":"VariableDeclaration","scope":2053,"src":"2308:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:9"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2053,"src":"2342:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2050,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:9"},"scope":2066,"src":"2274:74:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"2354:287:9","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2065,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:9","nodeType":"FunctionDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"from","nameLocation":"2685:4:9","nodeType":"VariableDeclaration","scope":2065,"src":"2677:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"to","nameLocation":"2707:2:9","nodeType":"VariableDeclaration","scope":2065,"src":"2699:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"amount","nameLocation":"2727:6:9","nodeType":"VariableDeclaration","scope":2065,"src":"2719:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:9"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"2758:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2062,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:9"},"scope":2066,"src":"2646:118:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2067,"src":"202:2564:9","usedErrors":[]}],"src":"106:2661:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2066],"IERC20Metadata":[2091]},"id":2092,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2068,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2069,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2092,"sourceUnit":2067,"src":"135:23:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2071,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2066,"src":"305:6:10"},"id":2072,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"160:116:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2091,"linearizedBaseContracts":[2091,2066],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2078,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2078,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2075,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":2091,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2084,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2084,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2081,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":2091,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2085,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2090,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":2086,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2087,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":2091,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2092,"src":"277:405:10","usedErrors":[]}],"src":"110:573:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2386]},"id":2387,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2093,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"126:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2386,"linearizedBaseContracts":[2386],"name":"Address","nameLocation":"202:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2108,"nodeType":"Block","src":"1241:254:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"1465:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:11","memberName":"code","nodeType":"MemberAccess","src":"1465:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:11","memberName":"length","nodeType":"MemberAccess","src":"1465:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2101,"id":2107,"nodeType":"Return","src":"1458:30:11"}]},"documentation":{"id":2095,"nodeType":"StructuredDocumentation","src":"216:954:11","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:11","nodeType":"FunctionDefinition","parameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"account","nameLocation":"1203:7:11","nodeType":"VariableDeclaration","scope":2109,"src":"1195:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:11"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2109,"src":"1235:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2099,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:11"},"scope":2386,"src":"1175:320:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2142,"nodeType":"Block","src":"2483:241:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2120,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2386","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2386","typeString":"library Address"}],"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:11","typeDescriptions":{}}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:11","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2123,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2526:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2127,"nodeType":"ExpressionStatement","src":"2493:73:11"},{"assignments":[2129,null],"declarations":[{"constant":false,"id":2129,"mutability":"mutable","name":"success","nameLocation":"2583:7:11","nodeType":"VariableDeclaration","scope":2142,"src":"2578:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2128,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2136,"initialValue":{"arguments":[{"hexValue":"","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2130,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2596:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:11","memberName":"call","nodeType":"MemberAccess","src":"2596:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2132,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"2618:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:11"},{"expression":{"arguments":[{"id":2138,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"2647:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2141,"nodeType":"ExpressionStatement","src":"2639:78:11"}]},"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"1501:906:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2143,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:11","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:11","nodeType":"VariableDeclaration","scope":2143,"src":"2431:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"amount","nameLocation":"2466:6:11","nodeType":"VariableDeclaration","scope":2143,"src":"2458:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:11"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[],"src":"2483:0:11"},"scope":2386,"src":"2412:312:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2159,"nodeType":"Block","src":"3555:84:11","statements":[{"expression":{"arguments":[{"id":2154,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"3585:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2155,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"3593:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2153,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[2160,2180],"referencedDeclaration":2180,"src":"3572:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2152,"id":2158,"nodeType":"Return","src":"3565:67:11"}]},"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"2730:731:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:11","nodeType":"FunctionDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"target","nameLocation":"3496:6:11","nodeType":"VariableDeclaration","scope":2160,"src":"3488:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2145,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"data","nameLocation":"3517:4:11","nodeType":"VariableDeclaration","scope":2160,"src":"3504:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2147,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:11"},"returnParameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"3541:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2150,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:11"},"scope":2386,"src":"3466:173:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2179,"nodeType":"Block","src":"4008:76:11","statements":[{"expression":{"arguments":[{"id":2173,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4047:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2174,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"4055:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2176,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"4064:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2172,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2200,2250],"referencedDeclaration":2250,"src":"4025:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2171,"id":2178,"nodeType":"Return","src":"4018:59:11"}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"3645:211:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2180,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:11","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"target","nameLocation":"3900:6:11","nodeType":"VariableDeclaration","scope":2180,"src":"3892:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"data","nameLocation":"3929:4:11","nodeType":"VariableDeclaration","scope":2180,"src":"3916:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:11","nodeType":"VariableDeclaration","scope":2180,"src":"3943:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2166,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:11"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2180,"src":"3994:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2169,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:11"},"scope":2386,"src":"3861:223:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"4589:111:11","statements":[{"expression":{"arguments":[{"id":2193,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"4628:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2194,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"4636:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"4642:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2192,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2200,2250],"referencedDeclaration":2250,"src":"4606:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4606:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2191,"id":2198,"nodeType":"Return","src":"4599:94:11"}]},"documentation":{"id":2181,"nodeType":"StructuredDocumentation","src":"4090:351:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:11","nodeType":"FunctionDefinition","parameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"target","nameLocation":"4494:6:11","nodeType":"VariableDeclaration","scope":2200,"src":"4486:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"data","nameLocation":"4523:4:11","nodeType":"VariableDeclaration","scope":2200,"src":"4510:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2184,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"value","nameLocation":"4545:5:11","nodeType":"VariableDeclaration","scope":2200,"src":"4537:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:11"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"4575:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2189,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:11"},"scope":2386,"src":"4446:254:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2249,"nodeType":"Block","src":"5127:320:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2217,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2386","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2386","typeString":"library Address"}],"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2215,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:11","typeDescriptions":{}}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5145:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5159:7:11","memberName":"balance","nodeType":"MemberAccess","src":"5145:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"5170:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2214,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5137:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2224,"nodeType":"ExpressionStatement","src":"5137:81:11"},{"expression":{"arguments":[{"arguments":[{"id":2227,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5247:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2226,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5236:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5236:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5228:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2231,"nodeType":"ExpressionStatement","src":"5228:60:11"},{"assignments":[2233,2235],"declarations":[{"constant":false,"id":2233,"mutability":"mutable","name":"success","nameLocation":"5305:7:11","nodeType":"VariableDeclaration","scope":2249,"src":"5300:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2232,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2235,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:11","nodeType":"VariableDeclaration","scope":2249,"src":"5314:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2234,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2242,"initialValue":{"arguments":[{"id":2240,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"5367:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2236,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"5341:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5348:4:11","memberName":"call","nodeType":"MemberAccess","src":"5341:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"5360:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:11"},{"expression":{"arguments":[{"id":2244,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"5406:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2245,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5415:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2246,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"5427:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2243,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"5389:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2213,"id":2248,"nodeType":"Return","src":"5382:58:11"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"4706:237:11","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:11","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"target","nameLocation":"4996:6:11","nodeType":"VariableDeclaration","scope":2250,"src":"4988:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2202,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"data","nameLocation":"5025:4:11","nodeType":"VariableDeclaration","scope":2250,"src":"5012:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2204,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"value","nameLocation":"5047:5:11","nodeType":"VariableDeclaration","scope":2250,"src":"5039:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:11","nodeType":"VariableDeclaration","scope":2250,"src":"5062:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2208,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:11"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2250,"src":"5113:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2211,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:11"},"scope":2386,"src":"4948:499:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2266,"nodeType":"Block","src":"5724:97:11","statements":[{"expression":{"arguments":[{"id":2261,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"5760:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2262,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"5768:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2260,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2267,2302],"referencedDeclaration":2302,"src":"5741:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5741:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2259,"id":2265,"nodeType":"Return","src":"5734:80:11"}]},"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"5453:166:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2267,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:11","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"target","nameLocation":"5660:6:11","nodeType":"VariableDeclaration","scope":2267,"src":"5652:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"data","nameLocation":"5681:4:11","nodeType":"VariableDeclaration","scope":2267,"src":"5668:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2254,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:11"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"5710:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2257,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:11"},"scope":2386,"src":"5624:197:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2301,"nodeType":"Block","src":"6163:228:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2281,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"6192:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2280,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"6181:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6181:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":2279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6173:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2285,"nodeType":"ExpressionStatement","src":"6173:67:11"},{"assignments":[2287,2289],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"success","nameLocation":"6257:7:11","nodeType":"VariableDeclaration","scope":2301,"src":"6252:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2286,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2289,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:11","nodeType":"VariableDeclaration","scope":2301,"src":"6266:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2288,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2294,"initialValue":{"arguments":[{"id":2292,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"6311:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2290,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"6293:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6300:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:11"},{"expression":{"arguments":[{"id":2296,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"6350:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2297,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"6359:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2298,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"6371:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2295,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"6333:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2278,"id":2300,"nodeType":"Return","src":"6326:58:11"}]},"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"5827:173:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2302,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:11","nodeType":"FunctionDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"target","nameLocation":"6050:6:11","nodeType":"VariableDeclaration","scope":2302,"src":"6042:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"data","nameLocation":"6079:4:11","nodeType":"VariableDeclaration","scope":2302,"src":"6066:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2271,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2274,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:11","nodeType":"VariableDeclaration","scope":2302,"src":"6093:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2273,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:11"},"returnParameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2302,"src":"6149:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2276,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:11"},"scope":2386,"src":"6005:386:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2318,"nodeType":"Block","src":"6667:101:11","statements":[{"expression":{"arguments":[{"id":2313,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"6705:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2314,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"6713:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2312,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2319,2354],"referencedDeclaration":2354,"src":"6684:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:77:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2311,"id":2317,"nodeType":"Return","src":"6677:84:11"}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"6397:168:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2319,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:11","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"target","nameLocation":"6608:6:11","nodeType":"VariableDeclaration","scope":2319,"src":"6600:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2304,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"data","nameLocation":"6629:4:11","nodeType":"VariableDeclaration","scope":2319,"src":"6616:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2306,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:11"},"returnParameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2319,"src":"6653:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2309,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:11"},"scope":2386,"src":"6570:198:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2353,"nodeType":"Block","src":"7109:232:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2333,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"7138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2332,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"7127:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7127:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":2331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7119:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2337,"nodeType":"ExpressionStatement","src":"7119:69:11"},{"assignments":[2339,2341],"declarations":[{"constant":false,"id":2339,"mutability":"mutable","name":"success","nameLocation":"7205:7:11","nodeType":"VariableDeclaration","scope":2353,"src":"7200:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2338,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:11","nodeType":"VariableDeclaration","scope":2353,"src":"7214:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2340,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2346,"initialValue":{"arguments":[{"id":2344,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"7261:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2342,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"7241:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7248:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7241:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:11"},{"expression":{"arguments":[{"id":2348,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"7300:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2349,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"7309:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2350,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"7321:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2347,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7283:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2330,"id":2352,"nodeType":"Return","src":"7276:58:11"}]},"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"6774:175:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:11","nodeType":"FunctionDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"target","nameLocation":"7001:6:11","nodeType":"VariableDeclaration","scope":2354,"src":"6993:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2321,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"data","nameLocation":"7030:4:11","nodeType":"VariableDeclaration","scope":2354,"src":"7017:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2323,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2326,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:11","nodeType":"VariableDeclaration","scope":2354,"src":"7044:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2325,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:11"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2354,"src":"7095:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2328,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:11"},"scope":2386,"src":"6954:387:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2384,"nodeType":"Block","src":"7721:582:11","statements":[{"condition":{"id":2366,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7735:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2382,"nodeType":"Block","src":"7792:505:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2370,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"7876:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7887:6:11","memberName":"length","nodeType":"MemberAccess","src":"7876:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2380,"nodeType":"Block","src":"8234:53:11","statements":[{"expression":{"arguments":[{"id":2377,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"8259:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2376,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8252:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2379,"nodeType":"ExpressionStatement","src":"8252:20:11"}]},"id":2381,"nodeType":"IfStatement","src":"7872:415:11","trueBody":{"id":2375,"nodeType":"Block","src":"7899:329:11","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:11","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:11","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:11"},"nodeType":"YulFunctionCall","src":"8114:17:11"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:11","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:11"},"nodeType":"YulFunctionCall","src":"8159:19:11"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:11"},"nodeType":"YulFunctionCall","src":"8152:44:11"},"nodeType":"YulExpressionStatement","src":"8152:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2359,"isOffset":false,"isSlot":false,"src":"8120:10:11","valueSize":1},{"declaration":2359,"isOffset":false,"isSlot":false,"src":"8167:10:11","valueSize":1}],"id":2374,"nodeType":"InlineAssembly","src":"8060:154:11"}]}}]},"id":2383,"nodeType":"IfStatement","src":"7731:566:11","trueBody":{"id":2369,"nodeType":"Block","src":"7744:42:11","statements":[{"expression":{"id":2367,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"7765:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2365,"id":2368,"nodeType":"Return","src":"7758:17:11"}]}}]},"documentation":{"id":2355,"nodeType":"StructuredDocumentation","src":"7347:209:11","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:11","nodeType":"FunctionDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"success","nameLocation":"7601:7:11","nodeType":"VariableDeclaration","scope":2385,"src":"7596:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2356,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:11","nodeType":"VariableDeclaration","scope":2385,"src":"7618:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2358,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2361,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:11","nodeType":"VariableDeclaration","scope":2385,"src":"7651:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2360,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:11"},"returnParameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2385,"src":"7707:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2363,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:11"},"scope":2386,"src":"7561:742:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2387,"src":"194:8111:11","usedErrors":[]}],"src":"101:8205:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2408]},"id":2409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2388,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"111:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2408,"linearizedBaseContracts":[2408],"name":"Context","nameLocation":"626:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2397,"nodeType":"Block","src":"702:34:12","statements":[{"expression":{"expression":{"id":2394,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:12","memberName":"sender","nodeType":"MemberAccess","src":"719:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2393,"id":2396,"nodeType":"Return","src":"712:17:12"}]},"id":2398,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:12","nodeType":"FunctionDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[],"src":"659:2:12"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2398,"src":"693:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2391,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:12"},"scope":2408,"src":"640:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2406,"nodeType":"Block","src":"809:32:12","statements":[{"expression":{"expression":{"id":2403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:12","memberName":"data","nodeType":"MemberAccess","src":"826:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2402,"id":2405,"nodeType":"Return","src":"819:15:12"}]},"id":2407,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:12","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[],"src":"759:2:12"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2407,"src":"793:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2400,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:12"},"scope":2408,"src":"742:99:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2409,"src":"608:235:12","usedErrors":[]}],"src":"86:758:12"},"id":12},"contracts/FansSociety.sol":{"ast":{"absolutePath":"contracts/FansSociety.sol","exportedSymbols":{"FansSociety":[2430],"Projects":[3086]},"id":2431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2410,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"contracts/Projects.sol","file":"./Projects.sol","id":2412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2431,"sourceUnit":3087,"src":"57:42:13","symbolAliases":[{"foreign":{"id":2411,"name":"Projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"66:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2413,"name":"Projects","nameLocations":["125:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"125:8:13"},"id":2414,"nodeType":"InheritanceSpecifier","src":"125:8:13"}],"canonicalName":"FansSociety","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2430,"linearizedBaseContracts":[2430,3086,1322,2408],"name":"FansSociety","nameLocation":"110:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2428,"nodeType":"Block","src":"334:16:13","statements":[]},"id":2429,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2423,"name":"_wethTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"272:17:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2424,"name":"_tokenFactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"291:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2425,"name":"_poolFactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"313:19:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2426,"kind":"baseConstructorSpecifier","modifierName":{"id":2422,"name":"Projects","nameLocations":["263:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3086,"src":"263:8:13"},"nodeType":"ModifierInvocation","src":"263:70:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2416,"mutability":"mutable","name":"_wethTokenAddress","nameLocation":"175:17:13","nodeType":"VariableDeclaration","scope":2429,"src":"167:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2415,"name":"address","nodeType":"ElementaryTypeName","src":"167:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2418,"mutability":"mutable","name":"_tokenFactoryAddress","nameLocation":"204:20:13","nodeType":"VariableDeclaration","scope":2429,"src":"196:28:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2417,"name":"address","nodeType":"ElementaryTypeName","src":"196:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2420,"mutability":"mutable","name":"_poolFactoryAddress","nameLocation":"237:19:13","nodeType":"VariableDeclaration","scope":2429,"src":"229:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"229:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"157:105:13"},"returnParameters":{"id":2427,"nodeType":"ParameterList","parameters":[],"src":"334:0:13"},"scope":2430,"src":"146:204:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2431,"src":"101:252:13","usedErrors":[]}],"src":"32:322:13"},"id":13},"contracts/Projects.sol":{"ast":{"absolutePath":"contracts/Projects.sol","exportedSymbols":{"IERC20":[2066],"IProjectTokenFactory":[3397],"ITokensPoolFactory":[3131],"Initializable":[168],"Ownable":[1322],"Projects":[3086]},"id":3087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2432,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"33:23:14"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2434,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3087,"sourceUnit":169,"src":"58:98:14","symbolAliases":[{"foreign":{"id":2433,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"67:13:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2436,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3087,"sourceUnit":2067,"src":"157:72:14","symbolAliases":[{"foreign":{"id":2435,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"166:6:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2438,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3087,"sourceUnit":1323,"src":"230:69:14","symbolAliases":[{"foreign":{"id":2437,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"239:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/tokens/interfaces/IProjectTokenFactory.sol","file":"./tokens/interfaces/IProjectTokenFactory.sol","id":2440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3087,"sourceUnit":3398,"src":"301:84:14","symbolAliases":[{"foreign":{"id":2439,"name":"IProjectTokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"310:20:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/pools/interfaces/ITokensPoolFactory.sol","file":"./pools/interfaces/ITokensPoolFactory.sol","id":2442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3087,"sourceUnit":3132,"src":"386:79:14","symbolAliases":[{"foreign":{"id":2441,"name":"ITokensPoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"395:18:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2443,"name":"Ownable","nameLocations":["488:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":1322,"src":"488:7:14"},"id":2444,"nodeType":"InheritanceSpecifier","src":"488:7:14"}],"canonicalName":"Projects","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3086,"linearizedBaseContracts":[3086,1322,2408],"name":"Projects","nameLocation":"476:8:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Projects.Project","id":2469,"members":[{"constant":false,"id":2446,"mutability":"mutable","name":"name","nameLocation":"525:4:14","nodeType":"VariableDeclaration","scope":2469,"src":"518:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2445,"name":"string","nodeType":"ElementaryTypeName","src":"518:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"description","nameLocation":"540:11:14","nodeType":"VariableDeclaration","scope":2469,"src":"533:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2447,"name":"string","nodeType":"ElementaryTypeName","src":"533:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"symbol","nameLocation":"562:6:14","nodeType":"VariableDeclaration","scope":2469,"src":"555:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2449,"name":"string","nodeType":"ElementaryTypeName","src":"555:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"fund","nameLocation":"580:4:14","nodeType":"VariableDeclaration","scope":2469,"src":"572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"572:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2454,"mutability":"mutable","name":"liquidity","nameLocation":"596:9:14","nodeType":"VariableDeclaration","scope":2469,"src":"588:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2453,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2456,"mutability":"mutable","name":"startsAt","nameLocation":"616:8:14","nodeType":"VariableDeclaration","scope":2469,"src":"609:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2455,"name":"uint32","nodeType":"ElementaryTypeName","src":"609:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2458,"mutability":"mutable","name":"endsAt","nameLocation":"635:6:14","nodeType":"VariableDeclaration","scope":2469,"src":"628:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2457,"name":"uint32","nodeType":"ElementaryTypeName","src":"628:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2460,"mutability":"mutable","name":"target","nameLocation":"652:6:14","nodeType":"VariableDeclaration","scope":2469,"src":"645:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2459,"name":"uint32","nodeType":"ElementaryTypeName","src":"645:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"minInvest","nameLocation":"669:9:14","nodeType":"VariableDeclaration","scope":2469,"src":"662:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2461,"name":"uint16","nodeType":"ElementaryTypeName","src":"662:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2464,"mutability":"mutable","name":"completed","nameLocation":"687:9:14","nodeType":"VariableDeclaration","scope":2469,"src":"682:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2463,"name":"bool","nodeType":"ElementaryTypeName","src":"682:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"authorAddress","nameLocation":"708:13:14","nodeType":"VariableDeclaration","scope":2469,"src":"700:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"700:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2468,"mutability":"mutable","name":"tokenAddress","nameLocation":"733:12:14","nodeType":"VariableDeclaration","scope":2469,"src":"725:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2467,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Project","nameLocation":"506:7:14","nodeType":"StructDefinition","scope":3086,"src":"499:250:14","visibility":"public"},{"constant":false,"id":2471,"mutability":"mutable","name":"wethTokenAddress","nameLocation":"769:16:14","nodeType":"VariableDeclaration","scope":3086,"src":"752:33:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2470,"name":"address","nodeType":"ElementaryTypeName","src":"752:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"tokenFactoryAddress","nameLocation":"806:19:14","nodeType":"VariableDeclaration","scope":3086,"src":"789:36:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2472,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"poolFactoryAddress","nameLocation":"845:18:14","nodeType":"VariableDeclaration","scope":3086,"src":"828:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2474,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":true,"id":2478,"mutability":"constant","name":"FSOCIETY_SUPPLY","nameLocation":"892:15:14","nodeType":"VariableDeclaration","scope":3086,"src":"867:45:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3237","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"910:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"visibility":"private"},{"constant":true,"id":2481,"mutability":"constant","name":"AUTHOR_SUPPLY","nameLocation":"940:13:14","nodeType":"VariableDeclaration","scope":3086,"src":"915:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"915:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3237","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"956:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"visibility":"private"},{"constant":true,"id":2484,"mutability":"constant","name":"LIQUIDITY_SUPPLY","nameLocation":"986:16:14","nodeType":"VariableDeclaration","scope":3086,"src":"961:46:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1005:2:14","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"visibility":"private"},{"constant":true,"id":2487,"mutability":"constant","name":"INVESTORS_SUPPLY","nameLocation":"1035:16:14","nodeType":"VariableDeclaration","scope":3086,"src":"1010:46:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1010:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3335","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1054:2:14","typeDescriptions":{"typeIdentifier":"t_rational_35_by_1","typeString":"int_const 35"},"value":"35"},"visibility":"private"},{"constant":true,"id":2490,"mutability":"constant","name":"MAX_DURATION","nameLocation":"1085:12:14","nodeType":"VariableDeclaration","scope":3086,"src":"1060:46:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"363034383030","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1100:6:14","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"604800"},"visibility":"private"},{"constant":true,"id":2493,"mutability":"constant","name":"PRECISION","nameLocation":"1145:9:14","nodeType":"VariableDeclaration","scope":3086,"src":"1120:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1157:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"functionSelector":"06661abd","id":2495,"mutability":"mutable","name":"count","nameLocation":"1178:5:14","nodeType":"VariableDeclaration","scope":3086,"src":"1163:20:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"107046bd","id":2500,"mutability":"mutable","name":"projects","nameLocation":"1222:8:14","nodeType":"VariableDeclaration","scope":3086,"src":"1187:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project)"},"typeName":{"id":2499,"keyType":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1195:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1187:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project)"},"valueType":{"id":2498,"nodeType":"UserDefinedTypeName","pathNode":{"id":2497,"name":"Project","nameLocations":["1206:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2469,"src":"1206:7:14"},"referencedDeclaration":2469,"src":"1206:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage_ptr","typeString":"struct Projects.Project"}}},"visibility":"public"},{"constant":false,"functionSelector":"e90d4c06","id":2506,"mutability":"mutable","name":"commitments","nameLocation":"1289:11:14","nodeType":"VariableDeclaration","scope":3086,"src":"1234:66:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":2505,"keyType":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1242:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1234:47:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueType":{"id":2504,"keyType":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1253:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"49230f399aeb93ae9a7a3d2ee455e764a5b042340225e7e2ec99dde6f7e9bf8d","id":2526,"name":"ProjectCreated","nameLocation":"1310:14:14","nodeType":"EventDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"1336:2:14","nodeType":"VariableDeclaration","scope":2526,"src":"1328:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1328:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2510,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"1349:4:14","nodeType":"VariableDeclaration","scope":2526,"src":"1342:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2509,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2512,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"1364:6:14","nodeType":"VariableDeclaration","scope":2526,"src":"1357:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2511,"name":"string","nodeType":"ElementaryTypeName","src":"1357:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2514,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"1381:11:14","nodeType":"VariableDeclaration","scope":2526,"src":"1374:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2513,"name":"string","nodeType":"ElementaryTypeName","src":"1374:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2516,"indexed":true,"mutability":"mutable","name":"startsAt","nameLocation":"1411:8:14","nodeType":"VariableDeclaration","scope":2526,"src":"1396:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2515,"name":"uint32","nodeType":"ElementaryTypeName","src":"1396:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2518,"indexed":true,"mutability":"mutable","name":"endsAt","nameLocation":"1438:6:14","nodeType":"VariableDeclaration","scope":2526,"src":"1423:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2517,"name":"uint32","nodeType":"ElementaryTypeName","src":"1423:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2520,"indexed":false,"mutability":"mutable","name":"target","nameLocation":"1455:6:14","nodeType":"VariableDeclaration","scope":2526,"src":"1448:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2519,"name":"uint32","nodeType":"ElementaryTypeName","src":"1448:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2522,"indexed":false,"mutability":"mutable","name":"minInvest","nameLocation":"1472:9:14","nodeType":"VariableDeclaration","scope":2526,"src":"1465:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2521,"name":"uint16","nodeType":"ElementaryTypeName","src":"1465:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2524,"indexed":true,"mutability":"mutable","name":"author","nameLocation":"1501:6:14","nodeType":"VariableDeclaration","scope":2526,"src":"1485:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"1485:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1324:186:14"},"src":"1304:207:14"},{"anonymous":false,"eventSelector":"e3805ed669490875ae87c5c8b1ad6ecca0e5e67305a833926d0d4317c4822fc0","id":2530,"name":"ProjectCancelled","nameLocation":"1520:16:14","nodeType":"EventDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"1545:2:14","nodeType":"VariableDeclaration","scope":2530,"src":"1537:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1537:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1536:12:14"},"src":"1514:35:14"},{"anonymous":false,"eventSelector":"245cbccbc6875e4b0475a653568fd4f7c2dae5fb8929e33c0d66dc530ba11b00","id":2538,"name":"Committed","nameLocation":"1558:9:14","nodeType":"EventDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1584:2:14","nodeType":"VariableDeclaration","scope":2538,"src":"1568:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"1568:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2534,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"1604:6:14","nodeType":"VariableDeclaration","scope":2538,"src":"1588:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"1588:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2536,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1620:6:14","nodeType":"VariableDeclaration","scope":2538,"src":"1612:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1567:60:14"},"src":"1552:76:14"},{"anonymous":false,"eventSelector":"7fd902d6e186354d1617b957fc4cb4a144f44a19cc5c4525cfb772d707c405c2","id":2546,"name":"Withdrawed","nameLocation":"1637:10:14","nodeType":"EventDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1664:2:14","nodeType":"VariableDeclaration","scope":2546,"src":"1648:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2542,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"1684:6:14","nodeType":"VariableDeclaration","scope":2546,"src":"1668:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2541,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2544,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1700:6:14","nodeType":"VariableDeclaration","scope":2546,"src":"1692:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:60:14"},"src":"1631:77:14"},{"anonymous":false,"eventSelector":"4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed026","id":2554,"name":"Claimed","nameLocation":"1717:7:14","nodeType":"EventDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1741:2:14","nodeType":"VariableDeclaration","scope":2554,"src":"1725:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2550,"indexed":true,"mutability":"mutable","name":"caller","nameLocation":"1761:6:14","nodeType":"VariableDeclaration","scope":2554,"src":"1745:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"1745:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2552,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1777:6:14","nodeType":"VariableDeclaration","scope":2554,"src":"1769:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1769:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1724:60:14"},"src":"1711:74:14"},{"anonymous":false,"eventSelector":"f418560cae8df9d7d7fb63eca7a926821d509b9751b541b3aac4249c34bafa63","id":2562,"name":"ProjectCompleted","nameLocation":"1794:16:14","nodeType":"EventDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1827:2:14","nodeType":"VariableDeclaration","scope":2562,"src":"1811:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1811:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2558,"indexed":false,"mutability":"mutable","name":"fund","nameLocation":"1836:4:14","nodeType":"VariableDeclaration","scope":2562,"src":"1831:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint","nodeType":"ElementaryTypeName","src":"1831:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2560,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"1847:9:14","nodeType":"VariableDeclaration","scope":2562,"src":"1842:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint","nodeType":"ElementaryTypeName","src":"1842:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1810:47:14"},"src":"1788:70:14"},{"anonymous":false,"eventSelector":"bc8073ff7d7bd2ab93612911916e7941431e9bae6df21f172a7f4ace4284b804","id":2566,"name":"ProjectValidated","nameLocation":"1867:16:14","nodeType":"EventDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1900:2:14","nodeType":"VariableDeclaration","scope":2566,"src":"1884:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1884:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1883:20:14"},"src":"1861:43:14"},{"body":{"id":2582,"nodeType":"Block","src":"1940:77:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2571,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1952:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1956:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1952:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"id":2573,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"1966:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2575,"indexExpression":{"id":2574,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"1975:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1966:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":2576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1980:13:14","memberName":"authorAddress","nodeType":"MemberAccess","referencedDeclaration":2466,"src":"1966:27:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1952:41:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72","id":2578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1995:12:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ccad79e7aa285c9f3f2db83e30790c7046ceac0d7d86d7990286517708fb5ee","typeString":"literal_string \"Not author\""},"value":"Not author"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ccad79e7aa285c9f3f2db83e30790c7046ceac0d7d86d7990286517708fb5ee","typeString":"literal_string \"Not author\""}],"id":2570,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1944:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:64:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2580,"nodeType":"ExpressionStatement","src":"1944:64:14"},{"id":2581,"nodeType":"PlaceholderStatement","src":"2012:1:14"}]},"id":2583,"name":"onlyAuthor","nameLocation":"1916:10:14","nodeType":"ModifierDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"_id","nameLocation":"1935:3:14","nodeType":"VariableDeclaration","scope":2583,"src":"1927:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1927:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1926:13:14"},"src":"1907:110:14","virtual":false,"visibility":"internal"},{"body":{"id":2609,"nodeType":"Block","src":"2061:215:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2588,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2144:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2150:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"2144:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":2590,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2163:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2592,"indexExpression":{"id":2591,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"2172:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2163:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":2593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2177:6:14","memberName":"endsAt","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"2163:20:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2144:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920656e646564","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2185:15:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_03a0ef2274e5fa9c92bd6c8904f1025dd04b34d1da74eba1106c91ebdbd13a59","typeString":"literal_string \"Already ended\""},"value":"Already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03a0ef2274e5fa9c92bd6c8904f1025dd04b34d1da74eba1106c91ebdbd13a59","typeString":"literal_string \"Already ended\""}],"id":2587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2136:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2136:65:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2597,"nodeType":"ExpressionStatement","src":"2136:65:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2599,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2213:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2601,"indexExpression":{"id":2600,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"2222:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2213:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":2602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2227:9:14","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":2464,"src":"2213:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2240:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2213:32:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6a65637420636f6d706c65746564","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2247:19:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_bff8fba7e8290554d856a3fb22093bf87bdf5e84742e561d9c5dea6562588f74","typeString":"literal_string \"Project completed\""},"value":"Project completed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bff8fba7e8290554d856a3fb22093bf87bdf5e84742e561d9c5dea6562588f74","typeString":"literal_string \"Project completed\""}],"id":2598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2205:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2205:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2607,"nodeType":"ExpressionStatement","src":"2205:62:14"},{"id":2608,"nodeType":"PlaceholderStatement","src":"2271:1:14"}]},"id":2610,"name":"crowdfundingOpened","nameLocation":"2029:18:14","nodeType":"ModifierDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"_id","nameLocation":"2056:3:14","nodeType":"VariableDeclaration","scope":2610,"src":"2048:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2047:13:14"},"src":"2020:256:14","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"2320:111:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2615,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2336:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2342:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"2336:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":2617,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2354:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2619,"indexExpression":{"id":2618,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"2363:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2354:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":2620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2368:6:14","memberName":"endsAt","nodeType":"MemberAccess","referencedDeclaration":2458,"src":"2354:20:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2336:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"baseExpression":{"id":2622,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"2378:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2624,"indexExpression":{"id":2623,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"2387:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2378:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":2625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2392:9:14","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":2464,"src":"2378:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2336:65:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f7420636c6f736564","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2406:12:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_4762d97070854ffa537667d2f87773fc610015ed3ee39aef0aef6647d23f7004","typeString":"literal_string \"not closed\""},"value":"not closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4762d97070854ffa537667d2f87773fc610015ed3ee39aef0aef6647d23f7004","typeString":"literal_string \"not closed\""}],"id":2614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:98:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"ExpressionStatement","src":"2324:98:14"},{"id":2630,"nodeType":"PlaceholderStatement","src":"2426:1:14"}]},"id":2632,"name":"crowdfundingClosed","nameLocation":"2288:18:14","nodeType":"ModifierDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"_id","nameLocation":"2315:3:14","nodeType":"VariableDeclaration","scope":2632,"src":"2307:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2306:13:14"},"src":"2279:152:14","virtual":false,"visibility":"internal"},{"body":{"id":2649,"nodeType":"Block","src":"2467:72:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2637,"name":"commitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2479:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":2639,"indexExpression":{"id":2638,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"2491:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2479:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2642,"indexExpression":{"expression":{"id":2640,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2496:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2500:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2496:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2479:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2511:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2479:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20636f6d6d69746d656e74","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2514:15:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3a9eb15a1903ce0ba5279cfeb2e00d127b5a6f2993d14812bc6864e4dd646bd","typeString":"literal_string \"No commitment\""},"value":"No commitment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3a9eb15a1903ce0ba5279cfeb2e00d127b5a6f2993d14812bc6864e4dd646bd","typeString":"literal_string \"No commitment\""}],"id":2636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2471:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2471:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2647,"nodeType":"ExpressionStatement","src":"2471:59:14"},{"id":2648,"nodeType":"PlaceholderStatement","src":"2534:1:14"}]},"id":2650,"name":"isCommited","nameLocation":"2443:10:14","nodeType":"ModifierDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"_id","nameLocation":"2462:3:14","nodeType":"VariableDeclaration","scope":2650,"src":"2454:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"2454:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2453:13:14"},"src":"2434:105:14","virtual":false,"visibility":"internal"},{"body":{"id":2671,"nodeType":"Block","src":"2650:134:14","statements":[{"expression":{"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2659,"name":"wethTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"2654:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2660,"name":"_wethTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"2673:17:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2654:36:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2662,"nodeType":"ExpressionStatement","src":"2654:36:14"},{"expression":{"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2663,"name":"tokenFactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"2694:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2664,"name":"_tokenFactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"2716:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2694:42:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2666,"nodeType":"ExpressionStatement","src":"2694:42:14"},{"expression":{"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2667,"name":"poolFactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"2740:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2668,"name":"_poolFactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"2761:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2740:40:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2670,"nodeType":"ExpressionStatement","src":"2740:40:14"}]},"id":2672,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"_wethTokenAddress","nameLocation":"2565:17:14","nodeType":"VariableDeclaration","scope":2672,"src":"2557:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"2557:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"_tokenFactoryAddress","nameLocation":"2594:20:14","nodeType":"VariableDeclaration","scope":2672,"src":"2586:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2653,"name":"address","nodeType":"ElementaryTypeName","src":"2586:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"_poolFactoryAddress","nameLocation":"2627:19:14","nodeType":"VariableDeclaration","scope":2672,"src":"2619:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"2619:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2553:96:14"},"returnParameters":{"id":2658,"nodeType":"ParameterList","parameters":[],"src":"2650:0:14"},"scope":3086,"src":"2542:242:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2755,"nodeType":"Block","src":"3019:678:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"_startsAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"3031:9:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2695,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3044:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"3044:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3031:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073746172742074696d65","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3061:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3b6d4b23ae4bbd8dffd90f5160a835673157044abc6160caab696199469b553","typeString":"literal_string \"Invalid start time\""},"value":"Invalid start time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3b6d4b23ae4bbd8dffd90f5160a835673157044abc6160caab696199469b553","typeString":"literal_string \"Invalid start time\""}],"id":2693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3023:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3023:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2700,"nodeType":"ExpressionStatement","src":"3023:59:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2702,"name":"_endsAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"3094:7:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2703,"name":"_startsAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"3104:9:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3094:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420656e642074696d65","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3115:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f79adeb066186ecb6bfb5c8311500863e681b7aa46040b41ed874ebc28bd54f9","typeString":"literal_string \"Invalid end time\""},"value":"Invalid end time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f79adeb066186ecb6bfb5c8311500863e681b7aa46040b41ed874ebc28bd54f9","typeString":"literal_string \"Invalid end time\""}],"id":2701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3086:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2707,"nodeType":"ExpressionStatement","src":"3086:48:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2709,"name":"_endsAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"3150:7:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2710,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3161:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3167:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"3161:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2712,"name":"MAX_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"3179:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3161:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3150:41:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178696d756d206475726174696f6e206578636565646564","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3196:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_268b2b3ef04afe4685fdbcff6cb683aa408f3edfff411f4ac3bbfee177e0bffa","typeString":"literal_string \"Maximum duration exceeded\""},"value":"Maximum duration exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_268b2b3ef04afe4685fdbcff6cb683aa408f3edfff411f4ac3bbfee177e0bffa","typeString":"literal_string \"Maximum duration exceeded\""}],"id":2708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3138:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:89:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2717,"nodeType":"ExpressionStatement","src":"3138:89:14"},{"expression":{"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3232:7:14","subExpression":{"id":2718,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"3232:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"nodeType":"ExpressionStatement","src":"3232:7:14"},{"expression":{"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2721,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3244:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2723,"indexExpression":{"id":2722,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"3253:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3244:15:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2725,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"3281:5:14","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":2726,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3299:7:14","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":2727,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3324:12:14","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"hexValue":"30","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3347:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3364:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2730,"name":"_startsAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"3380:9:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2731,"name":"_endsAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"3402:7:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2732,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"3422:7:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2733,"name":"_minInvest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"3445:10:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"hexValue":"66616c7365","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3471:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":2735,"name":"_authorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"3496:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3537:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3529:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2736,"name":"address","nodeType":"ElementaryTypeName","src":"3529:7:14","typeDescriptions":{}}},"id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3529:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2724,"name":"Project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"3262:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Project_$2469_storage_ptr_$","typeString":"type(struct Projects.Project storage pointer)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3275:4:14","3291:6:14","3311:11:14","3341:4:14","3353:9:14","3370:8:14","3394:6:14","3414:6:14","3434:9:14","3460:9:14","3481:13:14","3515:12:14"],"names":["name","symbol","description","fund","liquidity","startsAt","endsAt","target","minInvest","completed","authorAddress","tokenAddress"],"nodeType":"FunctionCall","src":"3262:282:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"src":"3244:300:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":2742,"nodeType":"ExpressionStatement","src":"3244:300:14"},{"eventCall":{"arguments":[{"id":2744,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"3573:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2745,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"3583:5:14","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":2746,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"3593:7:14","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":2747,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"3605:12:14","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":2748,"name":"_startsAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"3622:9:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2749,"name":"_endsAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"3636:7:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2750,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"3648:7:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2751,"name":"_minInvest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"3660:10:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2752,"name":"_authorAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"3675:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2743,"name":"ProjectCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"3554:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint16_$_t_address_$returns$__$","typeString":"function (uint256,string memory,string memory,string memory,uint32,uint32,uint32,uint16,address)"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:139:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2754,"nodeType":"EmitStatement","src":"3549:144:14"}]},"functionSelector":"bb89bf75","id":2756,"implemented":true,"kind":"function","modifiers":[{"id":2691,"kind":"modifierInvocation","modifierName":{"id":2690,"name":"onlyOwner","nameLocations":["3009:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"3009:9:14"},"nodeType":"ModifierInvocation","src":"3009:9:14"}],"name":"createProject","nameLocation":"2796:13:14","nodeType":"FunctionDefinition","parameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"_authorAddress","nameLocation":"2821:14:14","nodeType":"VariableDeclaration","scope":2756,"src":"2813:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"2813:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"_name","nameLocation":"2855:5:14","nodeType":"VariableDeclaration","scope":2756,"src":"2839:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2675,"name":"string","nodeType":"ElementaryTypeName","src":"2839:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"_symbol","nameLocation":"2880:7:14","nodeType":"VariableDeclaration","scope":2756,"src":"2864:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2677,"name":"string","nodeType":"ElementaryTypeName","src":"2864:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"_description","nameLocation":"2907:12:14","nodeType":"VariableDeclaration","scope":2756,"src":"2891:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2679,"name":"string","nodeType":"ElementaryTypeName","src":"2891:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"_startsAt","nameLocation":"2930:9:14","nodeType":"VariableDeclaration","scope":2756,"src":"2923:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2681,"name":"uint32","nodeType":"ElementaryTypeName","src":"2923:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"_endsAt","nameLocation":"2950:7:14","nodeType":"VariableDeclaration","scope":2756,"src":"2943:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2683,"name":"uint32","nodeType":"ElementaryTypeName","src":"2943:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"_target","nameLocation":"2968:7:14","nodeType":"VariableDeclaration","scope":2756,"src":"2961:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2685,"name":"uint32","nodeType":"ElementaryTypeName","src":"2961:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"_minInvest","nameLocation":"2986:10:14","nodeType":"VariableDeclaration","scope":2756,"src":"2979:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2687,"name":"uint16","nodeType":"ElementaryTypeName","src":"2979:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2809:190:14"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[],"src":"3019:0:14"},"scope":3086,"src":"2787:910:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2786,"nodeType":"Block","src":"3779:138:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2767,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3791:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2769,"indexExpression":{"id":2768,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"3800:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3791:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":2770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3805:8:14","memberName":"startsAt","nodeType":"MemberAccess","referencedDeclaration":2456,"src":"3791:22:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2771,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3816:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3822:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"3816:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3791:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6a65637420616c72656164792073746172746564","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3833:25:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b66f79849fb2a1aeae618e045c8144ee98af31f7d75c8241357798f6fb27a16b","typeString":"literal_string \"Project already started\""},"value":"Project already started"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b66f79849fb2a1aeae618e045c8144ee98af31f7d75c8241357798f6fb27a16b","typeString":"literal_string \"Project already started\""}],"id":2766,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3783:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3783:76:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2776,"nodeType":"ExpressionStatement","src":"3783:76:14"},{"expression":{"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3863:20:14","subExpression":{"baseExpression":{"id":2777,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3870:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2779,"indexExpression":{"id":2778,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"3879:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3870:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2781,"nodeType":"ExpressionStatement","src":"3863:20:14"},{"eventCall":{"arguments":[{"id":2783,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"3909:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2782,"name":"ProjectCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"3892:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3892:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2785,"nodeType":"EmitStatement","src":"3887:26:14"}]},"functionSelector":"24941147","id":2787,"implemented":true,"kind":"function","modifiers":[{"id":2761,"kind":"modifierInvocation","modifierName":{"id":2760,"name":"onlyOwner","nameLocations":["3745:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"3745:9:14"},"nodeType":"ModifierInvocation","src":"3745:9:14"},{"arguments":[{"id":2763,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"3774:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2764,"kind":"modifierInvocation","modifierName":{"id":2762,"name":"crowdfundingOpened","nameLocations":["3755:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":2610,"src":"3755:18:14"},"nodeType":"ModifierInvocation","src":"3755:23:14"}],"name":"cancelProject","nameLocation":"3709:13:14","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"_id","nameLocation":"3731:3:14","nodeType":"VariableDeclaration","scope":2787,"src":"3723:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"3723:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3722:13:14"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[],"src":"3779:0:14"},"scope":3086,"src":"3700:217:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2870,"nodeType":"Block","src":"3999:462:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2796,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4011:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4015:5:14","memberName":"value","nodeType":"MemberAccess","src":"4011:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"302e3031","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4024:10:14","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"src":"4011:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d696e20302e3031206574686572","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4036:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf1cbb480479ea4d7c3f4f3b5a2d1e356ab6d98c8dec1739a2a160b41897be8e","typeString":"literal_string \"min 0.01 ether\""},"value":"min 0.01 ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf1cbb480479ea4d7c3f4f3b5a2d1e356ab6d98c8dec1739a2a160b41897be8e","typeString":"literal_string \"min 0.01 ether\""}],"id":2795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4003:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4003:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2802,"nodeType":"ExpressionStatement","src":"4003:50:14"},{"assignments":[2805],"declarations":[{"constant":false,"id":2805,"mutability":"mutable","name":"project","nameLocation":"4073:7:14","nodeType":"VariableDeclaration","scope":2870,"src":"4058:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project"},"typeName":{"id":2804,"nodeType":"UserDefinedTypeName","pathNode":{"id":2803,"name":"Project","nameLocations":["4058:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2469,"src":"4058:7:14"},"referencedDeclaration":2469,"src":"4058:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage_ptr","typeString":"struct Projects.Project"}},"visibility":"internal"}],"id":2809,"initialValue":{"baseExpression":{"id":2806,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"4083:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2808,"indexExpression":{"id":2807,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"4092:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4083:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4058:38:14"},{"assignments":[2811,2813],"declarations":[{"constant":false,"id":2811,"mutability":"mutable","name":"value","nameLocation":"4107:5:14","nodeType":"VariableDeclaration","scope":2870,"src":"4102:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint","nodeType":"ElementaryTypeName","src":"4102:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"liquidity","nameLocation":"4119:9:14","nodeType":"VariableDeclaration","scope":2870,"src":"4114:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint","nodeType":"ElementaryTypeName","src":"4114:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2818,"initialValue":{"arguments":[{"expression":{"id":2815,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4157:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:5:14","memberName":"value","nodeType":"MemberAccess","src":"4157:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2814,"name":"computeValueAndLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"4132:24:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4101:66:14"},{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2819,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"4172:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"id":2821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4180:4:14","memberName":"fund","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"4172:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"4188:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4172:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ExpressionStatement","src":"4172:21:14"},{"expression":{"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2825,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"4197:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"id":2827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4205:9:14","memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":2454,"src":"4197:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2828,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"4218:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4197:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2830,"nodeType":"ExpressionStatement","src":"4197:30:14"},{"expression":{"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2831,"name":"commitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"4232:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":2835,"indexExpression":{"id":2832,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"4244:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4232:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2836,"indexExpression":{"expression":{"id":2833,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4249:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4253:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4249:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4232:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2837,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4264:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4268:5:14","memberName":"value","nodeType":"MemberAccess","src":"4264:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4232:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2840,"nodeType":"ExpressionStatement","src":"4232:41:14"},{"eventCall":{"arguments":[{"id":2842,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"4292:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2843,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4297:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4301:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4297:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2845,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4309:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4313:5:14","memberName":"value","nodeType":"MemberAccess","src":"4309:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2841,"name":"Committed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"4282:9:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2848,"nodeType":"EmitStatement","src":"4277:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2849,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"4328:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"id":2850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4336:4:14","memberName":"fund","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"4328:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2851,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"4344:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"id":2852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4352:6:14","memberName":"target","nodeType":"MemberAccess","referencedDeclaration":2460,"src":"4344:14:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4328:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2869,"nodeType":"IfStatement","src":"4324:134:14","trueBody":{"id":2868,"nodeType":"Block","src":"4360:98:14","statements":[{"expression":{"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2854,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"4365:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"id":2856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4373:9:14","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":2464,"src":"4365:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4385:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4365:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2859,"nodeType":"ExpressionStatement","src":"4365:24:14"},{"eventCall":{"arguments":[{"id":2861,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"4416:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2862,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"4421:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"id":2863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4429:4:14","memberName":"fund","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"4421:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2864,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"4435:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"id":2865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4443:9:14","memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":2454,"src":"4435:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2860,"name":"ProjectCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"4399:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2867,"nodeType":"EmitStatement","src":"4394:59:14"}]}}]},"functionSelector":"16509ee2","id":2871,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2792,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"3994:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2793,"kind":"modifierInvocation","modifierName":{"id":2791,"name":"crowdfundingOpened","nameLocations":["3975:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":2610,"src":"3975:18:14"},"nodeType":"ModifierInvocation","src":"3975:23:14"}],"name":"commitOnProject","nameLocation":"3929:15:14","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"_id","nameLocation":"3953:3:14","nodeType":"VariableDeclaration","scope":2871,"src":"3945:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"3945:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3944:13:14"},"returnParameters":{"id":2794,"nodeType":"ParameterList","parameters":[],"src":"3999:0:14"},"scope":3086,"src":"3920:541:14","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2944,"nodeType":"Block","src":"4553:383:14","statements":[{"assignments":[2883],"declarations":[{"constant":false,"id":2883,"mutability":"mutable","name":"commitment","nameLocation":"4565:10:14","nodeType":"VariableDeclaration","scope":2944,"src":"4557:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"4557:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2890,"initialValue":{"baseExpression":{"baseExpression":{"id":2884,"name":"commitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"4578:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":2886,"indexExpression":{"id":2885,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4590:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4578:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2889,"indexExpression":{"expression":{"id":2887,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4595:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4599:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4595:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4578:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4557:49:14"},{"assignments":[2892,2894],"declarations":[{"constant":false,"id":2892,"mutability":"mutable","name":"value","nameLocation":"4617:5:14","nodeType":"VariableDeclaration","scope":2944,"src":"4612:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint","nodeType":"ElementaryTypeName","src":"4612:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2894,"mutability":"mutable","name":"liquidity","nameLocation":"4629:9:14","nodeType":"VariableDeclaration","scope":2944,"src":"4624:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2893,"name":"uint","nodeType":"ElementaryTypeName","src":"4624:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2898,"initialValue":{"arguments":[{"id":2896,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"4667:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2895,"name":"computeValueAndLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"4642:24:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4642:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4611:67:14"},{"expression":{"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2899,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"4682:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2901,"indexExpression":{"id":2900,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4691:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4682:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":2902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4696:4:14","memberName":"fund","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"4682:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"4704:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4682:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2905,"nodeType":"ExpressionStatement","src":"4682:27:14"},{"expression":{"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2906,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"4713:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2908,"indexExpression":{"id":2907,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4722:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4713:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":2909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4727:9:14","memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":2454,"src":"4713:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2910,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"4740:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4713:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2912,"nodeType":"ExpressionStatement","src":"4713:36:14"},{"expression":{"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2913,"name":"commitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"4754:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":2917,"indexExpression":{"id":2914,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4766:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4754:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2918,"indexExpression":{"expression":{"id":2915,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4771:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4775:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4771:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4754:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4754:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2921,"nodeType":"ExpressionStatement","src":"4754:32:14"},{"assignments":[2923,null],"declarations":[{"constant":false,"id":2923,"mutability":"mutable","name":"sent","nameLocation":"4797:4:14","nodeType":"VariableDeclaration","scope":2944,"src":"4792:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2922,"name":"bool","nodeType":"ElementaryTypeName","src":"4792:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2931,"initialValue":{"arguments":[{"hexValue":"","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":2924,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4807:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4811:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4807:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4818:4:14","memberName":"call","nodeType":"MemberAccess","src":"4807:15:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2927,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"4831:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4807:36:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4807:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4791:56:14"},{"expression":{"arguments":[{"id":2933,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"4859:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7769746864726177206661696c6564","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4865:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe","typeString":"literal_string \"withdraw failed\""},"value":"withdraw failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe","typeString":"literal_string \"withdraw failed\""}],"id":2932,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4851:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4851:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2936,"nodeType":"ExpressionStatement","src":"4851:32:14"},{"eventCall":{"arguments":[{"id":2938,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4904:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2939,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4909:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4913:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4909:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2941,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"4921:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2937,"name":"Withdrawed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"4893:10:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2943,"nodeType":"EmitStatement","src":"4888:44:14"}]},"functionSelector":"44a9ae8c","id":2945,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2876,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4532:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2877,"kind":"modifierInvocation","modifierName":{"id":2875,"name":"crowdfundingOpened","nameLocations":["4513:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":2610,"src":"4513:18:14"},"nodeType":"ModifierInvocation","src":"4513:23:14"},{"arguments":[{"id":2879,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"4548:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2880,"kind":"modifierInvocation","modifierName":{"id":2878,"name":"isCommited","nameLocations":["4537:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2650,"src":"4537:10:14"},"nodeType":"ModifierInvocation","src":"4537:15:14"}],"name":"withdrawOnProject","nameLocation":"4473:17:14","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"_id","nameLocation":"4499:3:14","nodeType":"VariableDeclaration","scope":2945,"src":"4491:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"4491:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4490:13:14"},"returnParameters":{"id":2881,"nodeType":"ParameterList","parameters":[],"src":"4553:0:14"},"scope":3086,"src":"4464:472:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2998,"nodeType":"Block","src":"5026:460:14","statements":[{"assignments":[2958],"declarations":[{"constant":false,"id":2958,"mutability":"mutable","name":"project","nameLocation":"5045:7:14","nodeType":"VariableDeclaration","scope":2998,"src":"5030:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project"},"typeName":{"id":2957,"nodeType":"UserDefinedTypeName","pathNode":{"id":2956,"name":"Project","nameLocations":["5030:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2469,"src":"5030:7:14"},"referencedDeclaration":2469,"src":"5030:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage_ptr","typeString":"struct Projects.Project"}},"visibility":"internal"}],"id":2962,"initialValue":{"baseExpression":{"id":2959,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5055:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":2961,"indexExpression":{"id":2960,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"5064:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5055:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5030:38:14"},{"assignments":[2964],"declarations":[{"constant":false,"id":2964,"mutability":"mutable","name":"tokenAddress","nameLocation":"5081:12:14","nodeType":"VariableDeclaration","scope":2998,"src":"5073:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2983,"initialValue":{"arguments":[{"expression":{"id":2969,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"5154:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"id":2970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5162:4:14","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"5154:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2971,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"5171:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"id":2972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5179:6:14","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":2450,"src":"5171:14:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":2975,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5198:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Projects_$3086","typeString":"contract Projects"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Projects_$3086","typeString":"contract Projects"}],"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5190:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2973,"name":"address","nodeType":"ElementaryTypeName","src":"5190:7:14","typeDescriptions":{}}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5190:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2977,"name":"FSOCIETY_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"5208:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2978,"name":"project","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"5228:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_memory_ptr","typeString":"struct Projects.Project memory"}},"id":2979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5236:13:14","memberName":"authorAddress","nodeType":"MemberAccess","referencedDeclaration":2466,"src":"5228:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2980,"name":"AUTHOR_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5254:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2981,"name":"INVESTORS_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"5272:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2966,"name":"tokenFactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"5117:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2965,"name":"IProjectTokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"5096:20:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProjectTokenFactory_$3397_$","typeString":"type(contract IProjectTokenFactory)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IProjectTokenFactory_$3397","typeString":"contract IProjectTokenFactory"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5138:11:14","memberName":"createToken","nodeType":"MemberAccess","referencedDeclaration":3396,"src":"5096:53:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,string memory,address,uint256,address,uint256,uint256) external returns (address)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5096:196:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5073:219:14"},{"assignments":[2985,null],"declarations":[{"constant":false,"id":2985,"mutability":"mutable","name":"poolAddress","nameLocation":"5306:11:14","nodeType":"VariableDeclaration","scope":2998,"src":"5298:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2984,"name":"address","nodeType":"ElementaryTypeName","src":"5298:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":2993,"initialValue":{"arguments":[{"id":2990,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"5377:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2991,"name":"wethTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"5394:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2987,"name":"poolFactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"5342:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2986,"name":"ITokensPoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"5323:18:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ITokensPoolFactory_$3131_$","typeString":"type(contract ITokensPoolFactory)"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5323:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ITokensPoolFactory_$3131","typeString":"contract ITokensPoolFactory"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5362:10:14","memberName":"createPool","nodeType":"MemberAccess","referencedDeclaration":3104,"src":"5323:49:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$_t_bytes32_$","typeString":"function (address,address) external returns (address,bytes32)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5323:91:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bytes32_$","typeString":"tuple(address,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"5297:117:14"},{"eventCall":{"arguments":[{"id":2995,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"5478:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2994,"name":"ProjectValidated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"5461:16:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5461:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2997,"nodeType":"EmitStatement","src":"5456:26:14"}]},"functionSelector":"57021469","id":2999,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2950,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"4997:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2951,"kind":"modifierInvocation","modifierName":{"id":2949,"name":"onlyAuthor","nameLocations":["4986:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2583,"src":"4986:10:14"},"nodeType":"ModifierInvocation","src":"4986:15:14"},{"arguments":[{"id":2953,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"5021:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2954,"kind":"modifierInvocation","modifierName":{"id":2952,"name":"crowdfundingClosed","nameLocations":["5002:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"5002:18:14"},"nodeType":"ModifierInvocation","src":"5002:23:14"}],"name":"validateProject","nameLocation":"4948:15:14","nodeType":"FunctionDefinition","parameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"_id","nameLocation":"4972:3:14","nodeType":"VariableDeclaration","scope":2999,"src":"4964:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"4964:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4963:13:14"},"returnParameters":{"id":2955,"nodeType":"ParameterList","parameters":[],"src":"5026:0:14"},"scope":3086,"src":"4939:547:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3052,"nodeType":"Block","src":"5579:314:14","statements":[{"assignments":[3011],"declarations":[{"constant":false,"id":3011,"mutability":"mutable","name":"commitment","nameLocation":"5591:10:14","nodeType":"VariableDeclaration","scope":3052,"src":"5583:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5583:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3018,"initialValue":{"baseExpression":{"baseExpression":{"id":3012,"name":"commitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"5604:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":3014,"indexExpression":{"id":3013,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"5616:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5604:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3017,"indexExpression":{"expression":{"id":3015,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5621:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5625:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5621:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5604:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5583:49:14"},{"assignments":[3020,null],"declarations":[{"constant":false,"id":3020,"mutability":"mutable","name":"value","nameLocation":"5643:5:14","nodeType":"VariableDeclaration","scope":3052,"src":"5638:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint","nodeType":"ElementaryTypeName","src":"5638:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3024,"initialValue":{"arguments":[{"id":3022,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"5679:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3021,"name":"computeValueAndLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"5654:24:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256,uint256)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5654:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5637:53:14"},{"assignments":[3026],"declarations":[{"constant":false,"id":3026,"mutability":"mutable","name":"tokenAmount","nameLocation":"5703:11:14","nodeType":"VariableDeclaration","scope":3052,"src":"5695:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"5695:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3036,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"INVESTORS_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"5718:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"baseExpression":{"id":3028,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5737:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":3030,"indexExpression":{"id":3029,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"5746:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5737:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":3031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5751:4:14","memberName":"fund","nodeType":"MemberAccess","referencedDeclaration":2452,"src":"5737:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5718:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5717:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5759:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5717:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5695:69:14"},{"expression":{"arguments":[{"expression":{"id":3047,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5865:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5869:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5865:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3049,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"5877:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":3041,"name":"projects","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5824:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Project_$2469_storage_$","typeString":"mapping(uint256 => struct Projects.Project storage ref)"}},"id":3043,"indexExpression":{"id":3042,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"5833:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_Project_$2469_storage","typeString":"struct Projects.Project storage ref"}},"id":3044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5838:12:14","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":2468,"src":"5824:26:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3038,"name":"tokenFactoryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"5792:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3037,"name":"IProjectTokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"5771:20:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IProjectTokenFactory_$3397_$","typeString":"type(contract IProjectTokenFactory)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5771:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IProjectTokenFactory_$3397","typeString":"contract IProjectTokenFactory"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5817:6:14","memberName":"tokens","nodeType":"MemberAccess","referencedDeclaration":3377,"src":"5771:52:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_contract$_IERC20MetadataUpgradeable_$883_$","typeString":"function (address) external returns (contract IERC20MetadataUpgradeable)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5771:80:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20MetadataUpgradeable_$883","typeString":"contract IERC20MetadataUpgradeable"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5856:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":825,"src":"5771:93:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5771:118:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3051,"nodeType":"ExpressionStatement","src":"5771:118:14"}]},"functionSelector":"60ae7c3b","id":3053,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3004,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"5558:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3005,"kind":"modifierInvocation","modifierName":{"id":3003,"name":"crowdfundingClosed","nameLocations":["5539:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"5539:18:14"},"nodeType":"ModifierInvocation","src":"5539:23:14"},{"arguments":[{"id":3007,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"5574:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3008,"kind":"modifierInvocation","modifierName":{"id":3006,"name":"isCommited","nameLocations":["5563:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2650,"src":"5563:10:14"},"nodeType":"ModifierInvocation","src":"5563:15:14"}],"name":"claimProjectTokens","nameLocation":"5498:18:14","nodeType":"FunctionDefinition","parameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"_id","nameLocation":"5525:3:14","nodeType":"VariableDeclaration","scope":3053,"src":"5517:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"5517:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5516:13:14"},"returnParameters":{"id":3009,"nodeType":"ParameterList","parameters":[],"src":"5579:0:14"},"scope":3086,"src":"5489:404:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3084,"nodeType":"Block","src":"6003:148:14","statements":[{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"_liquidity","nameLocation":"6015:10:14","nodeType":"VariableDeclaration","scope":3084,"src":"6007:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"6007:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3070,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"6029:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3065,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"6039:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6029:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6028:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3230","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6052:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"6028:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6007:47:14"},{"assignments":[3072],"declarations":[{"constant":false,"id":3072,"mutability":"mutable","name":"_amount","nameLocation":"6072:7:14","nodeType":"VariableDeclaration","scope":3084,"src":"6064:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"6064:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3079,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3073,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"6083:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3074,"name":"PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"6093:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6083:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6082:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3077,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"6106:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6082:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6064:51:14"},{"expression":{"components":[{"id":3080,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"6127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3081,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"6136:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6126:21:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3061,"id":3083,"nodeType":"Return","src":"6119:28:14"}]},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"computeValueAndLiquidity","nameLocation":"5905:24:14","nodeType":"FunctionDefinition","parameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"_value","nameLocation":"5938:6:14","nodeType":"VariableDeclaration","scope":3085,"src":"5930:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"5930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5929:16:14"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"amount","nameLocation":"5976:6:14","nodeType":"VariableDeclaration","scope":3085,"src":"5968:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"5968:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3060,"mutability":"mutable","name":"liquidity","nameLocation":"5992:9:14","nodeType":"VariableDeclaration","scope":3085,"src":"5984:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"5984:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:35:14"},"scope":3086,"src":"5896:255:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3087,"src":"467:5686:14","usedErrors":[]}],"src":"33:6121:14"},"id":14},"contracts/pools/interfaces/ITokensPool.sol":{"ast":{"absolutePath":"contracts/pools/interfaces/ITokensPool.sol","exportedSymbols":{"ITokensPool":[3089]},"id":3090,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3088,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"ITokensPool","contractDependencies":[],"contractKind":"interface","fullyImplemented":true,"id":3089,"linearizedBaseContracts":[3089],"name":"ITokensPool","nameLocation":"67:11:15","nodeType":"ContractDefinition","nodes":[],"scope":3090,"src":"57:26:15","usedErrors":[]}],"src":"32:52:15"},"id":15},"contracts/pools/interfaces/ITokensPoolFactory.sol":{"ast":{"absolutePath":"contracts/pools/interfaces/ITokensPoolFactory.sol","exportedSymbols":{"ITokensPool":[3089],"ITokensPoolFactory":[3131]},"id":3132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3091,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:16"},{"absolutePath":"contracts/pools/interfaces/ITokensPool.sol","file":"./ITokensPool.sol","id":3093,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3132,"sourceUnit":3090,"src":"57:48:16","symbolAliases":[{"foreign":{"id":3092,"name":"ITokensPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"66:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ITokensPoolFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3131,"linearizedBaseContracts":[3131],"name":"ITokensPoolFactory","nameLocation":"117:18:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e3433615","id":3104,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"156:10:16","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"_token1","nameLocation":"184:7:16","nodeType":"VariableDeclaration","scope":3104,"src":"176:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3094,"name":"address","nodeType":"ElementaryTypeName","src":"176:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"_token2","nameLocation":"209:7:16","nodeType":"VariableDeclaration","scope":3104,"src":"201:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3096,"name":"address","nodeType":"ElementaryTypeName","src":"201:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"166:56:16"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"poolAddress","nameLocation":"249:11:16","nodeType":"VariableDeclaration","scope":3104,"src":"241:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"241:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"poolHash","nameLocation":"270:8:16","nodeType":"VariableDeclaration","scope":3104,"src":"262:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"262:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"240:39:16"},"scope":3131,"src":"147:133:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f6b81850","id":3114,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolByTokensPair","nameLocation":"295:19:16","nodeType":"FunctionDefinition","parameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"_token1","nameLocation":"323:7:16","nodeType":"VariableDeclaration","scope":3114,"src":"315:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3105,"name":"address","nodeType":"ElementaryTypeName","src":"315:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"_token2","nameLocation":"340:7:16","nodeType":"VariableDeclaration","scope":3114,"src":"332:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3107,"name":"address","nodeType":"ElementaryTypeName","src":"332:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"314:34:16"},"returnParameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3114,"src":"372:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITokensPool_$3089","typeString":"contract ITokensPool"},"typeName":{"id":3111,"nodeType":"UserDefinedTypeName","pathNode":{"id":3110,"name":"ITokensPool","nameLocations":["372:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3089,"src":"372:11:16"},"referencedDeclaration":3089,"src":"372:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITokensPool_$3089","typeString":"contract ITokensPool"}},"visibility":"internal"}],"src":"371:13:16"},"scope":3131,"src":"286:99:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9c272001","id":3122,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolByHash","nameLocation":"400:13:16","nodeType":"FunctionDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"_hash","nameLocation":"422:5:16","nodeType":"VariableDeclaration","scope":3122,"src":"414:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"414:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"413:15:16"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3122,"src":"452:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ITokensPool_$3089","typeString":"contract ITokensPool"},"typeName":{"id":3119,"nodeType":"UserDefinedTypeName","pathNode":{"id":3118,"name":"ITokensPool","nameLocations":["452:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":3089,"src":"452:11:16"},"referencedDeclaration":3089,"src":"452:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_ITokensPool_$3089","typeString":"contract ITokensPool"}},"visibility":"internal"}],"src":"451:13:16"},"scope":3131,"src":"391:74:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d75a2d72","id":3130,"implemented":false,"kind":"function","modifiers":[],"name":"getTokenPools","nameLocation":"480:13:16","nodeType":"FunctionDefinition","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"_token","nameLocation":"502:6:16","nodeType":"VariableDeclaration","scope":3130,"src":"494:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"494:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"493:16:16"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3130,"src":"533:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3126,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3127,"nodeType":"ArrayTypeName","src":"533:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"532:18:16"},"scope":3131,"src":"471:80:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3132,"src":"107:447:16","usedErrors":[]}],"src":"32:523:16"},"id":16},"contracts/test/WETHToken.sol":{"ast":{"absolutePath":"contracts/test/WETHToken.sol","exportedSymbols":{"Context":[2408],"ERC20":[1988],"IERC20":[2066],"IERC20Metadata":[2091],"WETHToken":[3151]},"id":3152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3133,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3134,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3152,"sourceUnit":1989,"src":"57:55:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3135,"name":"ERC20","nameLocations":["136:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"136:5:17"},"id":3136,"nodeType":"InheritanceSpecifier","src":"136:5:17"}],"canonicalName":"WETHToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3151,"linearizedBaseContracts":[3151,1988,2091,2066,2408],"name":"WETHToken","nameLocation":"123:9:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3149,"nodeType":"Block","src":"193:46:17","statements":[{"expression":{"arguments":[{"expression":{"id":3144,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"209:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"213:6:17","memberName":"sender","nodeType":"MemberAccess","src":"209:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31303030","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"221:10:17","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"},"value":"1000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000_by_1","typeString":"int_const 1000000000000000000000"}],"id":3143,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"203:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"203:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3148,"nodeType":"ExpressionStatement","src":"203:29:17"}]},"id":3150,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"57726170706564204554484552","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"168:15:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c55b3b5b7f4eb3d06a1ec8b05d2c8d76c8a2a20ee72ad03e7a6bf52f2a52f6e8","typeString":"literal_string \"Wrapped ETHER\""},"value":"Wrapped ETHER"},{"hexValue":"57455448","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"185:6:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8","typeString":"literal_string \"WETH\""},"value":"WETH"}],"id":3141,"kind":"baseConstructorSpecifier","modifierName":{"id":3138,"name":"ERC20","nameLocations":["162:5:17"],"nodeType":"IdentifierPath","referencedDeclaration":1988,"src":"162:5:17"},"nodeType":"ModifierInvocation","src":"162:30:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[],"src":"159:2:17"},"returnParameters":{"id":3142,"nodeType":"ParameterList","parameters":[],"src":"193:0:17"},"scope":3151,"src":"148:91:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3152,"src":"114:127:17","usedErrors":[]}],"src":"32:209:17"},"id":17},"contracts/tokens/ProjectTokenERC20.sol":{"ast":{"absolutePath":"contracts/tokens/ProjectTokenERC20.sol","exportedSymbols":{"ERC20Upgradeable":[780],"Initializable":[168],"ProjectTokenERC20":[3265]},"id":3266,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3153,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":3155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3266,"sourceUnit":781,"src":"57:104:18","symbolAliases":[{"foreign":{"id":3154,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"66:16:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":3157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3266,"sourceUnit":169,"src":"162:98:18","symbolAliases":[{"foreign":{"id":3156,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"171:13:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3158,"name":"Initializable","nameLocations":["292:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":168,"src":"292:13:18"},"id":3159,"nodeType":"InheritanceSpecifier","src":"292:13:18"},{"baseName":{"id":3160,"name":"ERC20Upgradeable","nameLocations":["307:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":780,"src":"307:16:18"},"id":3161,"nodeType":"InheritanceSpecifier","src":"307:16:18"}],"canonicalName":"ProjectTokenERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3265,"linearizedBaseContracts":[3265,780,883,858,1209,168],"name":"ProjectTokenERC20","nameLocation":"271:17:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3193,"nodeType":"Block","src":"616:131:18","statements":[{"expression":{"arguments":[{"id":3183,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"651:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3184,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"658:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3185,"name":"_fsociety","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"667:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3186,"name":"_fsocietySupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"678:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3187,"name":"_author","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"695:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3188,"name":"_authorSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"704:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3189,"name":"_other","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"719:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3190,"name":"_otherSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"727:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3182,"name":"__ProjectTokenERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"626:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (string memory,string memory,address,uint256,address,uint256,address,uint256)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"626:114:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3192,"nodeType":"ExpressionStatement","src":"626:114:18"}]},"functionSelector":"a238d311","id":3194,"implemented":true,"kind":"function","modifiers":[{"id":3180,"kind":"modifierInvocation","modifierName":{"id":3179,"name":"initializer","nameLocations":["604:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":70,"src":"604:11:18"},"nodeType":"ModifierInvocation","src":"604:11:18"}],"name":"initialize","nameLocation":"339:10:18","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3163,"mutability":"mutable","name":"_name","nameLocation":"373:5:18","nodeType":"VariableDeclaration","scope":3194,"src":"359:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3162,"name":"string","nodeType":"ElementaryTypeName","src":"359:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3165,"mutability":"mutable","name":"_symbol","nameLocation":"403:7:18","nodeType":"VariableDeclaration","scope":3194,"src":"389:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3164,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"_fsociety","nameLocation":"429:9:18","nodeType":"VariableDeclaration","scope":3194,"src":"421:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"421:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"_fsocietySupply","nameLocation":"456:15:18","nodeType":"VariableDeclaration","scope":3194,"src":"448:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"_author","nameLocation":"489:7:18","nodeType":"VariableDeclaration","scope":3194,"src":"481:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"481:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"_authorSupply","nameLocation":"514:13:18","nodeType":"VariableDeclaration","scope":3194,"src":"506:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"506:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"_other","nameLocation":"546:6:18","nodeType":"VariableDeclaration","scope":3194,"src":"538:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"538:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"_otherSupply","nameLocation":"570:12:18","nodeType":"VariableDeclaration","scope":3194,"src":"562:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"562:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:239:18"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[],"src":"616:0:18"},"scope":3265,"src":"330:417:18","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3230,"nodeType":"Block","src":"1372:173:18","statements":[{"expression":{"arguments":[{"id":3217,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"1405:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3218,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"1412:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3216,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1382:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1382:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3220,"nodeType":"ExpressionStatement","src":"1382:38:18"},{"expression":{"arguments":[{"id":3222,"name":"_fsociety","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"1465:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3223,"name":"_fsocietySupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"1476:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3224,"name":"_author","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"1493:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3225,"name":"_authorSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"1502:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3226,"name":"_other","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"1517:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3227,"name":"_otherSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"1525:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3221,"name":"__ProjectTokenERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"1430:34:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,uint256,address,uint256)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:108:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3229,"nodeType":"ExpressionStatement","src":"1430:108:18"}]},"documentation":{"id":3195,"nodeType":"StructuredDocumentation","src":"757:311:18","text":" @dev Mint supplies\n - `fsocietySupply` amount of token and transfers them to `fsociety` contract.\n - `authorSupply` amount of token and transfers them to `author`.\n - `otherSupply` amount of token and transfers them to `otherContract`.\n See {ERC20-constructor}."},"id":3231,"implemented":true,"kind":"function","modifiers":[{"id":3214,"kind":"modifierInvocation","modifierName":{"id":3213,"name":"onlyInitializing","nameLocations":["1355:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"1355:16:18"},"nodeType":"ModifierInvocation","src":"1355:16:18"}],"name":"__ProjectTokenERC20_init","nameLocation":"1082:24:18","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"_name","nameLocation":"1130:5:18","nodeType":"VariableDeclaration","scope":3231,"src":"1116:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3196,"name":"string","nodeType":"ElementaryTypeName","src":"1116:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"_symbol","nameLocation":"1160:7:18","nodeType":"VariableDeclaration","scope":3231,"src":"1146:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3198,"name":"string","nodeType":"ElementaryTypeName","src":"1146:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"_fsociety","nameLocation":"1186:9:18","nodeType":"VariableDeclaration","scope":3231,"src":"1178:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3200,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"_fsocietySupply","nameLocation":"1213:15:18","nodeType":"VariableDeclaration","scope":3231,"src":"1205:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"_author","nameLocation":"1246:7:18","nodeType":"VariableDeclaration","scope":3231,"src":"1238:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3204,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"_authorSupply","nameLocation":"1271:13:18","nodeType":"VariableDeclaration","scope":3231,"src":"1263:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1263:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"_other","nameLocation":"1303:6:18","nodeType":"VariableDeclaration","scope":3231,"src":"1295:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3208,"name":"address","nodeType":"ElementaryTypeName","src":"1295:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3211,"mutability":"mutable","name":"_otherSupply","nameLocation":"1327:12:18","nodeType":"VariableDeclaration","scope":3231,"src":"1319:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1106:239:18"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[],"src":"1372:0:18"},"scope":3265,"src":"1073:472:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3263,"nodeType":"Block","src":"1798:126:18","statements":[{"expression":{"arguments":[{"id":3249,"name":"_fsociety","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"1814:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3250,"name":"_fsocietySupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"1825:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3248,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1808:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3252,"nodeType":"ExpressionStatement","src":"1808:33:18"},{"expression":{"arguments":[{"id":3254,"name":"_author","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"1857:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3255,"name":"_authorSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3239,"src":"1866:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3253,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1851:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1851:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3257,"nodeType":"ExpressionStatement","src":"1851:29:18"},{"expression":{"arguments":[{"id":3259,"name":"_other","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"1896:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3260,"name":"_otherSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"1904:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3258,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1890:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1890:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3262,"nodeType":"ExpressionStatement","src":"1890:27:18"}]},"id":3264,"implemented":true,"kind":"function","modifiers":[{"id":3246,"kind":"modifierInvocation","modifierName":{"id":3245,"name":"onlyInitializing","nameLocations":["1781:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"1781:16:18"},"nodeType":"ModifierInvocation","src":"1781:16:18"}],"name":"__ProjectTokenERC20_init_unchained","nameLocation":"1560:34:18","nodeType":"FunctionDefinition","parameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"_fsociety","nameLocation":"1612:9:18","nodeType":"VariableDeclaration","scope":3264,"src":"1604:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3232,"name":"address","nodeType":"ElementaryTypeName","src":"1604:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"_fsocietySupply","nameLocation":"1639:15:18","nodeType":"VariableDeclaration","scope":3264,"src":"1631:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"_author","nameLocation":"1672:7:18","nodeType":"VariableDeclaration","scope":3264,"src":"1664:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3236,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"_authorSupply","nameLocation":"1697:13:18","nodeType":"VariableDeclaration","scope":3264,"src":"1689:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1689:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3241,"mutability":"mutable","name":"_other","nameLocation":"1729:6:18","nodeType":"VariableDeclaration","scope":3264,"src":"1721:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3240,"name":"address","nodeType":"ElementaryTypeName","src":"1721:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3243,"mutability":"mutable","name":"_otherSupply","nameLocation":"1753:12:18","nodeType":"VariableDeclaration","scope":3264,"src":"1745:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1745:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1594:177:18"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[],"src":"1798:0:18"},"scope":3265,"src":"1551:373:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3266,"src":"262:1664:18","usedErrors":[]}],"src":"32:1895:18"},"id":18},"contracts/tokens/ProjectTokenFactory.sol":{"ast":{"absolutePath":"contracts/tokens/ProjectTokenFactory.sol","exportedSymbols":{"Address":[2386],"Clones":[1402],"IERC20MetadataUpgradeable":[883],"IProjectTokenFactory":[3397],"Ownable":[1322],"ProjectTokenERC20":[3265],"ProjectTokenFactory":[3365]},"id":3366,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3267,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":3269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3366,"sourceUnit":2387,"src":"57:68:19","symbolAliases":[{"foreign":{"id":3268,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"66:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":3271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3366,"sourceUnit":1403,"src":"126:66:19","symbolAliases":[{"foreign":{"id":3270,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"135:6:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3366,"sourceUnit":1323,"src":"193:69:19","symbolAliases":[{"foreign":{"id":3272,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"202:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","id":3275,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3366,"sourceUnit":884,"src":"263:133:19","symbolAliases":[{"foreign":{"id":3274,"name":"IERC20MetadataUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"272:25:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/tokens/interfaces/IProjectTokenFactory.sol","file":"./interfaces/IProjectTokenFactory.sol","id":3277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3366,"sourceUnit":3398,"src":"398:77:19","symbolAliases":[{"foreign":{"id":3276,"name":"IProjectTokenFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"407:20:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/tokens/ProjectTokenERC20.sol","file":"./ProjectTokenERC20.sol","id":3279,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3366,"sourceUnit":3266,"src":"476:60:19","symbolAliases":[{"foreign":{"id":3278,"name":"ProjectTokenERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"485:17:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3280,"name":"IProjectTokenFactory","nameLocations":["570:20:19"],"nodeType":"IdentifierPath","referencedDeclaration":3397,"src":"570:20:19"},"id":3281,"nodeType":"InheritanceSpecifier","src":"570:20:19"},{"baseName":{"id":3282,"name":"Ownable","nameLocations":["592:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":1322,"src":"592:7:19"},"id":3283,"nodeType":"InheritanceSpecifier","src":"592:7:19"}],"canonicalName":"ProjectTokenFactory","contractDependencies":[3265],"contractKind":"contract","fullyImplemented":true,"id":3365,"linearizedBaseContracts":[3365,1322,2408,3397],"name":"ProjectTokenFactory","nameLocation":"547:19:19","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3285,"mutability":"immutable","name":"proxy","nameLocation":"637:5:19","nodeType":"VariableDeclaration","scope":3365,"src":"611:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"baseFunctions":[3377],"constant":false,"functionSelector":"e4860339","id":3290,"mutability":"mutable","name":"tokens","nameLocation":"702:6:19","nodeType":"VariableDeclaration","scope":3365,"src":"649:59:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IERC20MetadataUpgradeable_$883_$","typeString":"mapping(address => contract IERC20MetadataUpgradeable)"},"typeName":{"id":3289,"keyType":{"id":3286,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"649:45:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_contract$_IERC20MetadataUpgradeable_$883_$","typeString":"mapping(address => contract IERC20MetadataUpgradeable)"},"valueType":{"id":3288,"nodeType":"UserDefinedTypeName","pathNode":{"id":3287,"name":"IERC20MetadataUpgradeable","nameLocations":["668:25:19"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"668:25:19"},"referencedDeclaration":883,"src":"668:25:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20MetadataUpgradeable_$883","typeString":"contract IERC20MetadataUpgradeable"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"ffc04f682c7b287e4b552dacd4b833d7c33dc0549cd6da84388408e4830c0562","id":3298,"name":"TokenCreated","nameLocation":"721:12:19","nodeType":"EventDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"742:5:19","nodeType":"VariableDeclaration","scope":3298,"src":"734:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3294,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"756:4:19","nodeType":"VariableDeclaration","scope":3298,"src":"749:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3293,"name":"string","nodeType":"ElementaryTypeName","src":"749:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3296,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"769:6:19","nodeType":"VariableDeclaration","scope":3298,"src":"762:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3295,"name":"string","nodeType":"ElementaryTypeName","src":"762:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"733:43:19"},"src":"715:62:19"},{"body":{"id":3311,"nodeType":"Block","src":"797:57:19","statements":[{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3301,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"807:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"823:21:19","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_ProjectTokenERC20_$3265_$","typeString":"function () returns (contract ProjectTokenERC20)"},"typeName":{"id":3305,"nodeType":"UserDefinedTypeName","pathNode":{"id":3304,"name":"ProjectTokenERC20","nameLocations":["827:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":3265,"src":"827:17:19"},"referencedDeclaration":3265,"src":"827:17:19","typeDescriptions":{"typeIdentifier":"t_contract$_ProjectTokenERC20_$3265","typeString":"contract ProjectTokenERC20"}}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"823:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ProjectTokenERC20_$3265","typeString":"contract ProjectTokenERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProjectTokenERC20_$3265","typeString":"contract ProjectTokenERC20"}],"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"815:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3302,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:19","typeDescriptions":{}}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"815:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"807:40:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3310,"nodeType":"ExpressionStatement","src":"807:40:19"}]},"id":3312,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3299,"nodeType":"ParameterList","parameters":[],"src":"794:2:19"},"returnParameters":{"id":3300,"nodeType":"ParameterList","parameters":[],"src":"797:0:19"},"scope":3365,"src":"783:71:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3396],"body":{"id":3363,"nodeType":"Block","src":"1132:263:19","statements":[{"assignments":[3334],"declarations":[{"constant":false,"id":3334,"mutability":"mutable","name":"token","nameLocation":"1150:5:19","nodeType":"VariableDeclaration","scope":3363,"src":"1142:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3333,"name":"address","nodeType":"ElementaryTypeName","src":"1142:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3339,"initialValue":{"arguments":[{"id":3337,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"1171:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3335,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1158:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$1402_$","typeString":"type(library Clones)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1165:5:19","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":1345,"src":"1158:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) returns (address)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1158:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1142:35:19"},{"expression":{"arguments":[{"id":3344,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"1223:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3345,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"1230:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3346,"name":"_fsociety","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"1239:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3347,"name":"_fsocietySupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"1250:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3348,"name":"_author","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"1267:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3349,"name":"_authorSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"1276:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3350,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1291:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1295:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1291:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3352,"name":"_otherSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"1303:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3341,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"1205:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3340,"name":"ProjectTokenERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"1187:17:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ProjectTokenERC20_$3265_$","typeString":"type(contract ProjectTokenERC20)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1187:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ProjectTokenERC20_$3265","typeString":"contract ProjectTokenERC20"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1212:10:19","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"1187:35:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (string memory,string memory,address,uint256,address,uint256,address,uint256) external"}},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1187:129:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3354,"nodeType":"ExpressionStatement","src":"1187:129:19"},{"eventCall":{"arguments":[{"id":3356,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"1344:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3357,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"1351:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3358,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"1358:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3355,"name":"TokenCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"1331:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory,string memory)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1331:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3360,"nodeType":"EmitStatement","src":"1326:40:19"},{"expression":{"id":3361,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"1383:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3332,"id":3362,"nodeType":"Return","src":"1376:12:19"}]},"functionSelector":"4b6423d6","id":3364,"implemented":true,"kind":"function","modifiers":[{"id":3329,"kind":"modifierInvocation","modifierName":{"id":3328,"name":"onlyOwner","nameLocations":["1104:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"1104:9:19"},"nodeType":"ModifierInvocation","src":"1104:9:19"}],"name":"createToken","nameLocation":"869:11:19","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"_name","nameLocation":"904:5:19","nodeType":"VariableDeclaration","scope":3364,"src":"890:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3313,"name":"string","nodeType":"ElementaryTypeName","src":"890:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"_symbol","nameLocation":"934:7:19","nodeType":"VariableDeclaration","scope":3364,"src":"920:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3315,"name":"string","nodeType":"ElementaryTypeName","src":"920:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"_fsociety","nameLocation":"960:9:19","nodeType":"VariableDeclaration","scope":3364,"src":"952:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3317,"name":"address","nodeType":"ElementaryTypeName","src":"952:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3320,"mutability":"mutable","name":"_fsocietySupply","nameLocation":"987:15:19","nodeType":"VariableDeclaration","scope":3364,"src":"979:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"979:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"_author","nameLocation":"1021:7:19","nodeType":"VariableDeclaration","scope":3364,"src":"1013:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3321,"name":"address","nodeType":"ElementaryTypeName","src":"1013:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"_authorSupply","nameLocation":"1046:13:19","nodeType":"VariableDeclaration","scope":3364,"src":"1038:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3326,"mutability":"mutable","name":"_otherSupply","nameLocation":"1078:12:19","nodeType":"VariableDeclaration","scope":3364,"src":"1070:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"880:216:19"},"returnParameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3364,"src":"1123:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3330,"name":"address","nodeType":"ElementaryTypeName","src":"1123:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1122:9:19"},"scope":3365,"src":"860:535:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3366,"src":"538:860:19","usedErrors":[]}],"src":"32:1368:19"},"id":19},"contracts/tokens/interfaces/IProjectTokenFactory.sol":{"ast":{"absolutePath":"contracts/tokens/interfaces/IProjectTokenFactory.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[883],"IProjectTokenFactory":[3397]},"id":3398,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3367,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","id":3369,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3398,"sourceUnit":884,"src":"57:133:20","symbolAliases":[{"foreign":{"id":3368,"name":"IERC20MetadataUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"66:25:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IProjectTokenFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3397,"linearizedBaseContracts":[3397],"name":"IProjectTokenFactory","nameLocation":"202:20:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e4860339","id":3377,"implemented":false,"kind":"function","modifiers":[],"name":"tokens","nameLocation":"243:6:20","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"tokenAddress","nameLocation":"258:12:20","nodeType":"VariableDeclaration","scope":3377,"src":"250:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3370,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"249:22:20"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"290:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20MetadataUpgradeable_$883","typeString":"contract IERC20MetadataUpgradeable"},"typeName":{"id":3374,"nodeType":"UserDefinedTypeName","pathNode":{"id":3373,"name":"IERC20MetadataUpgradeable","nameLocations":["290:25:20"],"nodeType":"IdentifierPath","referencedDeclaration":883,"src":"290:25:20"},"referencedDeclaration":883,"src":"290:25:20","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20MetadataUpgradeable_$883","typeString":"contract IERC20MetadataUpgradeable"}},"visibility":"internal"}],"src":"289:27:20"},"scope":3397,"src":"234:83:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4b6423d6","id":3396,"implemented":false,"kind":"function","modifiers":[],"name":"createToken","nameLocation":"332:11:20","nodeType":"FunctionDefinition","parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"_name","nameLocation":"367:5:20","nodeType":"VariableDeclaration","scope":3396,"src":"353:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3378,"name":"string","nodeType":"ElementaryTypeName","src":"353:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"_symbol","nameLocation":"397:7:20","nodeType":"VariableDeclaration","scope":3396,"src":"383:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3380,"name":"string","nodeType":"ElementaryTypeName","src":"383:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"_fsocietyAddress","nameLocation":"423:16:20","nodeType":"VariableDeclaration","scope":3396,"src":"415:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3382,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"_fsocietySupply","nameLocation":"457:15:20","nodeType":"VariableDeclaration","scope":3396,"src":"449:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"449:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"_author","nameLocation":"490:7:20","nodeType":"VariableDeclaration","scope":3396,"src":"482:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3386,"name":"address","nodeType":"ElementaryTypeName","src":"482:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3389,"mutability":"mutable","name":"_authorSupply","nameLocation":"515:13:20","nodeType":"VariableDeclaration","scope":3396,"src":"507:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"507:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"_otherSupply","nameLocation":"547:12:20","nodeType":"VariableDeclaration","scope":3396,"src":"539:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3390,"name":"uint256","nodeType":"ElementaryTypeName","src":"539:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"343:222:20"},"returnParameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3396,"src":"584:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3393,"name":"address","nodeType":"ElementaryTypeName","src":"584:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"583:9:20"},"scope":3397,"src":"323:270:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3398,"src":"192:408:20","usedErrors":[]}],"src":"32:569:20"},"id":20}},"contracts":{"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610859806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106a3565b60405180910390f35b6100df6100da36600461070d565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f366004610737565b61024c565b604051601281526020016100c3565b6100df61013136600461070d565b610270565b6100f3610144366004610773565b6001600160a01b031660009081526033602052604090205490565b6100b6610292565b6100df61017536600461070d565b6102a1565b6100df61018836600461070d565b610321565b6100f361019b366004610795565b61032f565b6060603680546101af906107c8565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c8565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d9190610802565b61035a565b6060603780546101af906107c8565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260336020526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106969086815260200190565b60405180910390a36104f2565b600060208083528351808285015260005b818110156106d0578581018301518582016040015282016106b4565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070857600080fd5b919050565b6000806040838503121561072057600080fd5b610729836106f1565b946020939093013593505050565b60008060006060848603121561074c57600080fd5b610755846106f1565b9250610763602085016106f1565b9150604084013590509250925092565b60006020828403121561078557600080fd5b61078e826106f1565b9392505050565b600080604083850312156107a857600080fd5b6107b1836106f1565b91506107bf602084016106f1565b90509250929050565b600181811c908216806107dc57607f821691505b6020821081036107fc57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea26469706673582212205f9c0b53a1fa9653d0d545f776c39decc2cf19691db2484bb79310a48fac270964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x859 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x737 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x696 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6B4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x729 DUP4 PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP5 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 POP PUSH2 0x763 PUSH1 0x20 DUP6 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP3 PUSH2 0x6F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B1 DUP4 PUSH2 0x6F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x7BF PUSH1 0x20 DUP5 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7DC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F SWAP13 SIGNEXTEND MSTORE8 LOG1 STATICCALL SWAP7 MSTORE8 0xD0 0xD5 GASLIMIT 0xF7 PUSH23 0xC39DECC2CF19691DB2484BB79310A48FAC270964736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"1480:12159:1:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_774":{"entryPoint":null,"id":774,"parameterSlots":3,"returnSlots":0},"@_approve_709":{"entryPoint":858,"id":709,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_763":{"entryPoint":null,"id":763,"parameterSlots":3,"returnSlots":0},"@_msgSender_1194":{"entryPoint":null,"id":1194,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_752":{"entryPoint":1150,"id":752,"parameterSlots":3,"returnSlots":0},"@_transfer_535":{"entryPoint":1272,"id":535,"parameterSlots":3,"returnSlots":0},"@allowance_330":{"entryPoint":815,"id":330,"parameterSlots":2,"returnSlots":1},"@approve_355":{"entryPoint":562,"id":355,"parameterSlots":2,"returnSlots":1},"@balanceOf_287":{"entryPoint":null,"id":287,"parameterSlots":1,"returnSlots":1},"@decimals_263":{"entryPoint":null,"id":263,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_458":{"entryPoint":673,"id":458,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_417":{"entryPoint":624,"id":417,"parameterSlots":2,"returnSlots":1},"@name_243":{"entryPoint":416,"id":243,"parameterSlots":0,"returnSlots":1},"@symbol_253":{"entryPoint":658,"id":253,"parameterSlots":0,"returnSlots":1},"@totalSupply_273":{"entryPoint":null,"id":273,"parameterSlots":0,"returnSlots":1},"@transferFrom_388":{"entryPoint":588,"id":388,"parameterSlots":3,"returnSlots":1},"@transfer_312":{"entryPoint":801,"id":312,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1777,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1941,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1847,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1805,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2050,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1992,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:21","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:21"},"nodeType":"YulFunctionCall","src":"166:21:21"},"nodeType":"YulExpressionStatement","src":"166:21:21"},{"nodeType":"YulVariableDeclaration","src":"196:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:21"},"nodeType":"YulFunctionCall","src":"210:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:21"},"nodeType":"YulFunctionCall","src":"239:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:21"},"nodeType":"YulFunctionCall","src":"232:34:21"},"nodeType":"YulExpressionStatement","src":"232:34:21"},{"nodeType":"YulVariableDeclaration","src":"275:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:21"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:21"},"nodeType":"YulFunctionCall","src":"369:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:21"},"nodeType":"YulFunctionCall","src":"365:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:21"},"nodeType":"YulFunctionCall","src":"403:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:21"},"nodeType":"YulFunctionCall","src":"399:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:21"},"nodeType":"YulFunctionCall","src":"393:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:21"},"nodeType":"YulFunctionCall","src":"358:66:21"},"nodeType":"YulExpressionStatement","src":"358:66:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:21"},"nodeType":"YulFunctionCall","src":"302:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:21","statements":[{"nodeType":"YulAssignment","src":"318:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:21"},"nodeType":"YulFunctionCall","src":"323:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:21","statements":[]},"src":"294:140:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:21"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:21"},"nodeType":"YulFunctionCall","src":"454:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:21"},"nodeType":"YulFunctionCall","src":"450:31:21"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:21"},"nodeType":"YulFunctionCall","src":"443:42:21"},"nodeType":"YulExpressionStatement","src":"443:42:21"},{"nodeType":"YulAssignment","src":"494:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:21"},"nodeType":"YulFunctionCall","src":"525:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:21"},"nodeType":"YulFunctionCall","src":"542:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:21"},"nodeType":"YulFunctionCall","src":"521:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:21"},"nodeType":"YulFunctionCall","src":"506:45:21"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:21"},"nodeType":"YulFunctionCall","src":"502:54:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:21","type":""}],"src":"14:548:21"},{"body":{"nodeType":"YulBlock","src":"616:124:21","statements":[{"nodeType":"YulAssignment","src":"626:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:21"},"nodeType":"YulFunctionCall","src":"635:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:21"}]},{"body":{"nodeType":"YulBlock","src":"718:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:21"},"nodeType":"YulFunctionCall","src":"720:12:21"},"nodeType":"YulExpressionStatement","src":"720:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:21"},"nodeType":"YulFunctionCall","src":"699:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:21"},"nodeType":"YulFunctionCall","src":"695:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:21"},"nodeType":"YulFunctionCall","src":"684:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:21"},"nodeType":"YulFunctionCall","src":"674:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:21"},"nodeType":"YulFunctionCall","src":"667:50:21"},"nodeType":"YulIf","src":"664:70:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:21","type":""}],"src":"567:173:21"},{"body":{"nodeType":"YulBlock","src":"832:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:21"},"nodeType":"YulFunctionCall","src":"880:12:21"},"nodeType":"YulExpressionStatement","src":"880:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:21"},"nodeType":"YulFunctionCall","src":"849:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:21"},"nodeType":"YulFunctionCall","src":"845:32:21"},"nodeType":"YulIf","src":"842:52:21"},{"nodeType":"YulAssignment","src":"903:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:21"},"nodeType":"YulFunctionCall","src":"913:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:21"}]},{"nodeType":"YulAssignment","src":"951:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:21"},"nodeType":"YulFunctionCall","src":"974:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:21"},"nodeType":"YulFunctionCall","src":"961:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:21","type":""}],"src":"745:254:21"},{"body":{"nodeType":"YulBlock","src":"1099:92:21","statements":[{"nodeType":"YulAssignment","src":"1109:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:21"},"nodeType":"YulFunctionCall","src":"1117:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:21"},"nodeType":"YulFunctionCall","src":"1169:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:21"},"nodeType":"YulFunctionCall","src":"1162:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:21"},"nodeType":"YulFunctionCall","src":"1144:41:21"},"nodeType":"YulExpressionStatement","src":"1144:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:21","type":""}],"src":"1004:187:21"},{"body":{"nodeType":"YulBlock","src":"1297:76:21","statements":[{"nodeType":"YulAssignment","src":"1307:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:21"},"nodeType":"YulFunctionCall","src":"1315:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:21"},"nodeType":"YulFunctionCall","src":"1342:25:21"},"nodeType":"YulExpressionStatement","src":"1342:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:21","type":""}],"src":"1196:177:21"},{"body":{"nodeType":"YulBlock","src":"1482:224:21","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:21"},"nodeType":"YulFunctionCall","src":"1530:12:21"},"nodeType":"YulExpressionStatement","src":"1530:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:21"},"nodeType":"YulFunctionCall","src":"1499:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:21"},"nodeType":"YulFunctionCall","src":"1495:32:21"},"nodeType":"YulIf","src":"1492:52:21"},{"nodeType":"YulAssignment","src":"1553:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:21"},"nodeType":"YulFunctionCall","src":"1563:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:21"}]},{"nodeType":"YulAssignment","src":"1601:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:21"},"nodeType":"YulFunctionCall","src":"1630:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:21"},"nodeType":"YulFunctionCall","src":"1611:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:21"}]},{"nodeType":"YulAssignment","src":"1658:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:21"},"nodeType":"YulFunctionCall","src":"1681:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:21"},"nodeType":"YulFunctionCall","src":"1668:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:21","type":""}],"src":"1378:328:21"},{"body":{"nodeType":"YulBlock","src":"1808:87:21","statements":[{"nodeType":"YulAssignment","src":"1818:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:21"},"nodeType":"YulFunctionCall","src":"1826:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:21"},"nodeType":"YulFunctionCall","src":"1871:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:21"},"nodeType":"YulFunctionCall","src":"1853:36:21"},"nodeType":"YulExpressionStatement","src":"1853:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:21","type":""}],"src":"1711:184:21"},{"body":{"nodeType":"YulBlock","src":"1970:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:21"},"nodeType":"YulFunctionCall","src":"2018:12:21"},"nodeType":"YulExpressionStatement","src":"2018:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:21"},"nodeType":"YulFunctionCall","src":"1987:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:21"},"nodeType":"YulFunctionCall","src":"1983:32:21"},"nodeType":"YulIf","src":"1980:52:21"},{"nodeType":"YulAssignment","src":"2041:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:21"},"nodeType":"YulFunctionCall","src":"2051:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:21","type":""}],"src":"1900:186:21"},{"body":{"nodeType":"YulBlock","src":"2178:173:21","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:21"},"nodeType":"YulFunctionCall","src":"2226:12:21"},"nodeType":"YulExpressionStatement","src":"2226:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:21"},"nodeType":"YulFunctionCall","src":"2195:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:21"},"nodeType":"YulFunctionCall","src":"2191:32:21"},"nodeType":"YulIf","src":"2188:52:21"},{"nodeType":"YulAssignment","src":"2249:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:21"},"nodeType":"YulFunctionCall","src":"2259:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:21"}]},{"nodeType":"YulAssignment","src":"2297:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:21"},"nodeType":"YulFunctionCall","src":"2326:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:21"},"nodeType":"YulFunctionCall","src":"2307:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:21","type":""}],"src":"2091:260:21"},{"body":{"nodeType":"YulBlock","src":"2411:325:21","statements":[{"nodeType":"YulAssignment","src":"2421:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:21"},"nodeType":"YulFunctionCall","src":"2431:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:21"},"nodeType":"YulFunctionCall","src":"2478:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:21","statements":[{"nodeType":"YulAssignment","src":"2531:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:21"},"nodeType":"YulFunctionCall","src":"2541:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:21"},"nodeType":"YulFunctionCall","src":"2502:26:21"},"nodeType":"YulIf","src":"2499:61:21"},{"body":{"nodeType":"YulBlock","src":"2619:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:21"},"nodeType":"YulFunctionCall","src":"2643:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:21"},"nodeType":"YulFunctionCall","src":"2633:31:21"},"nodeType":"YulExpressionStatement","src":"2633:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:21"},"nodeType":"YulFunctionCall","src":"2677:15:21"},"nodeType":"YulExpressionStatement","src":"2677:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:21"},"nodeType":"YulFunctionCall","src":"2705:15:21"},"nodeType":"YulExpressionStatement","src":"2705:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:21"},"nodeType":"YulFunctionCall","src":"2595:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:21"},"nodeType":"YulFunctionCall","src":"2572:38:21"},"nodeType":"YulIf","src":"2569:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:21","type":""}],"src":"2356:380:21"},{"body":{"nodeType":"YulBlock","src":"2789:174:21","statements":[{"nodeType":"YulAssignment","src":"2799:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:21"},"nodeType":"YulFunctionCall","src":"2806:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:21"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:21"},"nodeType":"YulFunctionCall","src":"2870:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:21"},"nodeType":"YulFunctionCall","src":"2860:31:21"},"nodeType":"YulExpressionStatement","src":"2860:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:21"},"nodeType":"YulFunctionCall","src":"2904:15:21"},"nodeType":"YulExpressionStatement","src":"2904:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:21"},"nodeType":"YulFunctionCall","src":"2932:15:21"},"nodeType":"YulExpressionStatement","src":"2932:15:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:21"},"nodeType":"YulFunctionCall","src":"2827:10:21"},"nodeType":"YulIf","src":"2824:133:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:21","type":""}],"src":"2741:222:21"},{"body":{"nodeType":"YulBlock","src":"3142:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:21"},"nodeType":"YulFunctionCall","src":"3152:21:21"},"nodeType":"YulExpressionStatement","src":"3152:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:21"},"nodeType":"YulFunctionCall","src":"3189:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:21"},"nodeType":"YulFunctionCall","src":"3182:30:21"},"nodeType":"YulExpressionStatement","src":"3182:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:21"},"nodeType":"YulFunctionCall","src":"3228:18:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:21"},"nodeType":"YulFunctionCall","src":"3221:62:21"},"nodeType":"YulExpressionStatement","src":"3221:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:21"},"nodeType":"YulFunctionCall","src":"3299:18:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:21"},"nodeType":"YulFunctionCall","src":"3292:35:21"},"nodeType":"YulExpressionStatement","src":"3292:35:21"},{"nodeType":"YulAssignment","src":"3336:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:21"},"nodeType":"YulFunctionCall","src":"3344:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:21","type":""}],"src":"2968:401:21"},{"body":{"nodeType":"YulBlock","src":"3548:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:21"},"nodeType":"YulFunctionCall","src":"3558:21:21"},"nodeType":"YulExpressionStatement","src":"3558:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:21"},"nodeType":"YulFunctionCall","src":"3595:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:21"},"nodeType":"YulFunctionCall","src":"3588:30:21"},"nodeType":"YulExpressionStatement","src":"3588:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:21"},"nodeType":"YulFunctionCall","src":"3634:18:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:21"},"nodeType":"YulFunctionCall","src":"3627:62:21"},"nodeType":"YulExpressionStatement","src":"3627:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:21"},"nodeType":"YulFunctionCall","src":"3705:18:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:21"},"nodeType":"YulFunctionCall","src":"3698:34:21"},"nodeType":"YulExpressionStatement","src":"3698:34:21"},{"nodeType":"YulAssignment","src":"3741:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:21"},"nodeType":"YulFunctionCall","src":"3749:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:21","type":""}],"src":"3374:400:21"},{"body":{"nodeType":"YulBlock","src":"3953:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:21"},"nodeType":"YulFunctionCall","src":"3963:21:21"},"nodeType":"YulExpressionStatement","src":"3963:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:21"},"nodeType":"YulFunctionCall","src":"4000:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:21"},"nodeType":"YulFunctionCall","src":"3993:30:21"},"nodeType":"YulExpressionStatement","src":"3993:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:21"},"nodeType":"YulFunctionCall","src":"4039:18:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:21"},"nodeType":"YulFunctionCall","src":"4032:62:21"},"nodeType":"YulExpressionStatement","src":"4032:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:21"},"nodeType":"YulFunctionCall","src":"4110:18:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:21"},"nodeType":"YulFunctionCall","src":"4103:32:21"},"nodeType":"YulExpressionStatement","src":"4103:32:21"},{"nodeType":"YulAssignment","src":"4144:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:21"},"nodeType":"YulFunctionCall","src":"4152:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:21","type":""}],"src":"3779:398:21"},{"body":{"nodeType":"YulBlock","src":"4356:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:21"},"nodeType":"YulFunctionCall","src":"4366:21:21"},"nodeType":"YulExpressionStatement","src":"4366:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:21"},"nodeType":"YulFunctionCall","src":"4403:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:21"},"nodeType":"YulFunctionCall","src":"4396:30:21"},"nodeType":"YulExpressionStatement","src":"4396:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:21"},"nodeType":"YulFunctionCall","src":"4442:18:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:21"},"nodeType":"YulFunctionCall","src":"4435:59:21"},"nodeType":"YulExpressionStatement","src":"4435:59:21"},{"nodeType":"YulAssignment","src":"4503:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:21"},"nodeType":"YulFunctionCall","src":"4511:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:21","type":""}],"src":"4182:353:21"},{"body":{"nodeType":"YulBlock","src":"4714:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:21"},"nodeType":"YulFunctionCall","src":"4724:21:21"},"nodeType":"YulExpressionStatement","src":"4724:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:21"},"nodeType":"YulFunctionCall","src":"4761:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:21"},"nodeType":"YulFunctionCall","src":"4754:30:21"},"nodeType":"YulExpressionStatement","src":"4754:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:21"},"nodeType":"YulFunctionCall","src":"4800:18:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:21"},"nodeType":"YulFunctionCall","src":"4793:62:21"},"nodeType":"YulExpressionStatement","src":"4793:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:21"},"nodeType":"YulFunctionCall","src":"4871:18:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:21"},"nodeType":"YulFunctionCall","src":"4864:35:21"},"nodeType":"YulExpressionStatement","src":"4864:35:21"},{"nodeType":"YulAssignment","src":"4908:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:21"},"nodeType":"YulFunctionCall","src":"4916:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:21","type":""}],"src":"4540:401:21"},{"body":{"nodeType":"YulBlock","src":"5120:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:21"},"nodeType":"YulFunctionCall","src":"5130:21:21"},"nodeType":"YulExpressionStatement","src":"5130:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:21"},"nodeType":"YulFunctionCall","src":"5167:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:21"},"nodeType":"YulFunctionCall","src":"5160:30:21"},"nodeType":"YulExpressionStatement","src":"5160:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:21"},"nodeType":"YulFunctionCall","src":"5206:18:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:21"},"nodeType":"YulFunctionCall","src":"5199:62:21"},"nodeType":"YulExpressionStatement","src":"5199:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:21"},"nodeType":"YulFunctionCall","src":"5277:18:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:21"},"nodeType":"YulFunctionCall","src":"5270:33:21"},"nodeType":"YulExpressionStatement","src":"5270:33:21"},{"nodeType":"YulAssignment","src":"5312:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:21"},"nodeType":"YulFunctionCall","src":"5320:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:21","type":""}],"src":"4946:399:21"},{"body":{"nodeType":"YulBlock","src":"5524:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:21"},"nodeType":"YulFunctionCall","src":"5534:21:21"},"nodeType":"YulExpressionStatement","src":"5534:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:21"},"nodeType":"YulFunctionCall","src":"5571:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:21"},"nodeType":"YulFunctionCall","src":"5564:30:21"},"nodeType":"YulExpressionStatement","src":"5564:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:21"},"nodeType":"YulFunctionCall","src":"5610:18:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:21"},"nodeType":"YulFunctionCall","src":"5603:62:21"},"nodeType":"YulExpressionStatement","src":"5603:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:21"},"nodeType":"YulFunctionCall","src":"5681:18:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:21"},"nodeType":"YulFunctionCall","src":"5674:36:21"},"nodeType":"YulExpressionStatement","src":"5674:36:21"},{"nodeType":"YulAssignment","src":"5719:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:21"},"nodeType":"YulFunctionCall","src":"5727:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:21","type":""}],"src":"5350:402:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106a3565b60405180910390f35b6100df6100da36600461070d565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f366004610737565b61024c565b604051601281526020016100c3565b6100df61013136600461070d565b610270565b6100f3610144366004610773565b6001600160a01b031660009081526033602052604090205490565b6100b6610292565b6100df61017536600461070d565b6102a1565b6100df61018836600461070d565b610321565b6100f361019b366004610795565b61032f565b6060603680546101af906107c8565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c8565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d9190610802565b61035a565b6060603780546101af906107c8565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260336020526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106969086815260200190565b60405180910390a36104f2565b600060208083528351808285015260005b818110156106d0578581018301518582016040015282016106b4565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070857600080fd5b919050565b6000806040838503121561072057600080fd5b610729836106f1565b946020939093013593505050565b60008060006060848603121561074c57600080fd5b610755846106f1565b9250610763602085016106f1565b9150604084013590509250925092565b60006020828403121561078557600080fd5b61078e826106f1565b9392505050565b600080604083850312156107a857600080fd5b6107b1836106f1565b91506107bf602084016106f1565b90509250929050565b600181811c908216806107dc57607f821691505b6020821081036107fc57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea26469706673582212205f9c0b53a1fa9653d0d545f776c39decc2cf19691db2484bb79310a48fac270964736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x737 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x70D JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x802 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x696 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6B4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x720 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x729 DUP4 PUSH2 0x6F1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x755 DUP5 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 POP PUSH2 0x763 PUSH1 0x20 DUP6 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP3 PUSH2 0x6F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B1 DUP4 PUSH2 0x6F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x7BF PUSH1 0x20 DUP5 ADD PUSH2 0x6F1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7DC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F SWAP13 SIGNEXTEND MSTORE8 LOG1 STATICCALL SWAP7 MSTORE8 0xD0 0xD5 GASLIMIT 0xF7 PUSH23 0xC39DECC2CF19691DB2484BB79310A48FAC270964736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"1480:12159:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4768:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:21;;1162:22;1144:41;;1132:2;1117:18;4768:197:1;1004:187:21;3579:106:1;3666:12;;3579:106;;;1342:25:21;;;1330:2;1315:18;3579:106:1;1196:177:21;5527:286:1;;;;;;:::i;:::-;;:::i;3428:91::-;;;3510:2;1853:36:21;;1841:2;1826:18;3428:91:1;1711:184:21;6208:234:1;;;;;;:::i;:::-;;:::i;3743:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3843:18:1;3817:7;3843:18;;;:9;:18;;;;;;;3743:125;2702:102;;;:::i;6929:427::-;;;;;;:::i;:::-;;:::i;4064:189::-;;;;;;:::i;:::-;;:::i;4311:149::-;;;;;;:::i;:::-;;:::i;2491:98::-;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;929:10:5;4905:32:1;929:10:5;4921:7:1;4930:6;4905:8;:32::i;:::-;4954:4;4947:11;;;4768:197;;;;;:::o;5527:286::-;5654:4;929:10:5;5710:38:1;5726:4;929:10:5;5741:6:1;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;-1:-1:-1;5802:4:1;;5527:286;-1:-1:-1;;;;5527:286:1:o;6208:234::-;6296:4;929:10:5;6350:64:1;929:10:5;6366:7:1;6403:10;6375:25;929:10:5;6366:7:1;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;2702:102::-;2758:13;2790:7;2783:14;;;;;:::i;6929:427::-;7022:4;929:10:5;7022:4:1;7103:25;929:10:5;7120:7:1;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;-1:-1:-1;;;7138:85:1;;3170:2:21;7138:85:1;;;3152:21:21;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:21;;;3292:35;3344:19;;7138:85:1;;;;;;;;;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;4064:189::-;4143:4;929:10:5;4197:28:1;929:10:5;4214:2:1;4218:6;4197:9;:28::i;4311:149::-;-1:-1:-1;;;;;4426:18:1;;;4400:7;4426:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4311:149::o;10841:370::-;-1:-1:-1;;;;;10972:19:1;;10964:68;;;;-1:-1:-1;;;10964:68:1;;3576:2:21;10964:68:1;;;3558:21:21;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:21;;;3698:34;3749:19;;10964:68:1;3374:400:21;10964:68:1;-1:-1:-1;;;;;11050:21:1;;11042:68;;;;-1:-1:-1;;;11042:68:1;;3981:2:21;11042:68:1;;;3963:21:21;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:21;;;4103:32;4152:19;;11042:68:1;3779:398:21;11042:68:1;-1:-1:-1;;;;;11121:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11172:32;;1342:25:21;;;11172:32:1;;1315:18:21;11172:32:1;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;-1:-1:-1;;11688:16:1;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;-1:-1:-1;;;11741:68:1;;4384:2:21;11741:68:1;;;4366:21:21;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11741:68:1;4182:353:21;11741:68:1;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11612:321;11492:441;;;:::o;7810:818::-;-1:-1:-1;;;;;7936:18:1;;7928:68;;;;-1:-1:-1;;;7928:68:1;;4742:2:21;7928:68:1;;;4724:21:21;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:21;;;4864:35;4916:19;;7928:68:1;4540:401:21;7928:68:1;-1:-1:-1;;;;;8014:16:1;;8006:64;;;;-1:-1:-1;;;8006:64:1;;5148:2:21;8006:64:1;;;5130:21:21;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:21;;;5270:33;5320:19;;8006:64:1;4946:399:21;8006:64:1;-1:-1:-1;;;;;8152:15:1;;8130:19;8152:15;;;:9;:15;;;;;;8185:21;;;;8177:72;;;;-1:-1:-1;;;8177:72:1;;5552:2:21;8177:72:1;;;5534:21:21;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:21;;;5674:36;5727:19;;8177:72:1;5350:402:21;8177:72:1;-1:-1:-1;;;;;8283:15:1;;;;;;;:9;:15;;;;;;8301:20;;;8283:38;;8498:13;;;;;;;;;;:23;;;;;;8547:26;;;;;;8315:6;1342:25:21;;1330:2;1315:18;;1196:177;8547:26:1;;;;;;;;8584:37;12517:121;14:548:21;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:21;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:21:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:21:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"427400","executionCost":"461","totalCost":"427861"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24628","balanceOf(address)":"2559","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51147","transferFrom(address,address,uint256)":"infinite"},"internal":{"__ERC20_init(string memory,string memory)":"infinite","__ERC20_init_unchained(string memory,string memory)":"infinite","_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1208,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":187,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":193,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":195,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":197,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":199,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":779,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eae6293f20f60487b38e04fe85a3ddce718a1e806544baafb89b2fc191a6381164736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xE6 0x29 EXTCODEHASH KECCAK256 0xF6 DIV DUP8 0xB3 DUP15 DIV INVALID DUP6 LOG3 0xDD 0xCE PUSH18 0x8A1E806544BAAFB89B2FC191A6381164736F PUSH13 0x63430008110033000000000000 ","sourceMap":"194:8087:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8087:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eae6293f20f60487b38e04fe85a3ddce718a1e806544baafb89b2fc191a6381164736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xE6 0x29 EXTCODEHASH KECCAK256 0xF6 DIV DUP8 0xB3 DUP15 DIV INVALID DUP6 LOG3 0xDD 0xCE PUSH18 0x8A1E806544BAAFB89B2FC191A6381164736F PUSH13 0x63430008110033000000000000 ","sourceMap":"194:8087:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1208,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1217,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[],"devdoc":{"details":"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220787b51136e6bff28e7d51a0e8ec0bf9ab5d8a6a76e8f78f6b6878889834467cc64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x7B51136E6BFF28E7D51A0E8EC0BF9AB5D8A6A76E8F78F6B687 DUP9 DUP10 DUP4 DIFFICULTY PUSH8 0xCC64736F6C634300 ADDMOD GT STOP CALLER ","sourceMap":"755:2946:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;755:2946:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220787b51136e6bff28e7d51a0e8ec0bf9ab5d8a6a76e8f78f6b6878889834467cc64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x7B51136E6BFF28E7D51A0E8EC0BF9AB5D8A6A76E8F78F6B687 DUP9 DUP10 DUP4 DIFFICULTY PUSH8 0xCC64736F6C634300 ADDMOD GT STOP CALLER ","sourceMap":"755:2946:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"clone(address)":"infinite","cloneDeterministic(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1447":{"entryPoint":null,"id":1447,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:21"},"nodeType":"YulFunctionCall","src":"66:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:21"},"nodeType":"YulFunctionCall","src":"56:31:21"},"nodeType":"YulExpressionStatement","src":"56:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:21"},"nodeType":"YulFunctionCall","src":"96:15:21"},"nodeType":"YulExpressionStatement","src":"96:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:21"},"nodeType":"YulFunctionCall","src":"120:15:21"},"nodeType":"YulExpressionStatement","src":"120:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:21"},{"body":{"nodeType":"YulBlock","src":"210:776:21","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:21"},"nodeType":"YulFunctionCall","src":"261:12:21"},"nodeType":"YulExpressionStatement","src":"261:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:21"},"nodeType":"YulFunctionCall","src":"234:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:21"},"nodeType":"YulFunctionCall","src":"230:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:21"},"nodeType":"YulFunctionCall","src":"223:35:21"},"nodeType":"YulIf","src":"220:55:21"},{"nodeType":"YulVariableDeclaration","src":"284:23:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:21"},"nodeType":"YulFunctionCall","src":"294:13:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:21"},"nodeType":"YulFunctionCall","src":"330:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:21"},"nodeType":"YulFunctionCall","src":"326:18:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:21"},"nodeType":"YulFunctionCall","src":"369:18:21"},"nodeType":"YulExpressionStatement","src":"369:18:21"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:21"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:21"},"nodeType":"YulFunctionCall","src":"356:10:21"},"nodeType":"YulIf","src":"353:36:21"},{"nodeType":"YulVariableDeclaration","src":"398:17:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:21"},"nodeType":"YulFunctionCall","src":"408:7:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:21"},"nodeType":"YulFunctionCall","src":"438:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:21"},"nodeType":"YulFunctionCall","src":"498:13:21"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:21"},"nodeType":"YulFunctionCall","src":"494:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:21","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:21"},"nodeType":"YulFunctionCall","src":"490:31:21"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:21"},"nodeType":"YulFunctionCall","src":"486:40:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:21"},"nodeType":"YulFunctionCall","src":"474:53:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:21"},"nodeType":"YulFunctionCall","src":"588:18:21"},"nodeType":"YulExpressionStatement","src":"588:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:21"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:21"},"nodeType":"YulFunctionCall","src":"542:18:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:21"},"nodeType":"YulFunctionCall","src":"562:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:21"},"nodeType":"YulFunctionCall","src":"539:46:21"},"nodeType":"YulIf","src":"536:72:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:21"},"nodeType":"YulFunctionCall","src":"617:22:21"},"nodeType":"YulExpressionStatement","src":"617:22:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:21"},"nodeType":"YulFunctionCall","src":"648:18:21"},"nodeType":"YulExpressionStatement","src":"648:18:21"},{"nodeType":"YulVariableDeclaration","src":"675:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:21","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:21"},"nodeType":"YulFunctionCall","src":"737:12:21"},"nodeType":"YulExpressionStatement","src":"737:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:21"},"nodeType":"YulFunctionCall","src":"708:15:21"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:21"},"nodeType":"YulFunctionCall","src":"704:24:21"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:21"},"nodeType":"YulFunctionCall","src":"701:33:21"},"nodeType":"YulIf","src":"698:53:21"},{"nodeType":"YulVariableDeclaration","src":"760:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:21"},"nodeType":"YulFunctionCall","src":"850:14:21"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:21"},"nodeType":"YulFunctionCall","src":"846:23:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:21"},"nodeType":"YulFunctionCall","src":"881:14:21"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:21"},"nodeType":"YulFunctionCall","src":"877:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:21"},"nodeType":"YulFunctionCall","src":"871:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:21"},"nodeType":"YulFunctionCall","src":"839:63:21"},"nodeType":"YulExpressionStatement","src":"839:63:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:21"},"nodeType":"YulFunctionCall","src":"787:9:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:21","statements":[{"nodeType":"YulAssignment","src":"799:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:21"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:21"},"nodeType":"YulFunctionCall","src":"804:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:21","statements":[]},"src":"779:133:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:21"},"nodeType":"YulFunctionCall","src":"932:15:21"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:21"},"nodeType":"YulFunctionCall","src":"928:24:21"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:21"},"nodeType":"YulFunctionCall","src":"921:35:21"},"nodeType":"YulExpressionStatement","src":"921:35:21"},{"nodeType":"YulAssignment","src":"965:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:21"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:21","type":""}],"src":"146:840:21"},{"body":{"nodeType":"YulBlock","src":"1109:444:21","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:21"},"nodeType":"YulFunctionCall","src":"1157:12:21"},"nodeType":"YulExpressionStatement","src":"1157:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:21"},"nodeType":"YulFunctionCall","src":"1126:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:21"},"nodeType":"YulFunctionCall","src":"1122:32:21"},"nodeType":"YulIf","src":"1119:52:21"},{"nodeType":"YulVariableDeclaration","src":"1180:30:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:21"},"nodeType":"YulFunctionCall","src":"1194:16:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:21"},"nodeType":"YulFunctionCall","src":"1233:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:21"},"nodeType":"YulFunctionCall","src":"1229:18:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:21"},"nodeType":"YulFunctionCall","src":"1276:12:21"},"nodeType":"YulExpressionStatement","src":"1276:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:21"},"nodeType":"YulFunctionCall","src":"1259:14:21"},"nodeType":"YulIf","src":"1256:34:21"},{"nodeType":"YulAssignment","src":"1299:71:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:21"},"nodeType":"YulFunctionCall","src":"1338:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:21"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:21"},"nodeType":"YulFunctionCall","src":"1309:61:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:21"},"nodeType":"YulFunctionCall","src":"1401:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:21"},"nodeType":"YulFunctionCall","src":"1395:25:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:21"},"nodeType":"YulFunctionCall","src":"1451:12:21"},"nodeType":"YulExpressionStatement","src":"1451:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:21"},"nodeType":"YulFunctionCall","src":"1432:16:21"},"nodeType":"YulIf","src":"1429:36:21"},{"nodeType":"YulAssignment","src":"1474:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:21"},"nodeType":"YulFunctionCall","src":"1513:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:21"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:21"},"nodeType":"YulFunctionCall","src":"1484:63:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:21","type":""}],"src":"991:562:21"},{"body":{"nodeType":"YulBlock","src":"1613:325:21","statements":[{"nodeType":"YulAssignment","src":"1623:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:21"},"nodeType":"YulFunctionCall","src":"1633:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:21"},"nodeType":"YulFunctionCall","src":"1680:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:21","statements":[{"nodeType":"YulAssignment","src":"1733:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:21"},"nodeType":"YulFunctionCall","src":"1743:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:21"},"nodeType":"YulFunctionCall","src":"1704:26:21"},"nodeType":"YulIf","src":"1701:61:21"},{"body":{"nodeType":"YulBlock","src":"1821:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:21"},"nodeType":"YulFunctionCall","src":"1845:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:21"},"nodeType":"YulFunctionCall","src":"1835:31:21"},"nodeType":"YulExpressionStatement","src":"1835:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:21"},"nodeType":"YulFunctionCall","src":"1879:15:21"},"nodeType":"YulExpressionStatement","src":"1879:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:21"},"nodeType":"YulFunctionCall","src":"1907:15:21"},"nodeType":"YulExpressionStatement","src":"1907:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:21"},"nodeType":"YulFunctionCall","src":"1797:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:21"},"nodeType":"YulFunctionCall","src":"1774:38:21"},"nodeType":"YulIf","src":"1771:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:21","type":""}],"src":"1558:380:21"},{"body":{"nodeType":"YulBlock","src":"1999:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:21"},"nodeType":"YulFunctionCall","src":"2009:14:21"},"nodeType":"YulExpressionStatement","src":"2009:14:21"},{"nodeType":"YulAssignment","src":"2032:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:21"},"nodeType":"YulFunctionCall","src":"2040:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:21"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:21","type":""}],"src":"1943:121:21"},{"body":{"nodeType":"YulBlock","src":"2150:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:21"},"nodeType":"YulFunctionCall","src":"2221:17:21"},"nodeType":"YulExpressionStatement","src":"2221:17:21"},{"nodeType":"YulVariableDeclaration","src":"2251:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:21"},"nodeType":"YulFunctionCall","src":"2263:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:21"},"nodeType":"YulFunctionCall","src":"2331:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:21"},"nodeType":"YulFunctionCall","src":"2324:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:21"},"nodeType":"YulFunctionCall","src":"2314:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:21","statements":[{"nodeType":"YulAssignment","src":"2391:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:21"},"nodeType":"YulFunctionCall","src":"2368:20:21"},"nodeType":"YulIf","src":"2365:47:21"},{"nodeType":"YulVariableDeclaration","src":"2425:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:21"},"nodeType":"YulFunctionCall","src":"2452:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:21"},"nodeType":"YulFunctionCall","src":"2445:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:21"},"nodeType":"YulFunctionCall","src":"2435:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:21"},"nodeType":"YulFunctionCall","src":"2579:17:21"},"nodeType":"YulExpressionStatement","src":"2579:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:21"},"nodeType":"YulFunctionCall","src":"2524:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:21","statements":[{"nodeType":"YulAssignment","src":"2540:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:21"},"nodeType":"YulFunctionCall","src":"2549:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:21","statements":[]},"src":"2516:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:21"},"nodeType":"YulFunctionCall","src":"2163:11:21"},"nodeType":"YulIf","src":"2160:448:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:21","type":""}],"src":"2069:545:21"},{"body":{"nodeType":"YulBlock","src":"2704:81:21","statements":[{"nodeType":"YulAssignment","src":"2714:65:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:21"},"nodeType":"YulFunctionCall","src":"2743:11:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:21"},"nodeType":"YulFunctionCall","src":"2756:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:21"},"nodeType":"YulFunctionCall","src":"2739:24:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:21"},"nodeType":"YulFunctionCall","src":"2735:29:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:21"},"nodeType":"YulFunctionCall","src":"2725:40:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:21"},"nodeType":"YulFunctionCall","src":"2767:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:21"},"nodeType":"YulFunctionCall","src":"2722:57:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:21","type":""}],"src":"2619:166:21"},{"body":{"nodeType":"YulBlock","src":"2886:1256:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:21"},"nodeType":"YulFunctionCall","src":"2910:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:21"},"nodeType":"YulFunctionCall","src":"2965:18:21"},"nodeType":"YulExpressionStatement","src":"2965:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:21"},"nodeType":"YulFunctionCall","src":"2947:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:21"},"nodeType":"YulFunctionCall","src":"2943:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:21"},"nodeType":"YulFunctionCall","src":"2932:30:21"},"nodeType":"YulIf","src":"2929:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:21"},"nodeType":"YulFunctionCall","src":"3070:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:21"},"nodeType":"YulFunctionCall","src":"3044:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:21"},"nodeType":"YulFunctionCall","src":"2994:97:21"},"nodeType":"YulExpressionStatement","src":"2994:97:21"},{"nodeType":"YulVariableDeclaration","src":"3100:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:21","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:21"},"nodeType":"YulFunctionCall","src":"3270:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:21"},"nodeType":"YulFunctionCall","src":"3258:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:21"},"nodeType":"YulFunctionCall","src":"3305:35:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:21"},"nodeType":"YulFunctionCall","src":"3479:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:21"},"nodeType":"YulFunctionCall","src":"3473:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:21"},"nodeType":"YulFunctionCall","src":"3458:42:21"},"nodeType":"YulExpressionStatement","src":"3458:42:21"},{"nodeType":"YulAssignment","src":"3517:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:21"},"nodeType":"YulFunctionCall","src":"3527:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:21"}]},{"nodeType":"YulAssignment","src":"3558:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:21"},"nodeType":"YulFunctionCall","src":"3571:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:21"},"nodeType":"YulFunctionCall","src":"3384:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:21","statements":[{"nodeType":"YulAssignment","src":"3401:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:21"},"nodeType":"YulFunctionCall","src":"3406:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:21","statements":[]},"src":"3376:236:21"},{"body":{"nodeType":"YulBlock","src":"3660:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:21"},"nodeType":"YulFunctionCall","src":"3701:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:21"},"nodeType":"YulFunctionCall","src":"3695:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:21"},"nodeType":"YulFunctionCall","src":"3780:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:21"},"nodeType":"YulFunctionCall","src":"3776:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:21"},"nodeType":"YulFunctionCall","src":"3802:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:21"},"nodeType":"YulFunctionCall","src":"3772:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:21"},"nodeType":"YulFunctionCall","src":"3768:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:21"},"nodeType":"YulFunctionCall","src":"3753:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:21"},"nodeType":"YulFunctionCall","src":"3738:74:21"},"nodeType":"YulExpressionStatement","src":"3738:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:21"},"nodeType":"YulFunctionCall","src":"3628:19:21"},"nodeType":"YulIf","src":"3625:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:21"},"nodeType":"YulFunctionCall","src":"3856:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:21"},"nodeType":"YulFunctionCall","src":"3852:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:21"},"nodeType":"YulFunctionCall","src":"3839:36:21"},"nodeType":"YulExpressionStatement","src":"3839:36:21"}]},"nodeType":"YulCase","src":"3222:663:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:21","statements":[{"nodeType":"YulAssignment","src":"3983:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:21"},"nodeType":"YulFunctionCall","src":"3998:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:21"},"nodeType":"YulFunctionCall","src":"3992:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:21"},"nodeType":"YulIf","src":"3943:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:21"},"nodeType":"YulFunctionCall","src":"4058:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:21"},"nodeType":"YulFunctionCall","src":"4045:81:21"},"nodeType":"YulExpressionStatement","src":"4045:81:21"}]},"nodeType":"YulCase","src":"3894:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:21"},"nodeType":"YulFunctionCall","src":"3199:14:21"},"nodeType":"YulSwitch","src":"3192:944:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:21","type":""}],"src":"2790:1352:21"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b7038038062000b7083398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61087c80620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c6565b60405180910390f35b6100df6100da366004610730565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075a565b61024c565b604051601281526020016100c3565b6100df610131366004610730565b610270565b6100f3610144366004610796565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610730565b6102a1565b6100df610188366004610730565b610321565b6100f361019b3660046107b8565b61032f565b6060600380546101af906107eb565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107eb565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d9190610825565b61035a565b6060600480546101af906107eb565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066d908490610825565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b991815260200190565b60405180910390a36104f2565b600060208083528351808285015260005b818110156106f3578581018301518582016040015282016106d7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072b57600080fd5b919050565b6000806040838503121561074357600080fd5b61074c83610714565b946020939093013593505050565b60008060006060848603121561076f57600080fd5b61077884610714565b925061078660208501610714565b9150604084013590509250925092565b6000602082840312156107a857600080fd5b6107b182610714565b9392505050565b600080604083850312156107cb57600080fd5b6107d483610714565b91506107e260208401610714565b90509250929050565b600181811c908216806107ff57607f821691505b60208210810361081f57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea26469706673582212203bca902e95f733d9dee599cae14dfebb207ec6c703c06f13a6a107a1b53676d264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB70 CODESIZE SUB DUP1 PUSH3 0xB70 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x87C DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66D SWAP1 DUP5 SWAP1 PUSH2 0x825 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74C DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x778 DUP5 PUSH2 0x714 JUMP JUMPDEST SWAP3 POP PUSH2 0x786 PUSH1 0x20 DUP6 ADD PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D4 DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E2 PUSH1 0x20 DUP5 ADD PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x81F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xCA SWAP1 0x2E SWAP6 0xF7 CALLER 0xD9 0xDE 0xE5 SWAP10 0xCA 0xE1 0x4D INVALID 0xBB KECCAK256 PUSH31 0xC6C703C06F13A6A107A1B53676D264736F6C63430008110033000000000000 ","sourceMap":"1403:11214:8:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:5;:13;2052:5;2044;:13;:::i;:::-;-1:-1:-1;2067:7:8;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;1403:11214;;14:127:21;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:21;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:21;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:21:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:21;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:21;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:21;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:21;;;3992:26;3943:89;-1:-1:-1;;2747:1:21;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:21;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:21;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:21;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:21:o;:::-;1403:11214:8;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1987":{"entryPoint":null,"id":1987,"parameterSlots":3,"returnSlots":0},"@_approve_1922":{"entryPoint":858,"id":1922,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1976":{"entryPoint":null,"id":1976,"parameterSlots":3,"returnSlots":0},"@_msgSender_2398":{"entryPoint":null,"id":2398,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1965":{"entryPoint":1150,"id":1965,"parameterSlots":3,"returnSlots":0},"@_transfer_1749":{"entryPoint":1272,"id":1749,"parameterSlots":3,"returnSlots":0},"@allowance_1544":{"entryPoint":815,"id":1544,"parameterSlots":2,"returnSlots":1},"@approve_1569":{"entryPoint":562,"id":1569,"parameterSlots":2,"returnSlots":1},"@balanceOf_1501":{"entryPoint":null,"id":1501,"parameterSlots":1,"returnSlots":1},"@decimals_1477":{"entryPoint":null,"id":1477,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1672":{"entryPoint":673,"id":1672,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1631":{"entryPoint":624,"id":1631,"parameterSlots":2,"returnSlots":1},"@name_1457":{"entryPoint":416,"id":1457,"parameterSlots":0,"returnSlots":1},"@symbol_1467":{"entryPoint":658,"id":1467,"parameterSlots":0,"returnSlots":1},"@totalSupply_1487":{"entryPoint":null,"id":1487,"parameterSlots":0,"returnSlots":1},"@transferFrom_1602":{"entryPoint":588,"id":1602,"parameterSlots":3,"returnSlots":1},"@transfer_1526":{"entryPoint":801,"id":1526,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1812,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1976,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1882,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1840,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2085,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2027,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:21","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:21"},"nodeType":"YulFunctionCall","src":"166:21:21"},"nodeType":"YulExpressionStatement","src":"166:21:21"},{"nodeType":"YulVariableDeclaration","src":"196:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:21"},"nodeType":"YulFunctionCall","src":"210:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:21"},"nodeType":"YulFunctionCall","src":"239:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:21"},"nodeType":"YulFunctionCall","src":"232:34:21"},"nodeType":"YulExpressionStatement","src":"232:34:21"},{"nodeType":"YulVariableDeclaration","src":"275:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:21"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:21"},"nodeType":"YulFunctionCall","src":"369:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:21"},"nodeType":"YulFunctionCall","src":"365:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:21"},"nodeType":"YulFunctionCall","src":"403:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:21"},"nodeType":"YulFunctionCall","src":"399:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:21"},"nodeType":"YulFunctionCall","src":"393:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:21"},"nodeType":"YulFunctionCall","src":"358:66:21"},"nodeType":"YulExpressionStatement","src":"358:66:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:21"},"nodeType":"YulFunctionCall","src":"302:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:21","statements":[{"nodeType":"YulAssignment","src":"318:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:21"},"nodeType":"YulFunctionCall","src":"323:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:21","statements":[]},"src":"294:140:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:21"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:21"},"nodeType":"YulFunctionCall","src":"454:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:21"},"nodeType":"YulFunctionCall","src":"450:31:21"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:21"},"nodeType":"YulFunctionCall","src":"443:42:21"},"nodeType":"YulExpressionStatement","src":"443:42:21"},{"nodeType":"YulAssignment","src":"494:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:21"},"nodeType":"YulFunctionCall","src":"525:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:21"},"nodeType":"YulFunctionCall","src":"542:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:21"},"nodeType":"YulFunctionCall","src":"521:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:21"},"nodeType":"YulFunctionCall","src":"506:45:21"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:21"},"nodeType":"YulFunctionCall","src":"502:54:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:21","type":""}],"src":"14:548:21"},{"body":{"nodeType":"YulBlock","src":"616:124:21","statements":[{"nodeType":"YulAssignment","src":"626:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:21"},"nodeType":"YulFunctionCall","src":"635:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:21"}]},{"body":{"nodeType":"YulBlock","src":"718:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:21"},"nodeType":"YulFunctionCall","src":"720:12:21"},"nodeType":"YulExpressionStatement","src":"720:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:21"},"nodeType":"YulFunctionCall","src":"699:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:21"},"nodeType":"YulFunctionCall","src":"695:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:21"},"nodeType":"YulFunctionCall","src":"684:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:21"},"nodeType":"YulFunctionCall","src":"674:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:21"},"nodeType":"YulFunctionCall","src":"667:50:21"},"nodeType":"YulIf","src":"664:70:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:21","type":""}],"src":"567:173:21"},{"body":{"nodeType":"YulBlock","src":"832:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:21"},"nodeType":"YulFunctionCall","src":"880:12:21"},"nodeType":"YulExpressionStatement","src":"880:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:21"},"nodeType":"YulFunctionCall","src":"849:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:21"},"nodeType":"YulFunctionCall","src":"845:32:21"},"nodeType":"YulIf","src":"842:52:21"},{"nodeType":"YulAssignment","src":"903:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:21"},"nodeType":"YulFunctionCall","src":"913:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:21"}]},{"nodeType":"YulAssignment","src":"951:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:21"},"nodeType":"YulFunctionCall","src":"974:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:21"},"nodeType":"YulFunctionCall","src":"961:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:21","type":""}],"src":"745:254:21"},{"body":{"nodeType":"YulBlock","src":"1099:92:21","statements":[{"nodeType":"YulAssignment","src":"1109:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:21"},"nodeType":"YulFunctionCall","src":"1117:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:21"},"nodeType":"YulFunctionCall","src":"1169:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:21"},"nodeType":"YulFunctionCall","src":"1162:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:21"},"nodeType":"YulFunctionCall","src":"1144:41:21"},"nodeType":"YulExpressionStatement","src":"1144:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:21","type":""}],"src":"1004:187:21"},{"body":{"nodeType":"YulBlock","src":"1297:76:21","statements":[{"nodeType":"YulAssignment","src":"1307:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:21"},"nodeType":"YulFunctionCall","src":"1315:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:21"},"nodeType":"YulFunctionCall","src":"1342:25:21"},"nodeType":"YulExpressionStatement","src":"1342:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:21","type":""}],"src":"1196:177:21"},{"body":{"nodeType":"YulBlock","src":"1482:224:21","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:21"},"nodeType":"YulFunctionCall","src":"1530:12:21"},"nodeType":"YulExpressionStatement","src":"1530:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:21"},"nodeType":"YulFunctionCall","src":"1499:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:21"},"nodeType":"YulFunctionCall","src":"1495:32:21"},"nodeType":"YulIf","src":"1492:52:21"},{"nodeType":"YulAssignment","src":"1553:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:21"},"nodeType":"YulFunctionCall","src":"1563:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:21"}]},{"nodeType":"YulAssignment","src":"1601:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:21"},"nodeType":"YulFunctionCall","src":"1630:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:21"},"nodeType":"YulFunctionCall","src":"1611:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:21"}]},{"nodeType":"YulAssignment","src":"1658:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:21"},"nodeType":"YulFunctionCall","src":"1681:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:21"},"nodeType":"YulFunctionCall","src":"1668:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:21","type":""}],"src":"1378:328:21"},{"body":{"nodeType":"YulBlock","src":"1808:87:21","statements":[{"nodeType":"YulAssignment","src":"1818:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:21"},"nodeType":"YulFunctionCall","src":"1826:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:21"},"nodeType":"YulFunctionCall","src":"1871:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:21"},"nodeType":"YulFunctionCall","src":"1853:36:21"},"nodeType":"YulExpressionStatement","src":"1853:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:21","type":""}],"src":"1711:184:21"},{"body":{"nodeType":"YulBlock","src":"1970:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:21"},"nodeType":"YulFunctionCall","src":"2018:12:21"},"nodeType":"YulExpressionStatement","src":"2018:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:21"},"nodeType":"YulFunctionCall","src":"1987:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:21"},"nodeType":"YulFunctionCall","src":"1983:32:21"},"nodeType":"YulIf","src":"1980:52:21"},{"nodeType":"YulAssignment","src":"2041:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:21"},"nodeType":"YulFunctionCall","src":"2051:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:21","type":""}],"src":"1900:186:21"},{"body":{"nodeType":"YulBlock","src":"2178:173:21","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:21"},"nodeType":"YulFunctionCall","src":"2226:12:21"},"nodeType":"YulExpressionStatement","src":"2226:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:21"},"nodeType":"YulFunctionCall","src":"2195:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:21"},"nodeType":"YulFunctionCall","src":"2191:32:21"},"nodeType":"YulIf","src":"2188:52:21"},{"nodeType":"YulAssignment","src":"2249:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:21"},"nodeType":"YulFunctionCall","src":"2259:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:21"}]},{"nodeType":"YulAssignment","src":"2297:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:21"},"nodeType":"YulFunctionCall","src":"2326:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:21"},"nodeType":"YulFunctionCall","src":"2307:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:21","type":""}],"src":"2091:260:21"},{"body":{"nodeType":"YulBlock","src":"2411:325:21","statements":[{"nodeType":"YulAssignment","src":"2421:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:21"},"nodeType":"YulFunctionCall","src":"2431:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:21"},"nodeType":"YulFunctionCall","src":"2478:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:21","statements":[{"nodeType":"YulAssignment","src":"2531:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:21"},"nodeType":"YulFunctionCall","src":"2541:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:21"},"nodeType":"YulFunctionCall","src":"2502:26:21"},"nodeType":"YulIf","src":"2499:61:21"},{"body":{"nodeType":"YulBlock","src":"2619:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:21"},"nodeType":"YulFunctionCall","src":"2643:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:21"},"nodeType":"YulFunctionCall","src":"2633:31:21"},"nodeType":"YulExpressionStatement","src":"2633:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:21"},"nodeType":"YulFunctionCall","src":"2677:15:21"},"nodeType":"YulExpressionStatement","src":"2677:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:21"},"nodeType":"YulFunctionCall","src":"2705:15:21"},"nodeType":"YulExpressionStatement","src":"2705:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:21"},"nodeType":"YulFunctionCall","src":"2595:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:21"},"nodeType":"YulFunctionCall","src":"2572:38:21"},"nodeType":"YulIf","src":"2569:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:21","type":""}],"src":"2356:380:21"},{"body":{"nodeType":"YulBlock","src":"2789:174:21","statements":[{"nodeType":"YulAssignment","src":"2799:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:21"},"nodeType":"YulFunctionCall","src":"2806:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:21"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:21"},"nodeType":"YulFunctionCall","src":"2870:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:21"},"nodeType":"YulFunctionCall","src":"2860:31:21"},"nodeType":"YulExpressionStatement","src":"2860:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:21"},"nodeType":"YulFunctionCall","src":"2904:15:21"},"nodeType":"YulExpressionStatement","src":"2904:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:21"},"nodeType":"YulFunctionCall","src":"2932:15:21"},"nodeType":"YulExpressionStatement","src":"2932:15:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:21"},"nodeType":"YulFunctionCall","src":"2827:10:21"},"nodeType":"YulIf","src":"2824:133:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:21","type":""}],"src":"2741:222:21"},{"body":{"nodeType":"YulBlock","src":"3142:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:21"},"nodeType":"YulFunctionCall","src":"3152:21:21"},"nodeType":"YulExpressionStatement","src":"3152:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:21"},"nodeType":"YulFunctionCall","src":"3189:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:21"},"nodeType":"YulFunctionCall","src":"3182:30:21"},"nodeType":"YulExpressionStatement","src":"3182:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:21"},"nodeType":"YulFunctionCall","src":"3228:18:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:21"},"nodeType":"YulFunctionCall","src":"3221:62:21"},"nodeType":"YulExpressionStatement","src":"3221:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:21"},"nodeType":"YulFunctionCall","src":"3299:18:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:21"},"nodeType":"YulFunctionCall","src":"3292:35:21"},"nodeType":"YulExpressionStatement","src":"3292:35:21"},{"nodeType":"YulAssignment","src":"3336:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:21"},"nodeType":"YulFunctionCall","src":"3344:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:21","type":""}],"src":"2968:401:21"},{"body":{"nodeType":"YulBlock","src":"3548:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:21"},"nodeType":"YulFunctionCall","src":"3558:21:21"},"nodeType":"YulExpressionStatement","src":"3558:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:21"},"nodeType":"YulFunctionCall","src":"3595:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:21"},"nodeType":"YulFunctionCall","src":"3588:30:21"},"nodeType":"YulExpressionStatement","src":"3588:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:21"},"nodeType":"YulFunctionCall","src":"3634:18:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:21"},"nodeType":"YulFunctionCall","src":"3627:62:21"},"nodeType":"YulExpressionStatement","src":"3627:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:21"},"nodeType":"YulFunctionCall","src":"3705:18:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:21"},"nodeType":"YulFunctionCall","src":"3698:34:21"},"nodeType":"YulExpressionStatement","src":"3698:34:21"},{"nodeType":"YulAssignment","src":"3741:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:21"},"nodeType":"YulFunctionCall","src":"3749:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:21","type":""}],"src":"3374:400:21"},{"body":{"nodeType":"YulBlock","src":"3953:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:21"},"nodeType":"YulFunctionCall","src":"3963:21:21"},"nodeType":"YulExpressionStatement","src":"3963:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:21"},"nodeType":"YulFunctionCall","src":"4000:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:21"},"nodeType":"YulFunctionCall","src":"3993:30:21"},"nodeType":"YulExpressionStatement","src":"3993:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:21"},"nodeType":"YulFunctionCall","src":"4039:18:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:21"},"nodeType":"YulFunctionCall","src":"4032:62:21"},"nodeType":"YulExpressionStatement","src":"4032:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:21"},"nodeType":"YulFunctionCall","src":"4110:18:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:21"},"nodeType":"YulFunctionCall","src":"4103:32:21"},"nodeType":"YulExpressionStatement","src":"4103:32:21"},{"nodeType":"YulAssignment","src":"4144:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:21"},"nodeType":"YulFunctionCall","src":"4152:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:21","type":""}],"src":"3779:398:21"},{"body":{"nodeType":"YulBlock","src":"4356:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:21"},"nodeType":"YulFunctionCall","src":"4366:21:21"},"nodeType":"YulExpressionStatement","src":"4366:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:21"},"nodeType":"YulFunctionCall","src":"4403:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:21"},"nodeType":"YulFunctionCall","src":"4396:30:21"},"nodeType":"YulExpressionStatement","src":"4396:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:21"},"nodeType":"YulFunctionCall","src":"4442:18:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:21"},"nodeType":"YulFunctionCall","src":"4435:59:21"},"nodeType":"YulExpressionStatement","src":"4435:59:21"},{"nodeType":"YulAssignment","src":"4503:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:21"},"nodeType":"YulFunctionCall","src":"4511:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:21","type":""}],"src":"4182:353:21"},{"body":{"nodeType":"YulBlock","src":"4714:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:21"},"nodeType":"YulFunctionCall","src":"4724:21:21"},"nodeType":"YulExpressionStatement","src":"4724:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:21"},"nodeType":"YulFunctionCall","src":"4761:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:21"},"nodeType":"YulFunctionCall","src":"4754:30:21"},"nodeType":"YulExpressionStatement","src":"4754:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:21"},"nodeType":"YulFunctionCall","src":"4800:18:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:21"},"nodeType":"YulFunctionCall","src":"4793:62:21"},"nodeType":"YulExpressionStatement","src":"4793:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:21"},"nodeType":"YulFunctionCall","src":"4871:18:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:21"},"nodeType":"YulFunctionCall","src":"4864:35:21"},"nodeType":"YulExpressionStatement","src":"4864:35:21"},{"nodeType":"YulAssignment","src":"4908:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:21"},"nodeType":"YulFunctionCall","src":"4916:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:21","type":""}],"src":"4540:401:21"},{"body":{"nodeType":"YulBlock","src":"5120:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:21"},"nodeType":"YulFunctionCall","src":"5130:21:21"},"nodeType":"YulExpressionStatement","src":"5130:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:21"},"nodeType":"YulFunctionCall","src":"5167:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:21"},"nodeType":"YulFunctionCall","src":"5160:30:21"},"nodeType":"YulExpressionStatement","src":"5160:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:21"},"nodeType":"YulFunctionCall","src":"5206:18:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:21"},"nodeType":"YulFunctionCall","src":"5199:62:21"},"nodeType":"YulExpressionStatement","src":"5199:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:21"},"nodeType":"YulFunctionCall","src":"5277:18:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:21"},"nodeType":"YulFunctionCall","src":"5270:33:21"},"nodeType":"YulExpressionStatement","src":"5270:33:21"},{"nodeType":"YulAssignment","src":"5312:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:21"},"nodeType":"YulFunctionCall","src":"5320:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:21","type":""}],"src":"4946:399:21"},{"body":{"nodeType":"YulBlock","src":"5524:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:21"},"nodeType":"YulFunctionCall","src":"5534:21:21"},"nodeType":"YulExpressionStatement","src":"5534:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:21"},"nodeType":"YulFunctionCall","src":"5571:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:21"},"nodeType":"YulFunctionCall","src":"5564:30:21"},"nodeType":"YulExpressionStatement","src":"5564:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:21"},"nodeType":"YulFunctionCall","src":"5610:18:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:21"},"nodeType":"YulFunctionCall","src":"5603:62:21"},"nodeType":"YulExpressionStatement","src":"5603:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:21"},"nodeType":"YulFunctionCall","src":"5681:18:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:21"},"nodeType":"YulFunctionCall","src":"5674:36:21"},"nodeType":"YulExpressionStatement","src":"5674:36:21"},{"nodeType":"YulAssignment","src":"5719:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:21"},"nodeType":"YulFunctionCall","src":"5727:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:21","type":""}],"src":"5350:402:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c6565b60405180910390f35b6100df6100da366004610730565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075a565b61024c565b604051601281526020016100c3565b6100df610131366004610730565b610270565b6100f3610144366004610796565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610730565b6102a1565b6100df610188366004610730565b610321565b6100f361019b3660046107b8565b61032f565b6060600380546101af906107eb565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107eb565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d9190610825565b61035a565b6060600480546101af906107eb565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066d908490610825565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b991815260200190565b60405180910390a36104f2565b600060208083528351808285015260005b818110156106f3578581018301518582016040015282016106d7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072b57600080fd5b919050565b6000806040838503121561074357600080fd5b61074c83610714565b946020939093013593505050565b60008060006060848603121561076f57600080fd5b61077884610714565b925061078660208501610714565b9150604084013590509250925092565b6000602082840312156107a857600080fd5b6107b182610714565b9392505050565b600080604083850312156107cb57600080fd5b6107d483610714565b91506107e260208401610714565b90509250929050565b600181811c908216806107ff57607f821691505b60208210810361081f57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea26469706673582212203bca902e95f733d9dee599cae14dfebb207ec6c703c06f13a6a107a1b53676d264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66D SWAP1 DUP5 SWAP1 PUSH2 0x825 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74C DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x778 DUP5 PUSH2 0x714 JUMP JUMPDEST SWAP3 POP PUSH2 0x786 PUSH1 0x20 DUP6 ADD PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D4 DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E2 PUSH1 0x20 DUP5 ADD PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x81F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xCA SWAP1 0x2E SWAP6 0xF7 CALLER 0xD9 0xDE 0xE5 SWAP10 0xCA 0xE1 0x4D INVALID 0xBB KECCAK256 PUSH31 0xC6C703C06F13A6A107A1B53676D264736F6C63430008110033000000000000 ","sourceMap":"1403:11214:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:21;;1162:22;1144:41;;1132:2;1117:18;4433:197:8;1004:187:21;3244:106:8;3331:12;;3244:106;;;1342:25:21;;;1330:2;1315:18;3244:106:8;1196:177:21;5192:286:8;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1853:36:21;;1841:2;1826:18;3093:91:8;1711:184:21;5873:234:8;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:8;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:12;4570:32:8;719:10:12;4586:7:8;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:12;5375:38:8;5391:4;719:10:12;5406:6:8;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:8;;5192:286;-1:-1:-1;;;;5192:286:8:o;5873:234::-;5961:4;719:10:12;6015:64:8;719:10:12;6031:7:8;6068:10;6040:25;719:10:12;6031:7:8;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:12;6687:4:8;6768:25;719:10:12;6785:7:8;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:8;;3170:2:21;6803:85:8;;;3152:21:21;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:21;;;3292:35;3344:19;;6803:85:8;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:12;3862:28:8;719:10:12;3879:2:8;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:8;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10110:370::-;-1:-1:-1;;;;;10241:19:8;;10233:68;;;;-1:-1:-1;;;10233:68:8;;3576:2:21;10233:68:8;;;3558:21:21;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:21;;;3698:34;3749:19;;10233:68:8;3374:400:21;10233:68:8;-1:-1:-1;;;;;10319:21:8;;10311:68;;;;-1:-1:-1;;;10311:68:8;;3981:2:21;10311:68:8;;;3963:21:21;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:21;;;4103:32;4152:19;;10311:68:8;3779:398:21;10311:68:8;-1:-1:-1;;;;;10390:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1342:25:21;;;10441:32:8;;1315:18:21;10441:32:8;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:8;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:8;;4384:2:21;11010:68:8;;;4366:21:21;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11010:68:8;4182:353:21;11010:68:8;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:8;;7593:68;;;;-1:-1:-1;;;7593:68:8;;4742:2:21;7593:68:8;;;4724:21:21;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:21;;;4864:35;4916:19;;7593:68:8;4540:401:21;7593:68:8;-1:-1:-1;;;;;7679:16:8;;7671:64;;;;-1:-1:-1;;;7671:64:8;;5148:2:21;7671:64:8;;;5130:21:21;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:21;;;5270:33;5320:19;;7671:64:8;4946:399:21;7671:64:8;-1:-1:-1;;;;;7817:15:8;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:8;;5552:2:21;7842:72:8;;;5534:21:21;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:21;;;5674:36;5727:19;;7842:72:8;5350:402:21;7842:72:8;-1:-1:-1;;;;;7948:15:8;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:8;8054:4;-1:-1:-1;;;;;8045:26:8;;8064:6;8045:26;;;;1342:25:21;;1330:2;1315:18;;1196:177;8045:26:8;;;;;;;;8082:37;11786:121;14:548:21;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:21;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:21:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:21:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"434400","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24628","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1418,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1424,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1426,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1428,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1430,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016e5f674c4ce3eabad468907044cdfd71dcf7a45f5bf5dc290f4435dd9c5534e64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xE5 0xF6 PUSH21 0xC4CE3EABAD468907044CDFD71DCF7A45F5BF5DC290 DELEGATECALL NUMBER 0x5D 0xD9 0xC5 MSTORE8 0x4E PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8111:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016e5f674c4ce3eabad468907044cdfd71dcf7a45f5bf5dc290f4435dd9c5534e64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xE5 0xF6 PUSH21 0xC4CE3EABAD468907044CDFD71DCF7A45F5BF5DC290 DELEGATECALL NUMBER 0x5D 0xD9 0xC5 MSTORE8 0x4E PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8111:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/FansSociety.sol":{"FansSociety":{"abi":[{"inputs":[{"internalType":"address","name":"_wethTokenAddress","type":"address"},{"internalType":"address","name":"_tokenFactoryAddress","type":"address"},{"internalType":"address","name":"_poolFactoryAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Claimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Committed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"ProjectCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fund","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"}],"name":"ProjectCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":true,"internalType":"uint32","name":"startsAt","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"endsAt","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"target","type":"uint32"},{"indexed":false,"internalType":"uint16","name":"minInvest","type":"uint16"},{"indexed":true,"internalType":"address","name":"author","type":"address"}],"name":"ProjectCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"ProjectValidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawed","type":"event"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"cancelProject","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"claimProjectTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"commitOnProject","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"commitments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_authorAddress","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"uint32","name":"_startsAt","type":"uint32"},{"internalType":"uint32","name":"_endsAt","type":"uint32"},{"internalType":"uint32","name":"_target","type":"uint32"},{"internalType":"uint16","name":"_minInvest","type":"uint16"}],"name":"createProject","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"projects","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"fund","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint32","name":"startsAt","type":"uint32"},{"internalType":"uint32","name":"endsAt","type":"uint32"},{"internalType":"uint32","name":"target","type":"uint32"},{"internalType":"uint16","name":"minInvest","type":"uint16"},{"internalType":"bool","name":"completed","type":"bool"},{"internalType":"address","name":"authorAddress","type":"address"},{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"validateProject","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"withdrawOnProject","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1233":{"entryPoint":null,"id":1233,"parameterSlots":0,"returnSlots":0},"@_2429":{"entryPoint":null,"id":2429,"parameterSlots":3,"returnSlots":0},"@_2672":{"entryPoint":null,"id":2672,"parameterSlots":3,"returnSlots":0},"@_msgSender_2398":{"entryPoint":null,"id":2398,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1321":{"entryPoint":137,"id":1321,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":217,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":246,"id":null,"parameterSlots":2,"returnSlots":3}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:576:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:21","statements":[{"nodeType":"YulAssignment","src":"84:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:21"},"nodeType":"YulFunctionCall","src":"93:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:21"}]},{"body":{"nodeType":"YulBlock","src":"169:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:21"},"nodeType":"YulFunctionCall","src":"171:12:21"},"nodeType":"YulExpressionStatement","src":"171:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:21"},"nodeType":"YulFunctionCall","src":"150:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:21"},"nodeType":"YulFunctionCall","src":"146:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:21"},"nodeType":"YulFunctionCall","src":"135:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:21"},"nodeType":"YulFunctionCall","src":"125:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:21"},"nodeType":"YulFunctionCall","src":"118:50:21"},"nodeType":"YulIf","src":"115:70:21"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:21","type":""}],"src":"14:177:21"},{"body":{"nodeType":"YulBlock","src":"311:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:21"},"nodeType":"YulFunctionCall","src":"359:12:21"},"nodeType":"YulExpressionStatement","src":"359:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:21"},"nodeType":"YulFunctionCall","src":"328:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:21"},"nodeType":"YulFunctionCall","src":"324:32:21"},"nodeType":"YulIf","src":"321:52:21"},{"nodeType":"YulAssignment","src":"382:50:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"392:29:21"},"nodeType":"YulFunctionCall","src":"392:40:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:21"}]},{"nodeType":"YulAssignment","src":"441:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:21"},"nodeType":"YulFunctionCall","src":"481:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"451:29:21"},"nodeType":"YulFunctionCall","src":"451:49:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"441:6:21"}]},{"nodeType":"YulAssignment","src":"509:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"564:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"549:3:21"},"nodeType":"YulFunctionCall","src":"549:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"519:29:21"},"nodeType":"YulFunctionCall","src":"519:49:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"509:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:21","type":""}],"src":"196:378:21"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200215b3803806200215b8339810160408190526200003491620000f6565b828282620000423362000089565b600180546001600160a01b039485166001600160a01b0319918216179091556002805493851693821693909317909255600380549190931691161790555062000140915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000f157600080fd5b919050565b6000806000606084860312156200010c57600080fd5b6200011784620000d9565b92506200012760208501620000d9565b91506200013760408501620000d9565b90509250925092565b61200b80620001506000396000f3fe6080604052600436106100a75760003560e01c806360ae7c3b1161006457806360ae7c3b14610182578063715018a6146101a25780638da5cb5b146101b7578063bb89bf75146101df578063e90d4c06146101ff578063f2fde38b1461023757600080fd5b806306661abd146100ac578063107046bd146100d557806316509ee21461010d578063249411471461012257806344a9ae8c146101425780635702146914610162575b600080fd5b3480156100b857600080fd5b506100c260045481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100f56100f036600461185c565b610257565b6040516100cc9c9b9a999897969594939291906118bb565b61012061011b36600461185c565b610472565b005b34801561012e57600080fd5b5061012061013d36600461185c565b6108a6565b34801561014e57600080fd5b5061012061015d36600461185c565b610a48565b34801561016e57600080fd5b5061012061017d36600461185c565b610c1a565b34801561018e57600080fd5b5061012061019d36600461185c565b61108d565b3480156101ae57600080fd5b50610120611261565b3480156101c357600080fd5b506000546040516001600160a01b0390911681526020016100cc565b3480156101eb57600080fd5b506101206101fa366004611a02565b611275565b34801561020b57600080fd5b506100c261021a366004611af3565b600660209081526000928352604080842090915290825290205481565b34801561024357600080fd5b50610120610252366004611b23565b6116ab565b60056020526000908152604090208054819061027290611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461029e90611b47565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b50505050509080600101805461030090611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461032c90611b47565b80156103795780601f1061034e57610100808354040283529160200191610379565b820191906000526020600020905b81548152906001019060200180831161035c57829003601f168201915b50505050509080600201805461038e90611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546103ba90611b47565b80156104075780601f106103dc57610100808354040283529160200191610407565b820191906000526020600020905b8154815290600101906020018083116103ea57829003601f168201915b50505060038401546004850154600586015460068701546007909701549596929591945063ffffffff8082169450600160201b8204811693600160401b83049091169261ffff600160601b8404169260ff600160701b90910416916001600160a01b0390811691168c565b600081815260056020819052604090912001548190600160201b900463ffffffff164211156104bc5760405162461bcd60e51b81526004016104b390611b81565b60405180910390fd5b60008181526005602081905260409091200154600160701b900460ff16156104f65760405162461bcd60e51b81526004016104b390611ba8565b662386f26fc1000034101561053e5760405162461bcd60e51b815260206004820152600e60248201526d36b4b710181718189032ba3432b960911b60448201526064016104b3565b6000828152600560205260408082208151610180810190925280548290829061056690611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461059290611b47565b80156105df5780601f106105b4576101008083540402835291602001916105df565b820191906000526020600020905b8154815290600101906020018083116105c257829003601f168201915b505050505081526020016001820180546105f890611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461062490611b47565b80156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b5050505050815260200160028201805461068a90611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546106b690611b47565b80156107035780601f106106d857610100808354040283529160200191610703565b820191906000526020600020905b8154815290600101906020018083116106e657829003601f168201915b50505091835250506003820154602082015260048201546040820152600582015463ffffffff8082166060840152600160201b820481166080840152600160401b82041660a0830152600160601b810461ffff1660c0830152600160701b900460ff16151560e082015260068201546001600160a01b039081166101008301526007909201549091166101209091015290506000806107a134611724565b9150915081836060018181516107b79190611be9565b9052506080830180518291906107ce908390611be9565b9052506000858152600660209081526040808320338452909152812080543492906107fa908490611be9565b9091555050604051348152339086907f245cbccbc6875e4b0475a653568fd4f7c2dae5fb8929e33c0d66dc530ba11b009060200160405180910390a38260e0015163ffffffff1683606001511061089f5760016101208401526060830151608084015160405187927ff418560cae8df9d7d7fb63eca7a926821d509b9751b541b3aac4249c34bafa639261089692918252602082015260400190565b60405180910390a25b5050505050565b6108ae611764565b600081815260056020819052604090912001548190600160201b900463ffffffff164211156108ef5760405162461bcd60e51b81526004016104b390611b81565b60008181526005602081905260409091200154600160701b900460ff16156109295760405162461bcd60e51b81526004016104b390611ba8565b600082815260056020819052604090912001544263ffffffff909116116109925760405162461bcd60e51b815260206004820152601760248201527f50726f6a65637420616c7265616479207374617274656400000000000000000060448201526064016104b3565b6000828152600560205260408120906109ab828261180e565b6109b960018301600061180e565b6109c760028301600061180e565b5060006003820181905560048201556005810180546effffffffffffffffffffffffffffff191690556006810180546001600160a01b03199081169091556007909101805490911690556040518281527fe3805ed669490875ae87c5c8b1ad6ecca0e5e67305a833926d0d4317c4822fc09060200160405180910390a15050565b600081815260056020819052604090912001548190600160201b900463ffffffff16421115610a895760405162461bcd60e51b81526004016104b390611b81565b60008181526005602081905260409091200154600160701b900460ff1615610ac35760405162461bcd60e51b81526004016104b390611ba8565b6000828152600660209081526040808320338452909152812054839180610ae983611724565b600088815260056020526040812060030180549395509193508492610b0f908490611c02565b909155505060008681526005602052604081206004018054839290610b35908490611c02565b909155505060008681526006602090815260408083203380855292528083208390555185908381818185875af1925050503d8060008114610b92576040519150601f19603f3d011682016040523d82523d6000602084013e610b97565b606091505b5050905080610bda5760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b60448201526064016104b3565b604051848152339088907f7fd902d6e186354d1617b957fc4cb4a144f44a19cc5c4525cfb772d707c405c29060200160405180910390a350505050505050565b60008181526005602052604090206006015481906001600160a01b03163314610c725760405162461bcd60e51b815260206004820152600a6024820152692737ba1030baba3437b960b11b60448201526064016104b3565b600082815260056020819052604090912001548290600160201b900463ffffffff16421180610cba575060008181526005602081905260409091200154600160701b900460ff165b610cf35760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104b3565b60008381526005602052604080822081516101808101909252805482908290610d1b90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4790611b47565b8015610d945780601f10610d6957610100808354040283529160200191610d94565b820191906000526020600020905b815481529060010190602001808311610d7757829003601f168201915b50505050508152602001600182018054610dad90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd990611b47565b8015610e265780601f10610dfb57610100808354040283529160200191610e26565b820191906000526020600020905b815481529060010190602001808311610e0957829003601f168201915b50505050508152602001600282018054610e3f90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6b90611b47565b8015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b505050918352505060038201546020820152600480830154604080840191909152600584015463ffffffff8082166060860152600160201b820481166080860152600160401b82041660a0850152600160601b810461ffff1660c0850152600160701b900460ff16151560e084015260068401546001600160a01b0390811661010085015260079094015484166101209093019290925260025484518584015161014087015194516325b211eb60e11b81529697506000969290951694634b6423d694610f9494929391923092601b9291839160239101611c15565b6020604051808303816000875af1158015610fb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd79190611c6f565b60035460015460405163e343361560e01b81526001600160a01b038085166004830152918216602482015292935060009291169063e34336159060440160408051808303816000875af1158015611032573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110569190611c8c565b5060405190915086907fbc8073ff7d7bd2ab93612911916e7941431e9bae6df21f172a7f4ace4284b80490600090a2505050505050565b600081815260056020819052604090912001548190600160201b900463ffffffff164211806110d5575060008181526005602081905260409091200154600160701b900460ff165b61110e5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104b3565b6000828152600660209081526040808320338452909152812054839161113382611724565b50600086815260056020526040812060030154919250908290611157906023611cba565b6111619190611cdc565b6002546000888152600560205260409081902060070154905163e486033960e01b81526001600160a01b039182166004820152929350169063e4860339906024016020604051808303816000875af11580156111c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e59190611c6f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af1158015611234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112589190611cf3565b50505050505050565b611269611764565b61127360006117be565b565b61127d611764565b428463ffffffff1610156112c85760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642073746172742074696d6560701b60448201526064016104b3565b8363ffffffff168363ffffffff16116113165760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420656e642074696d6560801b60448201526064016104b3565b61132362093a8042611be9565b8363ffffffff1611156113785760405162461bcd60e51b815260206004820152601960248201527f4d6178696d756d206475726174696f6e2065786365656465640000000000000060448201526064016104b3565b6004805490600061138883611d15565b91905055506040518061018001604052808b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815291810191908990899081908401838280828437600092019190915250505090825250604080516020601f8c018190048102820181019092528a815291810191908b908b9081908401838280828437600081840152601f19601f82011690508083019250505050505050815260200160008152602001600081526020018563ffffffff1681526020018463ffffffff1681526020018363ffffffff1681526020018261ffff1681526020016000151581526020018c6001600160a01b0316815260200160006001600160a01b031681525060056000600454815260200190815260200160002060008201518160000190816114e59190611d93565b50602082015160018201906114fa9082611d93565b506040820151600282019061150f9082611d93565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160050160046101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160050160086101000a81548163ffffffff021916908363ffffffff16021790555061010082015181600501600c6101000a81548161ffff021916908361ffff16021790555061012082015181600501600e6101000a81548160ff0219169083151502179055506101408201518160060160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050508a6001600160a01b03168363ffffffff168563ffffffff167f49230f399aeb93ae9a7a3d2ee455e764a5b042340225e7e2ec99dde6f7e9bf8d6004548e8e8e8e8e8e8c8c60405161169699989796959493929190611e7c565b60405180910390a45050505050505050505050565b6116b3611764565b6001600160a01b0381166117185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b3565b611721816117be565b50565b600080806014611735600286611fc9565b61173f9190611cba565b905060008261174f600287611fc9565b6117599190611c02565b959194509092505050565b6000546001600160a01b031633146112735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b50805461181a90611b47565b6000825580601f1061182a575050565b601f01602090049060005260206000209081019061172191905b808211156118585760008155600101611844565b5090565b60006020828403121561186e57600080fd5b5035919050565b6000815180845260005b8181101561189b5760208185018101518683018201520161187f565b506000602082860101526020601f19601f83011685010191505092915050565b610180815260006118d061018083018f611875565b82810360208401526118e2818f611875565b905082810360408401526118f6818e611875565b9150508a606083015289608083015263ffffffff808a1660a084015280891660c084015280881660e08401525061ffff861661010083015261193d61012083018615159052565b6001600160a01b0384166101408301526001600160a01b0383166101608301529d9c50505050505050505050505050565b6001600160a01b038116811461172157600080fd5b803561198e8161196e565b919050565b60008083601f8401126119a557600080fd5b50813567ffffffffffffffff8111156119bd57600080fd5b6020830191508360208285010111156119d557600080fd5b9250929050565b803563ffffffff8116811461198e57600080fd5b803561ffff8116811461198e57600080fd5b60008060008060008060008060008060006101008c8e031215611a2457600080fd5b611a2d8c611983565b9a5067ffffffffffffffff8060208e01351115611a4957600080fd5b611a598e60208f01358f01611993565b909b50995060408d0135811015611a6f57600080fd5b611a7f8e60408f01358f01611993565b909950975060608d0135811015611a9557600080fd5b50611aa68d60608e01358e01611993565b9096509450611ab760808d016119dc565b9350611ac560a08d016119dc565b9250611ad360c08d016119dc565b9150611ae160e08d016119f0565b90509295989b509295989b9093969950565b60008060408385031215611b0657600080fd5b823591506020830135611b188161196e565b809150509250929050565b600060208284031215611b3557600080fd5b8135611b408161196e565b9392505050565b600181811c90821680611b5b57607f821691505b602082108103611b7b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600d908201526c105b1c9958591e48195b991959609a1b604082015260600190565b602080825260119082015270141c9bda9958dd0818dbdb5c1b195d1959607a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611bfc57611bfc611bd3565b92915050565b81810381811115611bfc57611bfc611bd3565b60e081526000611c2860e083018a611875565b8281036020840152611c3a818a611875565b6001600160a01b0398891660408501526060840197909752505092909416608083015260a082015260c0019190915292915050565b600060208284031215611c8157600080fd5b8151611b408161196e565b60008060408385031215611c9f57600080fd5b8251611caa8161196e565b6020939093015192949293505050565b600082611cd757634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417611bfc57611bfc611bd3565b600060208284031215611d0557600080fd5b81518015158114611b4057600080fd5b600060018201611d2757611d27611bd3565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f821115611d8e57600081815260208120601f850160051c81016020861015611d6b5750805b601f850160051c820191505b81811015611d8a57828155600101611d77565b5050505b505050565b815167ffffffffffffffff811115611dad57611dad611d2e565b611dc181611dbb8454611b47565b84611d44565b602080601f831160018114611df65760008415611dde5750858301515b600019600386901b1c1916600185901b178555611d8a565b600085815260208120601f198616915b82811015611e2557888601518255948401946001909101908401611e06565b5085821015611e435787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208201526000611e9660c083018a8c611e53565b8281036040840152611ea981898b611e53565b90508281036060840152611ebe818789611e53565b91505063ffffffff8416608083015261ffff831660a08301529a9950505050505050505050565b600181815b80851115611f20578160001904821115611f0657611f06611bd3565b80851615611f1357918102915b93841c9390800290611eea565b509250929050565b600082611f3757506001611bfc565b81611f4457506000611bfc565b8160018114611f5a5760028114611f6457611f80565b6001915050611bfc565b60ff841115611f7557611f75611bd3565b50506001821b611bfc565b5060208310610133831016604e8410600b8410161715611fa3575081810a611bfc565b611fad8383611ee5565b8060001904821115611fc157611fc1611bd3565b029392505050565b6000611b408383611f2856fea264697066735822122081b6392816241f6f6d34dd42744470ddbd8c147a35518d11aa1d6c71caeb42ed64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x215B CODESIZE SUB DUP1 PUSH3 0x215B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0xF6 JUMP JUMPDEST DUP3 DUP3 DUP3 PUSH3 0x42 CALLER PUSH3 0x89 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH3 0x140 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x117 DUP5 PUSH3 0xD9 JUMP JUMPDEST SWAP3 POP PUSH3 0x127 PUSH1 0x20 DUP6 ADD PUSH3 0xD9 JUMP JUMPDEST SWAP2 POP PUSH3 0x137 PUSH1 0x40 DUP6 ADD PUSH3 0xD9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x200B DUP1 PUSH3 0x150 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60AE7C3B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x60AE7C3B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xBB89BF75 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xE90D4C06 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x107046BD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x16509EE2 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x24941147 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x44A9AE8C EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x57021469 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x1261 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1275 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x272 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29E SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32C SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x379 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x379 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x38E SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BA SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x407 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x407 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 POP PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP5 POP PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP4 PUSH1 0x1 PUSH1 0x40 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP3 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x60 SHL DUP5 DIV AND SWAP3 PUSH1 0xFF PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP13 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x36B4B710181718189032BA3432B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x180 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x566 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x592 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x5F8 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x624 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x671 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x646 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x671 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x654 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x68A SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B6 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x703 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x703 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SHL DUP2 DIV PUSH2 0xFFFF AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x7 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x7A1 CALLVALUE PUSH2 0x1724 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP4 PUSH1 0x60 ADD DUP2 DUP2 MLOAD PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x80 DUP4 ADD DUP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x7CE SWAP1 DUP4 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x7FA SWAP1 DUP5 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 DUP7 SWAP1 PUSH32 0x245CBCCBC6875E4B0475A653568FD4F7C2DAE5FB8929E33C0D66DC530BA11B00 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP3 PUSH1 0xE0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x60 ADD MLOAD LT PUSH2 0x89F JUMPI PUSH1 0x1 PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD DUP8 SWAP3 PUSH32 0xF418560CAE8DF9D7D7FB63ECA7A926821D509B9751B541B3AAC4249C34BAFA63 SWAP3 PUSH2 0x896 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8AE PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND GT PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A65637420616C72656164792073746172746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x9AB DUP3 DUP3 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x9B9 PUSH1 0x1 DUP4 ADD PUSH1 0x0 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x180E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x7 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xE3805ED669490875AE87C5C8B1AD6ECCA0E5E67305A833926D0D4317C4822FC0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP4 SWAP2 DUP1 PUSH2 0xAE9 DUP4 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP DUP5 SWAP3 PUSH2 0xB0F SWAP1 DUP5 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB35 SWAP1 DUP5 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE MLOAD DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1DDA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 DUP9 SWAP1 PUSH32 0x7FD902D6E186354D1617B957FC4CB4A144F44A19CC5C4525CFB772D707C405C2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA1030BABA3437B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT DUP1 PUSH2 0xCBA JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD0818DB1BDCD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x180 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xD1B SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD47 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD69 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xDAD SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDD9 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xE3F SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE6B SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SHL DUP2 DIV PUSH2 0xFFFF AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x7 SWAP1 SWAP5 ADD SLOAD DUP5 AND PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 SLOAD DUP5 MLOAD DUP6 DUP5 ADD MLOAD PUSH2 0x140 DUP8 ADD MLOAD SWAP5 MLOAD PUSH4 0x25B211EB PUSH1 0xE1 SHL DUP2 MSTORE SWAP7 SWAP8 POP PUSH1 0x0 SWAP7 SWAP3 SWAP1 SWAP6 AND SWAP5 PUSH4 0x4B6423D6 SWAP5 PUSH2 0xF94 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 ADDRESS SWAP3 PUSH1 0x1B SWAP3 SWAP2 DUP4 SWAP2 PUSH1 0x23 SWAP2 ADD PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD7 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3433615 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0xE3433615 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1032 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1056 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP7 SWAP1 PUSH32 0xBC8073FF7D7BD2AB93612911916E7941431E9BAE6DF21F172A7F4ACE4284B804 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT DUP1 PUSH2 0x10D5 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD0818DB1BDCD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP4 SWAP2 PUSH2 0x1133 DUP3 PUSH2 0x1724 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 PUSH2 0x1157 SWAP1 PUSH1 0x23 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP1 MLOAD PUSH4 0xE4860339 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xE4860339 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E5 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1234 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1258 SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1269 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x1273 PUSH1 0x0 PUSH2 0x17BE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x127D PUSH2 0x1764 JUMP JUMPDEST TIMESTAMP DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642073746172742074696D65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420656E642074696D65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1323 PUSH3 0x93A80 TIMESTAMP PUSH2 0x1BE9 JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1378 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206475726174696F6E20657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1388 DUP4 PUSH2 0x1D15 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x14FA SWAP1 DUP3 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x150F SWAP1 DUP3 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND PUSH32 0x49230F399AEB93AE9A7A3D2EE455E764A5B042340225E7E2EC99DDE6F7E9BF8D PUSH1 0x4 SLOAD DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1696 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16B3 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1721 DUP2 PUSH2 0x17BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x14 PUSH2 0x1735 PUSH1 0x2 DUP7 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x174F PUSH1 0x2 DUP8 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0x1759 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x181A SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x182A JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1721 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1844 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x189B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x187F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18D0 PUSH2 0x180 DUP4 ADD DUP16 PUSH2 0x1875 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18E2 DUP2 DUP16 PUSH2 0x1875 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x18F6 DUP2 DUP15 PUSH2 0x1875 JUMP JUMPDEST SWAP2 POP POP DUP11 PUSH1 0x60 DUP4 ADD MSTORE DUP10 PUSH1 0x80 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 DUP11 AND PUSH1 0xA0 DUP5 ADD MSTORE DUP1 DUP10 AND PUSH1 0xC0 DUP5 ADD MSTORE DUP1 DUP9 AND PUSH1 0xE0 DUP5 ADD MSTORE POP PUSH2 0xFFFF DUP7 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x193D PUSH2 0x120 DUP4 ADD DUP7 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x160 DUP4 ADD MSTORE SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x198E DUP2 PUSH2 0x196E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x198E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x198E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x1A24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2D DUP13 PUSH2 0x1983 JUMP JUMPDEST SWAP11 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x20 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x1A49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A59 DUP15 PUSH1 0x20 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x1A6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7F DUP15 PUSH1 0x40 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA6 DUP14 PUSH1 0x60 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x1AB7 PUSH1 0x80 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP4 POP PUSH2 0x1AC5 PUSH1 0xA0 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP3 POP PUSH2 0x1AD3 PUSH1 0xC0 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE1 PUSH1 0xE0 DUP14 ADD PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B18 DUP2 PUSH2 0x196E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B40 DUP2 PUSH2 0x196E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E48195B991959 PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x141C9BDA9958DD0818DBDB5C1B195D1959 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C28 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x1875 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C3A DUP2 DUP11 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP SWAP3 SWAP1 SWAP5 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B40 DUP2 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x1CAA DUP2 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CD7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D27 JUMPI PUSH2 0x1D27 PUSH2 0x1BD3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1D6B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D77 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAD JUMPI PUSH2 0x1DAD PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x1DC1 DUP2 PUSH2 0x1DBB DUP5 SLOAD PUSH2 0x1B47 JUMP JUMPDEST DUP5 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DF6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1DDE JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E25 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E06 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E43 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST DUP10 DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1E96 PUSH1 0xC0 DUP4 ADD DUP11 DUP13 PUSH2 0x1E53 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1EA9 DUP2 DUP10 DUP12 PUSH2 0x1E53 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1EBE DUP2 DUP8 DUP10 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1F20 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F06 PUSH2 0x1BD3 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1F13 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1EEA JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F37 JUMPI POP PUSH1 0x1 PUSH2 0x1BFC JUMP JUMPDEST DUP2 PUSH2 0x1F44 JUMPI POP PUSH1 0x0 PUSH2 0x1BFC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F5A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F64 JUMPI PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1BFC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F75 JUMPI PUSH2 0x1F75 PUSH2 0x1BD3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1BFC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1FA3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x1FAD DUP4 DUP4 PUSH2 0x1EE5 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1FC1 JUMPI PUSH2 0x1FC1 PUSH2 0x1BD3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B40 DUP4 DUP4 PUSH2 0x1F28 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xB6 CODECOPY 0x28 AND 0x24 0x1F PUSH16 0x6D34DD42744470DDBD8C147A35518D11 0xAA SAR PUSH13 0x71CAEB42ED64736F6C63430008 GT STOP CALLER ","sourceMap":"101:252:13:-:0;;;146:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;272:17;291:20;313:19;936:32:6;719:10:12;936:18:6;:32::i;:::-;2654:16:14;:36;;-1:-1:-1;;;;;2654:36:14;;;-1:-1:-1;;;;;;2654:36:14;;;;;;;2694:19;:42;;;;;;;;;;;;;;;2740:18;:40;;;;;;;;;;;-1:-1:-1;101:252:13;;-1:-1:-1;;101:252:13;2433:187:6;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:6;;;-1:-1:-1;;;;;;2541:17:6;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:21:-;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;101:252:13;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_1264":{"entryPoint":5988,"id":1264,"parameterSlots":0,"returnSlots":0},"@_msgSender_2398":{"entryPoint":null,"id":2398,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1321":{"entryPoint":6078,"id":1321,"parameterSlots":1,"returnSlots":0},"@cancelProject_2787":{"entryPoint":2214,"id":2787,"parameterSlots":1,"returnSlots":0},"@claimProjectTokens_3053":{"entryPoint":4237,"id":3053,"parameterSlots":1,"returnSlots":0},"@commitOnProject_2871":{"entryPoint":1138,"id":2871,"parameterSlots":1,"returnSlots":0},"@commitments_2506":{"entryPoint":null,"id":2506,"parameterSlots":0,"returnSlots":0},"@computeValueAndLiquidity_3085":{"entryPoint":5924,"id":3085,"parameterSlots":1,"returnSlots":2},"@count_2495":{"entryPoint":null,"id":2495,"parameterSlots":0,"returnSlots":0},"@createProject_2756":{"entryPoint":4725,"id":2756,"parameterSlots":11,"returnSlots":0},"@owner_1250":{"entryPoint":null,"id":1250,"parameterSlots":0,"returnSlots":1},"@projects_2500":{"entryPoint":599,"id":2500,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_1278":{"entryPoint":4705,"id":1278,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1301":{"entryPoint":5803,"id":1301,"parameterSlots":1,"returnSlots":0},"@validateProject_2999":{"entryPoint":3098,"id":2999,"parameterSlots":1,"returnSlots":0},"@withdrawOnProject_2945":{"entryPoint":2632,"id":2945,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":6531,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":6547,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":6947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":7279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes32_fromMemory":{"entryPoint":7308,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptrt_uint32t_uint32t_uint32t_uint16":{"entryPoint":6658,"id":null,"parameterSlots":2,"returnSlots":11},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7411,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20MetadataUpgradeable_$883_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":6899,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint16":{"entryPoint":6640,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint32":{"entryPoint":6620,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":6261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":7763,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7189,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__fromStack_reversed":{"entryPoint":6331,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_tuple_t_stringliteral_03a0ef2274e5fa9c92bd6c8904f1025dd04b34d1da74eba1106c91ebdbd13a59__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7041,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_268b2b3ef04afe4685fdbcff6cb683aa408f3edfff411f4ac3bbfee177e0bffa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4762d97070854ffa537667d2f87773fc610015ed3ee39aef0aef6647d23f7004__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6ccad79e7aa285c9f3f2db83e30790c7046ceac0d7d86d7990286517708fb5ee__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a3a9eb15a1903ce0ba5279cfeb2e00d127b5a6f2993d14812bc6864e4dd646bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a3b6d4b23ae4bbd8dffd90f5160a835673157044abc6160caab696199469b553__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b66f79849fb2a1aeae618e045c8144ee98af31f7d75c8241357798f6fb27a16b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bff8fba7e8290554d856a3fb22093bf87bdf5e84742e561d9c5dea6562588f74__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7080,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cf1cbb480479ea4d7c3f4f3b5a2d1e356ab6d98c8dec1739a2a160b41897be8e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f79adeb066186ecb6bfb5c8311500863e681b7aa46040b41ed874ebc28bd54f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr_t_string_calldata_ptr_t_uint32_t_uint16__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint32_t_uint16__fromStack_reversed":{"entryPoint":7804,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7145,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7354,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":7909,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":8137,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":7976,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7388,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7170,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":7492,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":7571,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6983,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":7445,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7123,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7470,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":6510,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19138:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:21","statements":[{"nodeType":"YulAssignment","src":"125:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:21"},"nodeType":"YulFunctionCall","src":"133:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:21"},"nodeType":"YulFunctionCall","src":"160:25:21"},"nodeType":"YulExpressionStatement","src":"160:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:21","type":""}],"src":"14:177:21"},{"body":{"nodeType":"YulBlock","src":"266:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"312:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"321:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"324:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"314:6:21"},"nodeType":"YulFunctionCall","src":"314:12:21"},"nodeType":"YulExpressionStatement","src":"314:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"287:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"296:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"283:3:21"},"nodeType":"YulFunctionCall","src":"283:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"308:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"279:3:21"},"nodeType":"YulFunctionCall","src":"279:32:21"},"nodeType":"YulIf","src":"276:52:21"},{"nodeType":"YulAssignment","src":"337:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"360:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"347:12:21"},"nodeType":"YulFunctionCall","src":"347:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"337:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"232:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"243:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"255:6:21","type":""}],"src":"196:180:21"},{"body":{"nodeType":"YulBlock","src":"431:373:21","statements":[{"nodeType":"YulVariableDeclaration","src":"441:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"461:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"455:5:21"},"nodeType":"YulFunctionCall","src":"455:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"445:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"483:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"488:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"476:6:21"},"nodeType":"YulFunctionCall","src":"476:19:21"},"nodeType":"YulExpressionStatement","src":"476:19:21"},{"nodeType":"YulVariableDeclaration","src":"504:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"513:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"508:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"575:110:21","statements":[{"nodeType":"YulVariableDeclaration","src":"589:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"599:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"593:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"631:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"636:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:11:21"},{"name":"_1","nodeType":"YulIdentifier","src":"640:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"623:3:21"},"nodeType":"YulFunctionCall","src":"623:20:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"},{"name":"i","nodeType":"YulIdentifier","src":"666:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"655:3:21"},"nodeType":"YulFunctionCall","src":"655:13:21"},{"name":"_1","nodeType":"YulIdentifier","src":"670:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"651:3:21"},"nodeType":"YulFunctionCall","src":"651:22:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"645:5:21"},"nodeType":"YulFunctionCall","src":"645:29:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"616:6:21"},"nodeType":"YulFunctionCall","src":"616:59:21"},"nodeType":"YulExpressionStatement","src":"616:59:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"534:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"537:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"531:2:21"},"nodeType":"YulFunctionCall","src":"531:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"545:21:21","statements":[{"nodeType":"YulAssignment","src":"547:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"556:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"559:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"552:3:21"},"nodeType":"YulFunctionCall","src":"552:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"547:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"527:3:21","statements":[]},"src":"523:162:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"709:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"714:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"705:3:21"},"nodeType":"YulFunctionCall","src":"705:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"723:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"701:3:21"},"nodeType":"YulFunctionCall","src":"701:27:21"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"694:6:21"},"nodeType":"YulFunctionCall","src":"694:38:21"},"nodeType":"YulExpressionStatement","src":"694:38:21"},{"nodeType":"YulAssignment","src":"741:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"756:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"769:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"777:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:21"},"nodeType":"YulFunctionCall","src":"765:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"786:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"782:3:21"},"nodeType":"YulFunctionCall","src":"782:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"761:3:21"},"nodeType":"YulFunctionCall","src":"761:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"752:3:21"},"nodeType":"YulFunctionCall","src":"752:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"793:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"748:3:21"},"nodeType":"YulFunctionCall","src":"748:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"741:3:21"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"408:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"415:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"423:3:21","type":""}],"src":"381:423:21"},{"body":{"nodeType":"YulBlock","src":"850:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"867:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"886:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"879:6:21"},"nodeType":"YulFunctionCall","src":"879:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"872:6:21"},"nodeType":"YulFunctionCall","src":"872:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"860:6:21"},"nodeType":"YulFunctionCall","src":"860:34:21"},"nodeType":"YulExpressionStatement","src":"860:34:21"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"834:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"841:3:21","type":""}],"src":"809:91:21"},{"body":{"nodeType":"YulBlock","src":"949:60:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"966:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"975:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"990:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"995:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"986:3:21"},"nodeType":"YulFunctionCall","src":"986:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"999:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"982:3:21"},"nodeType":"YulFunctionCall","src":"982:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"971:3:21"},"nodeType":"YulFunctionCall","src":"971:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"959:6:21"},"nodeType":"YulFunctionCall","src":"959:44:21"},"nodeType":"YulExpressionStatement","src":"959:44:21"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"933:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"940:3:21","type":""}],"src":"905:104:21"},{"body":{"nodeType":"YulBlock","src":"1471:830:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1488:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1499:3:21","type":"","value":"384"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1481:6:21"},"nodeType":"YulFunctionCall","src":"1481:22:21"},"nodeType":"YulExpressionStatement","src":"1481:22:21"},{"nodeType":"YulVariableDeclaration","src":"1512:60:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1544:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1556:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1567:3:21","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1552:3:21"},"nodeType":"YulFunctionCall","src":"1552:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1526:17:21"},"nodeType":"YulFunctionCall","src":"1526:46:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1516:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1592:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1603:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1588:3:21"},"nodeType":"YulFunctionCall","src":"1588:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1612:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1620:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1608:3:21"},"nodeType":"YulFunctionCall","src":"1608:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1581:6:21"},"nodeType":"YulFunctionCall","src":"1581:50:21"},"nodeType":"YulExpressionStatement","src":"1581:50:21"},{"nodeType":"YulVariableDeclaration","src":"1640:47:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1672:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"1680:6:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1654:17:21"},"nodeType":"YulFunctionCall","src":"1654:33:21"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"1644:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1707:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1718:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1703:3:21"},"nodeType":"YulFunctionCall","src":"1703:18:21"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"1727:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1735:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1723:3:21"},"nodeType":"YulFunctionCall","src":"1723:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1696:6:21"},"nodeType":"YulFunctionCall","src":"1696:50:21"},"nodeType":"YulExpressionStatement","src":"1696:50:21"},{"nodeType":"YulAssignment","src":"1755:41:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1781:6:21"},{"name":"tail_2","nodeType":"YulIdentifier","src":"1789:6:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1763:17:21"},"nodeType":"YulFunctionCall","src":"1763:33:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1755:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1816:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1827:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:21"},"nodeType":"YulFunctionCall","src":"1812:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"1832:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1805:6:21"},"nodeType":"YulFunctionCall","src":"1805:34:21"},"nodeType":"YulExpressionStatement","src":"1805:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1859:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1870:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1855:3:21"},"nodeType":"YulFunctionCall","src":"1855:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"1876:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1848:6:21"},"nodeType":"YulFunctionCall","src":"1848:35:21"},"nodeType":"YulExpressionStatement","src":"1848:35:21"},{"nodeType":"YulVariableDeclaration","src":"1892:20:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1902:10:21","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1896:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1932:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1943:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1928:3:21"},"nodeType":"YulFunctionCall","src":"1928:19:21"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"1953:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1961:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1949:3:21"},"nodeType":"YulFunctionCall","src":"1949:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1921:6:21"},"nodeType":"YulFunctionCall","src":"1921:44:21"},"nodeType":"YulExpressionStatement","src":"1921:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1985:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1996:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:21"},"nodeType":"YulFunctionCall","src":"1981:19:21"},{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"2006:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2014:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2002:3:21"},"nodeType":"YulFunctionCall","src":"2002:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1974:6:21"},"nodeType":"YulFunctionCall","src":"1974:44:21"},"nodeType":"YulExpressionStatement","src":"1974:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2038:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2049:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2034:3:21"},"nodeType":"YulFunctionCall","src":"2034:19:21"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"2059:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2067:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2055:3:21"},"nodeType":"YulFunctionCall","src":"2055:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2027:6:21"},"nodeType":"YulFunctionCall","src":"2027:44:21"},"nodeType":"YulExpressionStatement","src":"2027:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2091:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2102:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2087:3:21"},"nodeType":"YulFunctionCall","src":"2087:19:21"},{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"2112:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2120:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2108:3:21"},"nodeType":"YulFunctionCall","src":"2108:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2080:6:21"},"nodeType":"YulFunctionCall","src":"2080:48:21"},"nodeType":"YulExpressionStatement","src":"2080:48:21"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"2153:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2165:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2176:3:21","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2161:3:21"},"nodeType":"YulFunctionCall","src":"2161:19:21"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"2137:15:21"},"nodeType":"YulFunctionCall","src":"2137:44:21"},"nodeType":"YulExpressionStatement","src":"2137:44:21"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"2209:7:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2222:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2233:3:21","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:21"},"nodeType":"YulFunctionCall","src":"2218:19:21"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"2190:18:21"},"nodeType":"YulFunctionCall","src":"2190:48:21"},"nodeType":"YulExpressionStatement","src":"2190:48:21"},{"expression":{"arguments":[{"name":"value11","nodeType":"YulIdentifier","src":"2266:7:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2279:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2290:3:21","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2275:3:21"},"nodeType":"YulFunctionCall","src":"2275:19:21"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"2247:18:21"},"nodeType":"YulFunctionCall","src":"2247:48:21"},"nodeType":"YulExpressionStatement","src":"2247:48:21"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1350:9:21","type":""},{"name":"value11","nodeType":"YulTypedName","src":"1361:7:21","type":""},{"name":"value10","nodeType":"YulTypedName","src":"1370:7:21","type":""},{"name":"value9","nodeType":"YulTypedName","src":"1379:6:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1387:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1395:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1403:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1411:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1419:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1427:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1435:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1443:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1451:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1462:4:21","type":""}],"src":"1014:1287:21"},{"body":{"nodeType":"YulBlock","src":"2407:102:21","statements":[{"nodeType":"YulAssignment","src":"2417:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2429:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2440:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2425:3:21"},"nodeType":"YulFunctionCall","src":"2425:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2417:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2459:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2474:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2490:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2495:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2486:3:21"},"nodeType":"YulFunctionCall","src":"2486:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2499:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2482:3:21"},"nodeType":"YulFunctionCall","src":"2482:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2470:3:21"},"nodeType":"YulFunctionCall","src":"2470:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2452:6:21"},"nodeType":"YulFunctionCall","src":"2452:51:21"},"nodeType":"YulExpressionStatement","src":"2452:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2376:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2387:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2398:4:21","type":""}],"src":"2306:203:21"},{"body":{"nodeType":"YulBlock","src":"2559:86:21","statements":[{"body":{"nodeType":"YulBlock","src":"2623:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2632:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2635:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2625:6:21"},"nodeType":"YulFunctionCall","src":"2625:12:21"},"nodeType":"YulExpressionStatement","src":"2625:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2582:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2593:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2608:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2613:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2604:3:21"},"nodeType":"YulFunctionCall","src":"2604:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2617:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2600:3:21"},"nodeType":"YulFunctionCall","src":"2600:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2589:3:21"},"nodeType":"YulFunctionCall","src":"2589:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2579:2:21"},"nodeType":"YulFunctionCall","src":"2579:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2572:6:21"},"nodeType":"YulFunctionCall","src":"2572:50:21"},"nodeType":"YulIf","src":"2569:70:21"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2548:5:21","type":""}],"src":"2514:131:21"},{"body":{"nodeType":"YulBlock","src":"2699:85:21","statements":[{"nodeType":"YulAssignment","src":"2709:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2731:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2718:12:21"},"nodeType":"YulFunctionCall","src":"2718:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2709:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2772:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2747:24:21"},"nodeType":"YulFunctionCall","src":"2747:31:21"},"nodeType":"YulExpressionStatement","src":"2747:31:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2678:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2689:5:21","type":""}],"src":"2650:134:21"},{"body":{"nodeType":"YulBlock","src":"2862:275:21","statements":[{"body":{"nodeType":"YulBlock","src":"2911:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2920:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2923:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2913:6:21"},"nodeType":"YulFunctionCall","src":"2913:12:21"},"nodeType":"YulExpressionStatement","src":"2913:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2890:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2898:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2886:3:21"},"nodeType":"YulFunctionCall","src":"2886:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2905:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2882:3:21"},"nodeType":"YulFunctionCall","src":"2882:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2875:6:21"},"nodeType":"YulFunctionCall","src":"2875:35:21"},"nodeType":"YulIf","src":"2872:55:21"},{"nodeType":"YulAssignment","src":"2936:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2959:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2946:12:21"},"nodeType":"YulFunctionCall","src":"2946:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2936:6:21"}]},{"body":{"nodeType":"YulBlock","src":"3009:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3018:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3021:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3011:6:21"},"nodeType":"YulFunctionCall","src":"3011:12:21"},"nodeType":"YulExpressionStatement","src":"3011:12:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2981:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2989:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2978:2:21"},"nodeType":"YulFunctionCall","src":"2978:30:21"},"nodeType":"YulIf","src":"2975:50:21"},{"nodeType":"YulAssignment","src":"3034:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3058:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3046:3:21"},"nodeType":"YulFunctionCall","src":"3046:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3034:8:21"}]},{"body":{"nodeType":"YulBlock","src":"3115:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3124:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3127:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3117:6:21"},"nodeType":"YulFunctionCall","src":"3117:12:21"},"nodeType":"YulExpressionStatement","src":"3117:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3086:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"3094:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3082:3:21"},"nodeType":"YulFunctionCall","src":"3082:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"3103:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3078:3:21"},"nodeType":"YulFunctionCall","src":"3078:30:21"},{"name":"end","nodeType":"YulIdentifier","src":"3110:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3075:2:21"},"nodeType":"YulFunctionCall","src":"3075:39:21"},"nodeType":"YulIf","src":"3072:59:21"}]},"name":"abi_decode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2825:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2833:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2841:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"2851:6:21","type":""}],"src":"2789:348:21"},{"body":{"nodeType":"YulBlock","src":"3190:115:21","statements":[{"nodeType":"YulAssignment","src":"3200:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3222:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3209:12:21"},"nodeType":"YulFunctionCall","src":"3209:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3200:5:21"}]},{"body":{"nodeType":"YulBlock","src":"3283:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3295:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3285:6:21"},"nodeType":"YulFunctionCall","src":"3285:12:21"},"nodeType":"YulExpressionStatement","src":"3285:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3251:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3262:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3269:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:21"},"nodeType":"YulFunctionCall","src":"3258:22:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3248:2:21"},"nodeType":"YulFunctionCall","src":"3248:33:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3241:6:21"},"nodeType":"YulFunctionCall","src":"3241:41:21"},"nodeType":"YulIf","src":"3238:61:21"}]},"name":"abi_decode_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3169:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3180:5:21","type":""}],"src":"3142:163:21"},{"body":{"nodeType":"YulBlock","src":"3358:111:21","statements":[{"nodeType":"YulAssignment","src":"3368:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3390:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3377:12:21"},"nodeType":"YulFunctionCall","src":"3377:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3368:5:21"}]},{"body":{"nodeType":"YulBlock","src":"3447:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3456:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3459:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3449:6:21"},"nodeType":"YulFunctionCall","src":"3449:12:21"},"nodeType":"YulExpressionStatement","src":"3449:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3419:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3430:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3437:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3426:3:21"},"nodeType":"YulFunctionCall","src":"3426:18:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3416:2:21"},"nodeType":"YulFunctionCall","src":"3416:29:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3409:6:21"},"nodeType":"YulFunctionCall","src":"3409:37:21"},"nodeType":"YulIf","src":"3406:57:21"}]},"name":"abi_decode_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3337:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3348:5:21","type":""}],"src":"3310:159:21"},{"body":{"nodeType":"YulBlock","src":"3720:1112:21","statements":[{"body":{"nodeType":"YulBlock","src":"3767:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3776:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3779:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3769:6:21"},"nodeType":"YulFunctionCall","src":"3769:12:21"},"nodeType":"YulExpressionStatement","src":"3769:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3741:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3750:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3737:3:21"},"nodeType":"YulFunctionCall","src":"3737:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3762:3:21","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3733:3:21"},"nodeType":"YulFunctionCall","src":"3733:33:21"},"nodeType":"YulIf","src":"3730:53:21"},{"nodeType":"YulAssignment","src":"3792:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3821:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3802:18:21"},"nodeType":"YulFunctionCall","src":"3802:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3792:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3840:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3850:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3844:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3921:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3930:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3933:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3923:6:21"},"nodeType":"YulFunctionCall","src":"3923:12:21"},"nodeType":"YulExpressionStatement","src":"3923:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3900:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3911:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3896:3:21"},"nodeType":"YulFunctionCall","src":"3896:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3883:12:21"},"nodeType":"YulFunctionCall","src":"3883:32:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3917:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3880:2:21"},"nodeType":"YulFunctionCall","src":"3880:40:21"},"nodeType":"YulIf","src":"3877:60:21"},{"nodeType":"YulVariableDeclaration","src":"3946:111:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4003:9:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4031:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4042:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4027:3:21"},"nodeType":"YulFunctionCall","src":"4027:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4014:12:21"},"nodeType":"YulFunctionCall","src":"4014:32:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:21"},"nodeType":"YulFunctionCall","src":"3999:48:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4049:7:21"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"3972:26:21"},"nodeType":"YulFunctionCall","src":"3972:85:21"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"3950:8:21","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"3960:8:21","type":""}]},{"nodeType":"YulAssignment","src":"4066:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"4076:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4066:6:21"}]},{"nodeType":"YulAssignment","src":"4093:18:21","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4103:8:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4093:6:21"}]},{"body":{"nodeType":"YulBlock","src":"4164:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4173:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4176:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4166:6:21"},"nodeType":"YulFunctionCall","src":"4166:12:21"},"nodeType":"YulExpressionStatement","src":"4166:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4143:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4154:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4139:3:21"},"nodeType":"YulFunctionCall","src":"4139:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4126:12:21"},"nodeType":"YulFunctionCall","src":"4126:32:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4160:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4123:2:21"},"nodeType":"YulFunctionCall","src":"4123:40:21"},"nodeType":"YulIf","src":"4120:60:21"},{"nodeType":"YulVariableDeclaration","src":"4189:111:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4246:9:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4274:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4285:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4270:3:21"},"nodeType":"YulFunctionCall","src":"4270:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4257:12:21"},"nodeType":"YulFunctionCall","src":"4257:32:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4242:3:21"},"nodeType":"YulFunctionCall","src":"4242:48:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4292:7:21"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"4215:26:21"},"nodeType":"YulFunctionCall","src":"4215:85:21"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"4193:8:21","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"4203:8:21","type":""}]},{"nodeType":"YulAssignment","src":"4309:18:21","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"4319:8:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4309:6:21"}]},{"nodeType":"YulAssignment","src":"4336:18:21","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"4346:8:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4336:6:21"}]},{"body":{"nodeType":"YulBlock","src":"4407:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4416:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4419:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4409:6:21"},"nodeType":"YulFunctionCall","src":"4409:12:21"},"nodeType":"YulExpressionStatement","src":"4409:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4386:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4397:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4382:3:21"},"nodeType":"YulFunctionCall","src":"4382:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4369:12:21"},"nodeType":"YulFunctionCall","src":"4369:32:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4403:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4366:2:21"},"nodeType":"YulFunctionCall","src":"4366:40:21"},"nodeType":"YulIf","src":"4363:60:21"},{"nodeType":"YulVariableDeclaration","src":"4432:111:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4489:9:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4517:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4528:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4513:3:21"},"nodeType":"YulFunctionCall","src":"4513:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4500:12:21"},"nodeType":"YulFunctionCall","src":"4500:32:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4485:3:21"},"nodeType":"YulFunctionCall","src":"4485:48:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4535:7:21"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"4458:26:21"},"nodeType":"YulFunctionCall","src":"4458:85:21"},"variables":[{"name":"value5_1","nodeType":"YulTypedName","src":"4436:8:21","type":""},{"name":"value6_1","nodeType":"YulTypedName","src":"4446:8:21","type":""}]},{"nodeType":"YulAssignment","src":"4552:18:21","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"4562:8:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4552:6:21"}]},{"nodeType":"YulAssignment","src":"4579:18:21","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"4589:8:21"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4579:6:21"}]},{"nodeType":"YulAssignment","src":"4606:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4638:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4649:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4634:3:21"},"nodeType":"YulFunctionCall","src":"4634:19:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"4616:17:21"},"nodeType":"YulFunctionCall","src":"4616:38:21"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"4606:6:21"}]},{"nodeType":"YulAssignment","src":"4663:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4695:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4706:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4691:3:21"},"nodeType":"YulFunctionCall","src":"4691:19:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"4673:17:21"},"nodeType":"YulFunctionCall","src":"4673:38:21"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"4663:6:21"}]},{"nodeType":"YulAssignment","src":"4720:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4752:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4763:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4748:3:21"},"nodeType":"YulFunctionCall","src":"4748:19:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"4730:17:21"},"nodeType":"YulFunctionCall","src":"4730:38:21"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"4720:6:21"}]},{"nodeType":"YulAssignment","src":"4777:49:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4810:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4821:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4806:3:21"},"nodeType":"YulFunctionCall","src":"4806:19:21"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"4788:17:21"},"nodeType":"YulFunctionCall","src":"4788:38:21"},"variableNames":[{"name":"value10","nodeType":"YulIdentifier","src":"4777:7:21"}]}]},"name":"abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptrt_uint32t_uint32t_uint32t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3605:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3616:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3628:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3636:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3644:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3652:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3660:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3668:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3676:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3684:6:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"3692:6:21","type":""},{"name":"value9","nodeType":"YulTypedName","src":"3700:6:21","type":""},{"name":"value10","nodeType":"YulTypedName","src":"3708:7:21","type":""}],"src":"3474:1358:21"},{"body":{"nodeType":"YulBlock","src":"4924:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"4970:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4979:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4982:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4972:6:21"},"nodeType":"YulFunctionCall","src":"4972:12:21"},"nodeType":"YulExpressionStatement","src":"4972:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4945:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4954:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4941:3:21"},"nodeType":"YulFunctionCall","src":"4941:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4966:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4937:3:21"},"nodeType":"YulFunctionCall","src":"4937:32:21"},"nodeType":"YulIf","src":"4934:52:21"},{"nodeType":"YulAssignment","src":"4995:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5018:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5005:12:21"},"nodeType":"YulFunctionCall","src":"5005:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4995:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5037:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5067:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5078:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5063:3:21"},"nodeType":"YulFunctionCall","src":"5063:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5050:12:21"},"nodeType":"YulFunctionCall","src":"5050:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5041:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5116:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5091:24:21"},"nodeType":"YulFunctionCall","src":"5091:31:21"},"nodeType":"YulExpressionStatement","src":"5091:31:21"},{"nodeType":"YulAssignment","src":"5131:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5141:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5131:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4882:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4893:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4905:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4913:6:21","type":""}],"src":"4837:315:21"},{"body":{"nodeType":"YulBlock","src":"5227:177:21","statements":[{"body":{"nodeType":"YulBlock","src":"5273:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5282:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5285:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5275:6:21"},"nodeType":"YulFunctionCall","src":"5275:12:21"},"nodeType":"YulExpressionStatement","src":"5275:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5248:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5257:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5244:3:21"},"nodeType":"YulFunctionCall","src":"5244:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5269:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5240:3:21"},"nodeType":"YulFunctionCall","src":"5240:32:21"},"nodeType":"YulIf","src":"5237:52:21"},{"nodeType":"YulVariableDeclaration","src":"5298:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5311:12:21"},"nodeType":"YulFunctionCall","src":"5311:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5302:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5368:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5343:24:21"},"nodeType":"YulFunctionCall","src":"5343:31:21"},"nodeType":"YulExpressionStatement","src":"5343:31:21"},{"nodeType":"YulAssignment","src":"5383:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5393:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5383:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5193:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5204:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5216:6:21","type":""}],"src":"5157:247:21"},{"body":{"nodeType":"YulBlock","src":"5464:325:21","statements":[{"nodeType":"YulAssignment","src":"5474:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5488:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5491:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5484:3:21"},"nodeType":"YulFunctionCall","src":"5484:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5474:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5505:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5535:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5541:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5531:3:21"},"nodeType":"YulFunctionCall","src":"5531:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5509:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5582:31:21","statements":[{"nodeType":"YulAssignment","src":"5584:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5598:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5606:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5594:3:21"},"nodeType":"YulFunctionCall","src":"5594:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5584:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5562:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5555:6:21"},"nodeType":"YulFunctionCall","src":"5555:26:21"},"nodeType":"YulIf","src":"5552:61:21"},{"body":{"nodeType":"YulBlock","src":"5672:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5693:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5700:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5705:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5696:3:21"},"nodeType":"YulFunctionCall","src":"5696:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5686:6:21"},"nodeType":"YulFunctionCall","src":"5686:31:21"},"nodeType":"YulExpressionStatement","src":"5686:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5737:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5740:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5730:6:21"},"nodeType":"YulFunctionCall","src":"5730:15:21"},"nodeType":"YulExpressionStatement","src":"5730:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5765:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5768:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5758:6:21"},"nodeType":"YulFunctionCall","src":"5758:15:21"},"nodeType":"YulExpressionStatement","src":"5758:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5628:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5651:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5659:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5648:2:21"},"nodeType":"YulFunctionCall","src":"5648:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5625:2:21"},"nodeType":"YulFunctionCall","src":"5625:38:21"},"nodeType":"YulIf","src":"5622:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5444:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5453:6:21","type":""}],"src":"5409:380:21"},{"body":{"nodeType":"YulBlock","src":"5968:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5985:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5996:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5978:6:21"},"nodeType":"YulFunctionCall","src":"5978:21:21"},"nodeType":"YulExpressionStatement","src":"5978:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6019:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6030:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6015:3:21"},"nodeType":"YulFunctionCall","src":"6015:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6035:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6008:6:21"},"nodeType":"YulFunctionCall","src":"6008:30:21"},"nodeType":"YulExpressionStatement","src":"6008:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6058:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6069:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6054:3:21"},"nodeType":"YulFunctionCall","src":"6054:18:21"},{"hexValue":"416c726561647920656e646564","kind":"string","nodeType":"YulLiteral","src":"6074:15:21","type":"","value":"Already ended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6047:6:21"},"nodeType":"YulFunctionCall","src":"6047:43:21"},"nodeType":"YulExpressionStatement","src":"6047:43:21"},{"nodeType":"YulAssignment","src":"6099:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6111:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6122:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6107:3:21"},"nodeType":"YulFunctionCall","src":"6107:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6099:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_03a0ef2274e5fa9c92bd6c8904f1025dd04b34d1da74eba1106c91ebdbd13a59__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5945:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5959:4:21","type":""}],"src":"5794:337:21"},{"body":{"nodeType":"YulBlock","src":"6310:167:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6327:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6338:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6320:6:21"},"nodeType":"YulFunctionCall","src":"6320:21:21"},"nodeType":"YulExpressionStatement","src":"6320:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6361:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6372:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6357:3:21"},"nodeType":"YulFunctionCall","src":"6357:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6377:2:21","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6350:6:21"},"nodeType":"YulFunctionCall","src":"6350:30:21"},"nodeType":"YulExpressionStatement","src":"6350:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6400:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6411:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6396:3:21"},"nodeType":"YulFunctionCall","src":"6396:18:21"},{"hexValue":"50726f6a65637420636f6d706c65746564","kind":"string","nodeType":"YulLiteral","src":"6416:19:21","type":"","value":"Project completed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6389:6:21"},"nodeType":"YulFunctionCall","src":"6389:47:21"},"nodeType":"YulExpressionStatement","src":"6389:47:21"},{"nodeType":"YulAssignment","src":"6445:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6457:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6468:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6453:3:21"},"nodeType":"YulFunctionCall","src":"6453:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6445:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_bff8fba7e8290554d856a3fb22093bf87bdf5e84742e561d9c5dea6562588f74__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6287:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6301:4:21","type":""}],"src":"6136:341:21"},{"body":{"nodeType":"YulBlock","src":"6656:164:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6673:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6684:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6666:6:21"},"nodeType":"YulFunctionCall","src":"6666:21:21"},"nodeType":"YulExpressionStatement","src":"6666:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6707:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6718:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6703:3:21"},"nodeType":"YulFunctionCall","src":"6703:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6723:2:21","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6696:6:21"},"nodeType":"YulFunctionCall","src":"6696:30:21"},"nodeType":"YulExpressionStatement","src":"6696:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6746:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6757:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6742:3:21"},"nodeType":"YulFunctionCall","src":"6742:18:21"},{"hexValue":"6d696e20302e3031206574686572","kind":"string","nodeType":"YulLiteral","src":"6762:16:21","type":"","value":"min 0.01 ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6735:6:21"},"nodeType":"YulFunctionCall","src":"6735:44:21"},"nodeType":"YulExpressionStatement","src":"6735:44:21"},{"nodeType":"YulAssignment","src":"6788:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6800:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6811:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6796:3:21"},"nodeType":"YulFunctionCall","src":"6796:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6788:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cf1cbb480479ea4d7c3f4f3b5a2d1e356ab6d98c8dec1739a2a160b41897be8e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6633:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6647:4:21","type":""}],"src":"6482:338:21"},{"body":{"nodeType":"YulBlock","src":"6857:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6874:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6881:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6886:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6877:3:21"},"nodeType":"YulFunctionCall","src":"6877:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6867:6:21"},"nodeType":"YulFunctionCall","src":"6867:31:21"},"nodeType":"YulExpressionStatement","src":"6867:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6914:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6917:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6907:6:21"},"nodeType":"YulFunctionCall","src":"6907:15:21"},"nodeType":"YulExpressionStatement","src":"6907:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6938:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6941:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6931:6:21"},"nodeType":"YulFunctionCall","src":"6931:15:21"},"nodeType":"YulExpressionStatement","src":"6931:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6825:127:21"},{"body":{"nodeType":"YulBlock","src":"7005:77:21","statements":[{"nodeType":"YulAssignment","src":"7015:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7026:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"7029:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7022:3:21"},"nodeType":"YulFunctionCall","src":"7022:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7015:3:21"}]},{"body":{"nodeType":"YulBlock","src":"7054:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7056:16:21"},"nodeType":"YulFunctionCall","src":"7056:18:21"},"nodeType":"YulExpressionStatement","src":"7056:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7046:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"7049:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7043:2:21"},"nodeType":"YulFunctionCall","src":"7043:10:21"},"nodeType":"YulIf","src":"7040:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6988:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"6991:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6997:3:21","type":""}],"src":"6957:125:21"},{"body":{"nodeType":"YulBlock","src":"7216:119:21","statements":[{"nodeType":"YulAssignment","src":"7226:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7238:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7249:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7234:3:21"},"nodeType":"YulFunctionCall","src":"7234:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7226:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7268:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"7279:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7261:6:21"},"nodeType":"YulFunctionCall","src":"7261:25:21"},"nodeType":"YulExpressionStatement","src":"7261:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7306:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7317:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7302:3:21"},"nodeType":"YulFunctionCall","src":"7302:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"7322:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7295:6:21"},"nodeType":"YulFunctionCall","src":"7295:34:21"},"nodeType":"YulExpressionStatement","src":"7295:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7177:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7188:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7196:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7207:4:21","type":""}],"src":"7087:248:21"},{"body":{"nodeType":"YulBlock","src":"7514:173:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7531:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7542:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7524:6:21"},"nodeType":"YulFunctionCall","src":"7524:21:21"},"nodeType":"YulExpressionStatement","src":"7524:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7565:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7576:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7561:3:21"},"nodeType":"YulFunctionCall","src":"7561:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7581:2:21","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7554:6:21"},"nodeType":"YulFunctionCall","src":"7554:30:21"},"nodeType":"YulExpressionStatement","src":"7554:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7604:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7615:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7600:3:21"},"nodeType":"YulFunctionCall","src":"7600:18:21"},{"hexValue":"50726f6a65637420616c72656164792073746172746564","kind":"string","nodeType":"YulLiteral","src":"7620:25:21","type":"","value":"Project already started"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7593:6:21"},"nodeType":"YulFunctionCall","src":"7593:53:21"},"nodeType":"YulExpressionStatement","src":"7593:53:21"},{"nodeType":"YulAssignment","src":"7655:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7667:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7678:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7663:3:21"},"nodeType":"YulFunctionCall","src":"7663:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7655:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b66f79849fb2a1aeae618e045c8144ee98af31f7d75c8241357798f6fb27a16b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7491:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7505:4:21","type":""}],"src":"7340:347:21"},{"body":{"nodeType":"YulBlock","src":"7866:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7883:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7894:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7876:6:21"},"nodeType":"YulFunctionCall","src":"7876:21:21"},"nodeType":"YulExpressionStatement","src":"7876:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7917:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7928:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7913:3:21"},"nodeType":"YulFunctionCall","src":"7913:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7933:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7906:6:21"},"nodeType":"YulFunctionCall","src":"7906:30:21"},"nodeType":"YulExpressionStatement","src":"7906:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7956:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7967:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7952:3:21"},"nodeType":"YulFunctionCall","src":"7952:18:21"},{"hexValue":"4e6f20636f6d6d69746d656e74","kind":"string","nodeType":"YulLiteral","src":"7972:15:21","type":"","value":"No commitment"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7945:6:21"},"nodeType":"YulFunctionCall","src":"7945:43:21"},"nodeType":"YulExpressionStatement","src":"7945:43:21"},{"nodeType":"YulAssignment","src":"7997:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8009:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8020:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8005:3:21"},"nodeType":"YulFunctionCall","src":"8005:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7997:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a3a9eb15a1903ce0ba5279cfeb2e00d127b5a6f2993d14812bc6864e4dd646bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7843:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7857:4:21","type":""}],"src":"7692:337:21"},{"body":{"nodeType":"YulBlock","src":"8083:79:21","statements":[{"nodeType":"YulAssignment","src":"8093:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8105:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"8108:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8101:3:21"},"nodeType":"YulFunctionCall","src":"8101:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8093:4:21"}]},{"body":{"nodeType":"YulBlock","src":"8134:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8136:16:21"},"nodeType":"YulFunctionCall","src":"8136:18:21"},"nodeType":"YulExpressionStatement","src":"8136:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8125:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"8131:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8122:2:21"},"nodeType":"YulFunctionCall","src":"8122:11:21"},"nodeType":"YulIf","src":"8119:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8065:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"8068:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8074:4:21","type":""}],"src":"8034:128:21"},{"body":{"nodeType":"YulBlock","src":"8358:14:21","statements":[{"nodeType":"YulAssignment","src":"8360:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"8367:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8360:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8342:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8350:3:21","type":""}],"src":"8167:205:21"},{"body":{"nodeType":"YulBlock","src":"8551:165:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8568:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8579:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8561:6:21"},"nodeType":"YulFunctionCall","src":"8561:21:21"},"nodeType":"YulExpressionStatement","src":"8561:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8602:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8613:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8598:3:21"},"nodeType":"YulFunctionCall","src":"8598:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8618:2:21","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8591:6:21"},"nodeType":"YulFunctionCall","src":"8591:30:21"},"nodeType":"YulExpressionStatement","src":"8591:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8641:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8652:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8637:3:21"},"nodeType":"YulFunctionCall","src":"8637:18:21"},{"hexValue":"7769746864726177206661696c6564","kind":"string","nodeType":"YulLiteral","src":"8657:17:21","type":"","value":"withdraw failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8630:6:21"},"nodeType":"YulFunctionCall","src":"8630:45:21"},"nodeType":"YulExpressionStatement","src":"8630:45:21"},{"nodeType":"YulAssignment","src":"8684:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8696:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8707:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8692:3:21"},"nodeType":"YulFunctionCall","src":"8692:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8684:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8528:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8542:4:21","type":""}],"src":"8377:339:21"},{"body":{"nodeType":"YulBlock","src":"8895:160:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8912:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8923:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8905:6:21"},"nodeType":"YulFunctionCall","src":"8905:21:21"},"nodeType":"YulExpressionStatement","src":"8905:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8946:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8957:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8942:3:21"},"nodeType":"YulFunctionCall","src":"8942:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8962:2:21","type":"","value":"10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8935:6:21"},"nodeType":"YulFunctionCall","src":"8935:30:21"},"nodeType":"YulExpressionStatement","src":"8935:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8985:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8996:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8981:3:21"},"nodeType":"YulFunctionCall","src":"8981:18:21"},{"hexValue":"4e6f7420617574686f72","kind":"string","nodeType":"YulLiteral","src":"9001:12:21","type":"","value":"Not author"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8974:6:21"},"nodeType":"YulFunctionCall","src":"8974:40:21"},"nodeType":"YulExpressionStatement","src":"8974:40:21"},{"nodeType":"YulAssignment","src":"9023:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9035:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9046:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9031:3:21"},"nodeType":"YulFunctionCall","src":"9031:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9023:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6ccad79e7aa285c9f3f2db83e30790c7046ceac0d7d86d7990286517708fb5ee__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8872:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8886:4:21","type":""}],"src":"8721:334:21"},{"body":{"nodeType":"YulBlock","src":"9234:160:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9251:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9262:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9244:6:21"},"nodeType":"YulFunctionCall","src":"9244:21:21"},"nodeType":"YulExpressionStatement","src":"9244:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9285:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9296:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9281:3:21"},"nodeType":"YulFunctionCall","src":"9281:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9301:2:21","type":"","value":"10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9274:6:21"},"nodeType":"YulFunctionCall","src":"9274:30:21"},"nodeType":"YulExpressionStatement","src":"9274:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9324:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9335:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9320:3:21"},"nodeType":"YulFunctionCall","src":"9320:18:21"},{"hexValue":"6e6f7420636c6f736564","kind":"string","nodeType":"YulLiteral","src":"9340:12:21","type":"","value":"not closed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9313:6:21"},"nodeType":"YulFunctionCall","src":"9313:40:21"},"nodeType":"YulExpressionStatement","src":"9313:40:21"},{"nodeType":"YulAssignment","src":"9362:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9374:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9385:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9370:3:21"},"nodeType":"YulFunctionCall","src":"9370:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9362:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4762d97070854ffa537667d2f87773fc610015ed3ee39aef0aef6647d23f7004__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9211:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9225:4:21","type":""}],"src":"9060:334:21"},{"body":{"nodeType":"YulBlock","src":"9708:490:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9725:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9736:3:21","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9718:6:21"},"nodeType":"YulFunctionCall","src":"9718:22:21"},"nodeType":"YulExpressionStatement","src":"9718:22:21"},{"nodeType":"YulVariableDeclaration","src":"9749:60:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9781:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9793:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9804:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9789:3:21"},"nodeType":"YulFunctionCall","src":"9789:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9763:17:21"},"nodeType":"YulFunctionCall","src":"9763:46:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"9753:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9829:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9840:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9825:3:21"},"nodeType":"YulFunctionCall","src":"9825:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"9849:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9857:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9845:3:21"},"nodeType":"YulFunctionCall","src":"9845:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9818:6:21"},"nodeType":"YulFunctionCall","src":"9818:50:21"},"nodeType":"YulExpressionStatement","src":"9818:50:21"},{"nodeType":"YulAssignment","src":"9877:41:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9903:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"9911:6:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9885:17:21"},"nodeType":"YulFunctionCall","src":"9885:33:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9877:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"9927:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9945:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9950:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9941:3:21"},"nodeType":"YulFunctionCall","src":"9941:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"9954:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9937:3:21"},"nodeType":"YulFunctionCall","src":"9937:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9931:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9976:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9987:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9972:3:21"},"nodeType":"YulFunctionCall","src":"9972:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9996:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10004:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9992:3:21"},"nodeType":"YulFunctionCall","src":"9992:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9965:6:21"},"nodeType":"YulFunctionCall","src":"9965:43:21"},"nodeType":"YulExpressionStatement","src":"9965:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10028:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10039:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10024:3:21"},"nodeType":"YulFunctionCall","src":"10024:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"10044:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10017:6:21"},"nodeType":"YulFunctionCall","src":"10017:34:21"},"nodeType":"YulExpressionStatement","src":"10017:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10071:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10082:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10067:3:21"},"nodeType":"YulFunctionCall","src":"10067:19:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10092:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10100:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10088:3:21"},"nodeType":"YulFunctionCall","src":"10088:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10060:6:21"},"nodeType":"YulFunctionCall","src":"10060:44:21"},"nodeType":"YulExpressionStatement","src":"10060:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10124:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10135:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10120:3:21"},"nodeType":"YulFunctionCall","src":"10120:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"10141:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10113:6:21"},"nodeType":"YulFunctionCall","src":"10113:35:21"},"nodeType":"YulExpressionStatement","src":"10113:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10168:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10179:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10164:3:21"},"nodeType":"YulFunctionCall","src":"10164:19:21"},{"name":"value6","nodeType":"YulIdentifier","src":"10185:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10157:6:21"},"nodeType":"YulFunctionCall","src":"10157:35:21"},"nodeType":"YulExpressionStatement","src":"10157:35:21"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9629:9:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"9640:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9648:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9656:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9664:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9672:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9680:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9688:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9699:4:21","type":""}],"src":"9399:799:21"},{"body":{"nodeType":"YulBlock","src":"10284:170:21","statements":[{"body":{"nodeType":"YulBlock","src":"10330:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10339:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10342:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10332:6:21"},"nodeType":"YulFunctionCall","src":"10332:12:21"},"nodeType":"YulExpressionStatement","src":"10332:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10305:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10314:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10301:3:21"},"nodeType":"YulFunctionCall","src":"10301:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10326:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10297:3:21"},"nodeType":"YulFunctionCall","src":"10297:32:21"},"nodeType":"YulIf","src":"10294:52:21"},{"nodeType":"YulVariableDeclaration","src":"10355:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10374:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10368:5:21"},"nodeType":"YulFunctionCall","src":"10368:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10359:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10418:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10393:24:21"},"nodeType":"YulFunctionCall","src":"10393:31:21"},"nodeType":"YulExpressionStatement","src":"10393:31:21"},{"nodeType":"YulAssignment","src":"10433:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"10443:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10433:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10250:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10261:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10273:6:21","type":""}],"src":"10203:251:21"},{"body":{"nodeType":"YulBlock","src":"10588:175:21","statements":[{"nodeType":"YulAssignment","src":"10598:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10610:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10621:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10606:3:21"},"nodeType":"YulFunctionCall","src":"10606:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10598:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"10633:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10651:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10656:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10647:3:21"},"nodeType":"YulFunctionCall","src":"10647:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"10660:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10643:3:21"},"nodeType":"YulFunctionCall","src":"10643:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10637:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10678:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10693:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10701:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10689:3:21"},"nodeType":"YulFunctionCall","src":"10689:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10671:6:21"},"nodeType":"YulFunctionCall","src":"10671:34:21"},"nodeType":"YulExpressionStatement","src":"10671:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10725:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10736:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10721:3:21"},"nodeType":"YulFunctionCall","src":"10721:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10745:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10753:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10741:3:21"},"nodeType":"YulFunctionCall","src":"10741:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10714:6:21"},"nodeType":"YulFunctionCall","src":"10714:43:21"},"nodeType":"YulExpressionStatement","src":"10714:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10549:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10560:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10568:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10579:4:21","type":""}],"src":"10459:304:21"},{"body":{"nodeType":"YulBlock","src":"10866:214:21","statements":[{"body":{"nodeType":"YulBlock","src":"10912:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10921:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10924:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10914:6:21"},"nodeType":"YulFunctionCall","src":"10914:12:21"},"nodeType":"YulExpressionStatement","src":"10914:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10887:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10896:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10883:3:21"},"nodeType":"YulFunctionCall","src":"10883:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10908:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10879:3:21"},"nodeType":"YulFunctionCall","src":"10879:32:21"},"nodeType":"YulIf","src":"10876:52:21"},{"nodeType":"YulVariableDeclaration","src":"10937:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10956:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10950:5:21"},"nodeType":"YulFunctionCall","src":"10950:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10941:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11000:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10975:24:21"},"nodeType":"YulFunctionCall","src":"10975:31:21"},"nodeType":"YulExpressionStatement","src":"10975:31:21"},{"nodeType":"YulAssignment","src":"11015:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"11025:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11015:6:21"}]},{"nodeType":"YulAssignment","src":"11039:35:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11059:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11070:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11055:3:21"},"nodeType":"YulFunctionCall","src":"11055:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11049:5:21"},"nodeType":"YulFunctionCall","src":"11049:25:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11039:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10824:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10835:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10847:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10855:6:21","type":""}],"src":"10768:312:21"},{"body":{"nodeType":"YulBlock","src":"11131:171:21","statements":[{"body":{"nodeType":"YulBlock","src":"11162:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11183:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11190:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11195:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11186:3:21"},"nodeType":"YulFunctionCall","src":"11186:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11176:6:21"},"nodeType":"YulFunctionCall","src":"11176:31:21"},"nodeType":"YulExpressionStatement","src":"11176:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11227:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11230:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11220:6:21"},"nodeType":"YulFunctionCall","src":"11220:15:21"},"nodeType":"YulExpressionStatement","src":"11220:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11255:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11258:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11248:6:21"},"nodeType":"YulFunctionCall","src":"11248:15:21"},"nodeType":"YulExpressionStatement","src":"11248:15:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11151:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11144:6:21"},"nodeType":"YulFunctionCall","src":"11144:9:21"},"nodeType":"YulIf","src":"11141:132:21"},{"nodeType":"YulAssignment","src":"11282:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11291:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11294:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11287:3:21"},"nodeType":"YulFunctionCall","src":"11287:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11282:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11116:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11119:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"11125:1:21","type":""}],"src":"11085:217:21"},{"body":{"nodeType":"YulBlock","src":"11359:116:21","statements":[{"nodeType":"YulAssignment","src":"11369:20:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11384:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11387:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11380:3:21"},"nodeType":"YulFunctionCall","src":"11380:9:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11369:7:21"}]},{"body":{"nodeType":"YulBlock","src":"11447:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11449:16:21"},"nodeType":"YulFunctionCall","src":"11449:18:21"},"nodeType":"YulExpressionStatement","src":"11449:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11418:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11411:6:21"},"nodeType":"YulFunctionCall","src":"11411:9:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11425:1:21"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"11432:7:21"},{"name":"x","nodeType":"YulIdentifier","src":"11441:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11428:3:21"},"nodeType":"YulFunctionCall","src":"11428:15:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11422:2:21"},"nodeType":"YulFunctionCall","src":"11422:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11408:2:21"},"nodeType":"YulFunctionCall","src":"11408:37:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11401:6:21"},"nodeType":"YulFunctionCall","src":"11401:45:21"},"nodeType":"YulIf","src":"11398:71:21"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11338:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11341:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11347:7:21","type":""}],"src":"11307:168:21"},{"body":{"nodeType":"YulBlock","src":"11594:170:21","statements":[{"body":{"nodeType":"YulBlock","src":"11640:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11649:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11652:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11642:6:21"},"nodeType":"YulFunctionCall","src":"11642:12:21"},"nodeType":"YulExpressionStatement","src":"11642:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11615:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11624:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11611:3:21"},"nodeType":"YulFunctionCall","src":"11611:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11636:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11607:3:21"},"nodeType":"YulFunctionCall","src":"11607:32:21"},"nodeType":"YulIf","src":"11604:52:21"},{"nodeType":"YulVariableDeclaration","src":"11665:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11684:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11678:5:21"},"nodeType":"YulFunctionCall","src":"11678:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11669:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11728:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"11703:24:21"},"nodeType":"YulFunctionCall","src":"11703:31:21"},"nodeType":"YulExpressionStatement","src":"11703:31:21"},{"nodeType":"YulAssignment","src":"11743:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"11753:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11743:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20MetadataUpgradeable_$883_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11560:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11571:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11583:6:21","type":""}],"src":"11480:284:21"},{"body":{"nodeType":"YulBlock","src":"11898:145:21","statements":[{"nodeType":"YulAssignment","src":"11908:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11920:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11931:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11916:3:21"},"nodeType":"YulFunctionCall","src":"11916:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11908:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11950:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11965:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11981:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11986:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11977:3:21"},"nodeType":"YulFunctionCall","src":"11977:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"11990:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11973:3:21"},"nodeType":"YulFunctionCall","src":"11973:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11961:3:21"},"nodeType":"YulFunctionCall","src":"11961:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11943:6:21"},"nodeType":"YulFunctionCall","src":"11943:51:21"},"nodeType":"YulExpressionStatement","src":"11943:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12014:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12025:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12010:3:21"},"nodeType":"YulFunctionCall","src":"12010:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"12030:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12003:6:21"},"nodeType":"YulFunctionCall","src":"12003:34:21"},"nodeType":"YulExpressionStatement","src":"12003:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11859:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11870:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11878:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11889:4:21","type":""}],"src":"11769:274:21"},{"body":{"nodeType":"YulBlock","src":"12126:199:21","statements":[{"body":{"nodeType":"YulBlock","src":"12172:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12181:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12184:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12174:6:21"},"nodeType":"YulFunctionCall","src":"12174:12:21"},"nodeType":"YulExpressionStatement","src":"12174:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12147:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12156:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12143:3:21"},"nodeType":"YulFunctionCall","src":"12143:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"12168:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12139:3:21"},"nodeType":"YulFunctionCall","src":"12139:32:21"},"nodeType":"YulIf","src":"12136:52:21"},{"nodeType":"YulVariableDeclaration","src":"12197:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12216:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12210:5:21"},"nodeType":"YulFunctionCall","src":"12210:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12201:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12279:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12288:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12291:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12281:6:21"},"nodeType":"YulFunctionCall","src":"12281:12:21"},"nodeType":"YulExpressionStatement","src":"12281:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12248:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12269:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12262:6:21"},"nodeType":"YulFunctionCall","src":"12262:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12255:6:21"},"nodeType":"YulFunctionCall","src":"12255:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12245:2:21"},"nodeType":"YulFunctionCall","src":"12245:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12238:6:21"},"nodeType":"YulFunctionCall","src":"12238:40:21"},"nodeType":"YulIf","src":"12235:60:21"},{"nodeType":"YulAssignment","src":"12304:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"12314:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12304:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12092:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12103:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12115:6:21","type":""}],"src":"12048:277:21"},{"body":{"nodeType":"YulBlock","src":"12504:168:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12521:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12532:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12514:6:21"},"nodeType":"YulFunctionCall","src":"12514:21:21"},"nodeType":"YulExpressionStatement","src":"12514:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12555:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12566:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12551:3:21"},"nodeType":"YulFunctionCall","src":"12551:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12571:2:21","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12544:6:21"},"nodeType":"YulFunctionCall","src":"12544:30:21"},"nodeType":"YulExpressionStatement","src":"12544:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12594:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12605:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12590:3:21"},"nodeType":"YulFunctionCall","src":"12590:18:21"},{"hexValue":"496e76616c69642073746172742074696d65","kind":"string","nodeType":"YulLiteral","src":"12610:20:21","type":"","value":"Invalid start time"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12583:6:21"},"nodeType":"YulFunctionCall","src":"12583:48:21"},"nodeType":"YulExpressionStatement","src":"12583:48:21"},{"nodeType":"YulAssignment","src":"12640:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12652:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12663:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12648:3:21"},"nodeType":"YulFunctionCall","src":"12648:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12640:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a3b6d4b23ae4bbd8dffd90f5160a835673157044abc6160caab696199469b553__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12481:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12495:4:21","type":""}],"src":"12330:342:21"},{"body":{"nodeType":"YulBlock","src":"12851:166:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12879:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12861:6:21"},"nodeType":"YulFunctionCall","src":"12861:21:21"},"nodeType":"YulExpressionStatement","src":"12861:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12902:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12913:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12898:3:21"},"nodeType":"YulFunctionCall","src":"12898:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12918:2:21","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12891:6:21"},"nodeType":"YulFunctionCall","src":"12891:30:21"},"nodeType":"YulExpressionStatement","src":"12891:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12941:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12952:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12937:3:21"},"nodeType":"YulFunctionCall","src":"12937:18:21"},{"hexValue":"496e76616c696420656e642074696d65","kind":"string","nodeType":"YulLiteral","src":"12957:18:21","type":"","value":"Invalid end time"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12930:6:21"},"nodeType":"YulFunctionCall","src":"12930:46:21"},"nodeType":"YulExpressionStatement","src":"12930:46:21"},{"nodeType":"YulAssignment","src":"12985:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12997:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13008:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12993:3:21"},"nodeType":"YulFunctionCall","src":"12993:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12985:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f79adeb066186ecb6bfb5c8311500863e681b7aa46040b41ed874ebc28bd54f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12828:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12842:4:21","type":""}],"src":"12677:340:21"},{"body":{"nodeType":"YulBlock","src":"13196:175:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13213:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13224:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13206:6:21"},"nodeType":"YulFunctionCall","src":"13206:21:21"},"nodeType":"YulExpressionStatement","src":"13206:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13247:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13258:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13243:3:21"},"nodeType":"YulFunctionCall","src":"13243:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"13263:2:21","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13236:6:21"},"nodeType":"YulFunctionCall","src":"13236:30:21"},"nodeType":"YulExpressionStatement","src":"13236:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13286:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13297:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13282:3:21"},"nodeType":"YulFunctionCall","src":"13282:18:21"},{"hexValue":"4d6178696d756d206475726174696f6e206578636565646564","kind":"string","nodeType":"YulLiteral","src":"13302:27:21","type":"","value":"Maximum duration exceeded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13275:6:21"},"nodeType":"YulFunctionCall","src":"13275:55:21"},"nodeType":"YulExpressionStatement","src":"13275:55:21"},{"nodeType":"YulAssignment","src":"13339:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13351:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13362:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13347:3:21"},"nodeType":"YulFunctionCall","src":"13347:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13339:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_268b2b3ef04afe4685fdbcff6cb683aa408f3edfff411f4ac3bbfee177e0bffa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13173:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13187:4:21","type":""}],"src":"13022:349:21"},{"body":{"nodeType":"YulBlock","src":"13423:88:21","statements":[{"body":{"nodeType":"YulBlock","src":"13454:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13456:16:21"},"nodeType":"YulFunctionCall","src":"13456:18:21"},"nodeType":"YulExpressionStatement","src":"13456:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13439:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13450:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13446:3:21"},"nodeType":"YulFunctionCall","src":"13446:6:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13436:2:21"},"nodeType":"YulFunctionCall","src":"13436:17:21"},"nodeType":"YulIf","src":"13433:43:21"},{"nodeType":"YulAssignment","src":"13485:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13496:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13503:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13492:3:21"},"nodeType":"YulFunctionCall","src":"13492:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13485:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13405:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13415:3:21","type":""}],"src":"13376:135:21"},{"body":{"nodeType":"YulBlock","src":"13548:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13565:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13572:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13577:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13568:3:21"},"nodeType":"YulFunctionCall","src":"13568:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13558:6:21"},"nodeType":"YulFunctionCall","src":"13558:31:21"},"nodeType":"YulExpressionStatement","src":"13558:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13605:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13608:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13598:6:21"},"nodeType":"YulFunctionCall","src":"13598:15:21"},"nodeType":"YulExpressionStatement","src":"13598:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13629:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13632:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13622:6:21"},"nodeType":"YulFunctionCall","src":"13622:15:21"},"nodeType":"YulExpressionStatement","src":"13622:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"13516:127:21"},{"body":{"nodeType":"YulBlock","src":"13704:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13721:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"13724:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13714:6:21"},"nodeType":"YulFunctionCall","src":"13714:14:21"},"nodeType":"YulExpressionStatement","src":"13714:14:21"},{"nodeType":"YulAssignment","src":"13737:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13755:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13758:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13745:9:21"},"nodeType":"YulFunctionCall","src":"13745:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13737:4:21"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13687:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13695:4:21","type":""}],"src":"13648:121:21"},{"body":{"nodeType":"YulBlock","src":"13855:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"13888:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13902:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13912:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13906:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13933:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"13937:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13926:6:21"},"nodeType":"YulFunctionCall","src":"13926:17:21"},"nodeType":"YulExpressionStatement","src":"13926:17:21"},{"nodeType":"YulVariableDeclaration","src":"13956:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13978:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"13982:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13968:9:21"},"nodeType":"YulFunctionCall","src":"13968:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13960:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14000:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14023:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14033:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"14040:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"14052:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14036:3:21"},"nodeType":"YulFunctionCall","src":"14036:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14029:3:21"},"nodeType":"YulFunctionCall","src":"14029:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14019:3:21"},"nodeType":"YulFunctionCall","src":"14019:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"14004:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14094:23:21","statements":[{"nodeType":"YulAssignment","src":"14096:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"14111:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"14096:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"14076:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"14088:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14073:2:21"},"nodeType":"YulFunctionCall","src":"14073:20:21"},"nodeType":"YulIf","src":"14070:47:21"},{"nodeType":"YulVariableDeclaration","src":"14130:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14144:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14154:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"14161:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14166:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14157:3:21"},"nodeType":"YulFunctionCall","src":"14157:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14150:3:21"},"nodeType":"YulFunctionCall","src":"14150:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14140:3:21"},"nodeType":"YulFunctionCall","src":"14140:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"14134:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14184:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"14197:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"14188:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14282:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14291:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"14298:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14284:6:21"},"nodeType":"YulFunctionCall","src":"14284:17:21"},"nodeType":"YulExpressionStatement","src":"14284:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14232:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"14239:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14229:2:21"},"nodeType":"YulFunctionCall","src":"14229:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14243:26:21","statements":[{"nodeType":"YulAssignment","src":"14245:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14258:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"14265:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14254:3:21"},"nodeType":"YulFunctionCall","src":"14254:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"14245:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"14225:3:21","statements":[]},"src":"14221:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13871:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13876:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13868:2:21"},"nodeType":"YulFunctionCall","src":"13868:11:21"},"nodeType":"YulIf","src":"13865:448:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"13827:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"13834:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"13839:10:21","type":""}],"src":"13774:545:21"},{"body":{"nodeType":"YulBlock","src":"14409:81:21","statements":[{"nodeType":"YulAssignment","src":"14419:65:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14434:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14452:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"14455:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14448:3:21"},"nodeType":"YulFunctionCall","src":"14448:11:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14465:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14461:3:21"},"nodeType":"YulFunctionCall","src":"14461:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14444:3:21"},"nodeType":"YulFunctionCall","src":"14444:24:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14440:3:21"},"nodeType":"YulFunctionCall","src":"14440:29:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14430:3:21"},"nodeType":"YulFunctionCall","src":"14430:40:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14476:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"14479:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14472:3:21"},"nodeType":"YulFunctionCall","src":"14472:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14427:2:21"},"nodeType":"YulFunctionCall","src":"14427:57:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"14419:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14386:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"14392:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"14400:4:21","type":""}],"src":"14324:166:21"},{"body":{"nodeType":"YulBlock","src":"14591:1256:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14601:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14621:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14615:5:21"},"nodeType":"YulFunctionCall","src":"14615:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"14605:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14668:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14670:16:21"},"nodeType":"YulFunctionCall","src":"14670:18:21"},"nodeType":"YulExpressionStatement","src":"14670:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14640:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14648:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14637:2:21"},"nodeType":"YulFunctionCall","src":"14637:30:21"},"nodeType":"YulIf","src":"14634:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14743:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14781:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14775:5:21"},"nodeType":"YulFunctionCall","src":"14775:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14749:25:21"},"nodeType":"YulFunctionCall","src":"14749:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"14789:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"14699:43:21"},"nodeType":"YulFunctionCall","src":"14699:97:21"},"nodeType":"YulExpressionStatement","src":"14699:97:21"},{"nodeType":"YulVariableDeclaration","src":"14805:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14822:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"14809:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14832:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14851:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"14836:11:21","type":""}]},{"nodeType":"YulAssignment","src":"14864:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"14877:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14864:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14934:656:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14948:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14967:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14979:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14975:3:21"},"nodeType":"YulFunctionCall","src":"14975:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14963:3:21"},"nodeType":"YulFunctionCall","src":"14963:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"14952:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14996:49:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15040:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"15010:29:21"},"nodeType":"YulFunctionCall","src":"15010:35:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"15000:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15058:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"15067:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15062:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15145:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15170:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15188:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15193:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15184:3:21"},"nodeType":"YulFunctionCall","src":"15184:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15178:5:21"},"nodeType":"YulFunctionCall","src":"15178:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15163:6:21"},"nodeType":"YulFunctionCall","src":"15163:42:21"},"nodeType":"YulExpressionStatement","src":"15163:42:21"},{"nodeType":"YulAssignment","src":"15222:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15236:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15244:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15232:3:21"},"nodeType":"YulFunctionCall","src":"15232:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15222:6:21"}]},{"nodeType":"YulAssignment","src":"15263:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15280:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"15291:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15276:3:21"},"nodeType":"YulFunctionCall","src":"15276:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15263:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15092:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"15095:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15089:2:21"},"nodeType":"YulFunctionCall","src":"15089:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15104:28:21","statements":[{"nodeType":"YulAssignment","src":"15106:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15115:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"15118:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15111:3:21"},"nodeType":"YulFunctionCall","src":"15111:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15106:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"15085:3:21","statements":[]},"src":"15081:236:21"},{"body":{"nodeType":"YulBlock","src":"15365:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15383:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15410:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15415:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15406:3:21"},"nodeType":"YulFunctionCall","src":"15406:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15400:5:21"},"nodeType":"YulFunctionCall","src":"15400:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"15387:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15450:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"15462:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15489:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"15492:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15485:3:21"},"nodeType":"YulFunctionCall","src":"15485:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"15501:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15481:3:21"},"nodeType":"YulFunctionCall","src":"15481:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15511:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15507:3:21"},"nodeType":"YulFunctionCall","src":"15507:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15477:3:21"},"nodeType":"YulFunctionCall","src":"15477:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15473:3:21"},"nodeType":"YulFunctionCall","src":"15473:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15458:3:21"},"nodeType":"YulFunctionCall","src":"15458:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15443:6:21"},"nodeType":"YulFunctionCall","src":"15443:74:21"},"nodeType":"YulExpressionStatement","src":"15443:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"15336:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"15345:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15333:2:21"},"nodeType":"YulFunctionCall","src":"15333:19:21"},"nodeType":"YulIf","src":"15330:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15551:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15565:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"15568:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15561:3:21"},"nodeType":"YulFunctionCall","src":"15561:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"15577:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15557:3:21"},"nodeType":"YulFunctionCall","src":"15557:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15544:6:21"},"nodeType":"YulFunctionCall","src":"15544:36:21"},"nodeType":"YulExpressionStatement","src":"15544:36:21"}]},"nodeType":"YulCase","src":"14927:663:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14932:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"15607:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15621:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"15634:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15625:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15670:67:21","statements":[{"nodeType":"YulAssignment","src":"15688:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15707:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15712:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15703:3:21"},"nodeType":"YulFunctionCall","src":"15703:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15697:5:21"},"nodeType":"YulFunctionCall","src":"15697:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15688:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"15651:6:21"},"nodeType":"YulIf","src":"15648:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15757:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15816:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"15823:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"15763:52:21"},"nodeType":"YulFunctionCall","src":"15763:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15750:6:21"},"nodeType":"YulFunctionCall","src":"15750:81:21"},"nodeType":"YulExpressionStatement","src":"15750:81:21"}]},"nodeType":"YulCase","src":"15599:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14907:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14915:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14904:2:21"},"nodeType":"YulFunctionCall","src":"14904:14:21"},"nodeType":"YulSwitch","src":"14897:944:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"14576:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"14582:3:21","type":""}],"src":"14495:1352:21"},{"body":{"nodeType":"YulBlock","src":"15919:200:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15936:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"15941:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15929:6:21"},"nodeType":"YulFunctionCall","src":"15929:19:21"},"nodeType":"YulExpressionStatement","src":"15929:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15974:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15979:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15970:3:21"},"nodeType":"YulFunctionCall","src":"15970:14:21"},{"name":"start","nodeType":"YulIdentifier","src":"15986:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"15993:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"15957:12:21"},"nodeType":"YulFunctionCall","src":"15957:43:21"},"nodeType":"YulExpressionStatement","src":"15957:43:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16024:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16029:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16020:3:21"},"nodeType":"YulFunctionCall","src":"16020:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"16038:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16016:3:21"},"nodeType":"YulFunctionCall","src":"16016:27:21"},{"kind":"number","nodeType":"YulLiteral","src":"16045:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16009:6:21"},"nodeType":"YulFunctionCall","src":"16009:38:21"},"nodeType":"YulExpressionStatement","src":"16009:38:21"},{"nodeType":"YulAssignment","src":"16056:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16071:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16084:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16092:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16080:3:21"},"nodeType":"YulFunctionCall","src":"16080:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16101:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16097:3:21"},"nodeType":"YulFunctionCall","src":"16097:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16076:3:21"},"nodeType":"YulFunctionCall","src":"16076:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16067:3:21"},"nodeType":"YulFunctionCall","src":"16067:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"16108:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16063:3:21"},"nodeType":"YulFunctionCall","src":"16063:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16056:3:21"}]}]},"name":"abi_encode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"15888:5:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"15895:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15903:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15911:3:21","type":""}],"src":"15852:267:21"},{"body":{"nodeType":"YulBlock","src":"16451:543:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16468:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"16479:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16461:6:21"},"nodeType":"YulFunctionCall","src":"16461:25:21"},"nodeType":"YulExpressionStatement","src":"16461:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16506:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16517:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16502:3:21"},"nodeType":"YulFunctionCall","src":"16502:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"16522:3:21","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16495:6:21"},"nodeType":"YulFunctionCall","src":"16495:31:21"},"nodeType":"YulExpressionStatement","src":"16495:31:21"},{"nodeType":"YulVariableDeclaration","src":"16535:77:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16576:6:21"},{"name":"value2","nodeType":"YulIdentifier","src":"16584:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16596:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16607:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16592:3:21"},"nodeType":"YulFunctionCall","src":"16592:19:21"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"16549:26:21"},"nodeType":"YulFunctionCall","src":"16549:63:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16539:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16632:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16643:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16628:3:21"},"nodeType":"YulFunctionCall","src":"16628:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"16652:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16660:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16648:3:21"},"nodeType":"YulFunctionCall","src":"16648:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16621:6:21"},"nodeType":"YulFunctionCall","src":"16621:50:21"},"nodeType":"YulExpressionStatement","src":"16621:50:21"},{"nodeType":"YulVariableDeclaration","src":"16680:64:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16721:6:21"},{"name":"value4","nodeType":"YulIdentifier","src":"16729:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"16737:6:21"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"16694:26:21"},"nodeType":"YulFunctionCall","src":"16694:50:21"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"16684:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16764:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16775:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16760:3:21"},"nodeType":"YulFunctionCall","src":"16760:18:21"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"16784:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16792:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16780:3:21"},"nodeType":"YulFunctionCall","src":"16780:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16753:6:21"},"nodeType":"YulFunctionCall","src":"16753:50:21"},"nodeType":"YulExpressionStatement","src":"16753:50:21"},{"nodeType":"YulAssignment","src":"16812:58:21","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"16847:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"16855:6:21"},{"name":"tail_2","nodeType":"YulIdentifier","src":"16863:6:21"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"16820:26:21"},"nodeType":"YulFunctionCall","src":"16820:50:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16812:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16890:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16901:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16886:3:21"},"nodeType":"YulFunctionCall","src":"16886:19:21"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"16911:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16919:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16907:3:21"},"nodeType":"YulFunctionCall","src":"16907:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16879:6:21"},"nodeType":"YulFunctionCall","src":"16879:52:21"},"nodeType":"YulExpressionStatement","src":"16879:52:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16951:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16962:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16947:3:21"},"nodeType":"YulFunctionCall","src":"16947:19:21"},{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"16972:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16980:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16968:3:21"},"nodeType":"YulFunctionCall","src":"16968:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16940:6:21"},"nodeType":"YulFunctionCall","src":"16940:48:21"},"nodeType":"YulExpressionStatement","src":"16940:48:21"}]},"name":"abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr_t_string_calldata_ptr_t_uint32_t_uint16__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint32_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16356:9:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"16367:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"16375:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"16383:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"16391:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16399:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16407:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16415:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16423:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16431:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16442:4:21","type":""}],"src":"16124:870:21"},{"body":{"nodeType":"YulBlock","src":"17173:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17190:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17201:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17183:6:21"},"nodeType":"YulFunctionCall","src":"17183:21:21"},"nodeType":"YulExpressionStatement","src":"17183:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17224:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17235:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17220:3:21"},"nodeType":"YulFunctionCall","src":"17220:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"17240:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17213:6:21"},"nodeType":"YulFunctionCall","src":"17213:30:21"},"nodeType":"YulExpressionStatement","src":"17213:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17263:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17274:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17259:3:21"},"nodeType":"YulFunctionCall","src":"17259:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"17279:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17252:6:21"},"nodeType":"YulFunctionCall","src":"17252:62:21"},"nodeType":"YulExpressionStatement","src":"17252:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17334:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17345:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17330:3:21"},"nodeType":"YulFunctionCall","src":"17330:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"17350:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17323:6:21"},"nodeType":"YulFunctionCall","src":"17323:36:21"},"nodeType":"YulExpressionStatement","src":"17323:36:21"},{"nodeType":"YulAssignment","src":"17368:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17380:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17391:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17376:3:21"},"nodeType":"YulFunctionCall","src":"17376:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17368:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17150:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17164:4:21","type":""}],"src":"16999:402:21"},{"body":{"nodeType":"YulBlock","src":"17470:358:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17480:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17495:1:21","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"17484:7:21","type":""}]},{"nodeType":"YulAssignment","src":"17505:16:21","value":{"name":"power_1","nodeType":"YulIdentifier","src":"17514:7:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17505:5:21"}]},{"nodeType":"YulAssignment","src":"17530:13:21","value":{"name":"_base","nodeType":"YulIdentifier","src":"17538:5:21"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"17530:4:21"}]},{"body":{"nodeType":"YulBlock","src":"17594:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"17639:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17641:16:21"},"nodeType":"YulFunctionCall","src":"17641:18:21"},"nodeType":"YulExpressionStatement","src":"17641:18:21"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17614:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17628:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17624:3:21"},"nodeType":"YulFunctionCall","src":"17624:6:21"},{"name":"base","nodeType":"YulIdentifier","src":"17632:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17620:3:21"},"nodeType":"YulFunctionCall","src":"17620:17:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17611:2:21"},"nodeType":"YulFunctionCall","src":"17611:27:21"},"nodeType":"YulIf","src":"17608:53:21"},{"body":{"nodeType":"YulBlock","src":"17700:29:21","statements":[{"nodeType":"YulAssignment","src":"17702:25:21","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"17715:5:21"},{"name":"base","nodeType":"YulIdentifier","src":"17722:4:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17711:3:21"},"nodeType":"YulFunctionCall","src":"17711:16:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17702:5:21"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17681:8:21"},{"name":"power_1","nodeType":"YulIdentifier","src":"17691:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17677:3:21"},"nodeType":"YulFunctionCall","src":"17677:22:21"},"nodeType":"YulIf","src":"17674:55:21"},{"nodeType":"YulAssignment","src":"17742:23:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17754:4:21"},{"name":"base","nodeType":"YulIdentifier","src":"17760:4:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17750:3:21"},"nodeType":"YulFunctionCall","src":"17750:15:21"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"17742:4:21"}]},{"nodeType":"YulAssignment","src":"17778:34:21","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"17794:7:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"17803:8:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17790:3:21"},"nodeType":"YulFunctionCall","src":"17790:22:21"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"17778:8:21"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17563:8:21"},{"name":"power_1","nodeType":"YulIdentifier","src":"17573:7:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17560:2:21"},"nodeType":"YulFunctionCall","src":"17560:21:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17582:3:21","statements":[]},"pre":{"nodeType":"YulBlock","src":"17556:3:21","statements":[]},"src":"17552:270:21"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"17434:5:21","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17441:8:21","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17454:5:21","type":""},{"name":"base","nodeType":"YulTypedName","src":"17461:4:21","type":""}],"src":"17406:422:21"},{"body":{"nodeType":"YulBlock","src":"17892:747:21","statements":[{"body":{"nodeType":"YulBlock","src":"17930:52:21","statements":[{"nodeType":"YulAssignment","src":"17944:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17953:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17944:5:21"}]},{"nodeType":"YulLeave","src":"17967:5:21"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17912:8:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17905:6:21"},"nodeType":"YulFunctionCall","src":"17905:16:21"},"nodeType":"YulIf","src":"17902:80:21"},{"body":{"nodeType":"YulBlock","src":"18015:52:21","statements":[{"nodeType":"YulAssignment","src":"18029:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18038:1:21","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18029:5:21"}]},{"nodeType":"YulLeave","src":"18052:5:21"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18001:4:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17994:6:21"},"nodeType":"YulFunctionCall","src":"17994:12:21"},"nodeType":"YulIf","src":"17991:76:21"},{"cases":[{"body":{"nodeType":"YulBlock","src":"18103:52:21","statements":[{"nodeType":"YulAssignment","src":"18117:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18126:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18117:5:21"}]},{"nodeType":"YulLeave","src":"18140:5:21"}]},"nodeType":"YulCase","src":"18096:59:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18101:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18171:123:21","statements":[{"body":{"nodeType":"YulBlock","src":"18206:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18208:16:21"},"nodeType":"YulFunctionCall","src":"18208:18:21"},"nodeType":"YulExpressionStatement","src":"18208:18:21"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18191:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"18201:3:21","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18188:2:21"},"nodeType":"YulFunctionCall","src":"18188:17:21"},"nodeType":"YulIf","src":"18185:43:21"},{"nodeType":"YulAssignment","src":"18241:25:21","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18254:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"18264:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18250:3:21"},"nodeType":"YulFunctionCall","src":"18250:16:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18241:5:21"}]},{"nodeType":"YulLeave","src":"18279:5:21"}]},"nodeType":"YulCase","src":"18164:130:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18169:1:21","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"18083:4:21"},"nodeType":"YulSwitch","src":"18076:218:21"},{"body":{"nodeType":"YulBlock","src":"18392:70:21","statements":[{"nodeType":"YulAssignment","src":"18406:28:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18419:4:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"18425:8:21"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"18415:3:21"},"nodeType":"YulFunctionCall","src":"18415:19:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18406:5:21"}]},{"nodeType":"YulLeave","src":"18447:5:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18316:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"18322:2:21","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18313:2:21"},"nodeType":"YulFunctionCall","src":"18313:12:21"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18330:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"18340:2:21","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18327:2:21"},"nodeType":"YulFunctionCall","src":"18327:16:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18309:3:21"},"nodeType":"YulFunctionCall","src":"18309:35:21"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18353:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"18359:3:21","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18350:2:21"},"nodeType":"YulFunctionCall","src":"18350:13:21"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18368:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"18378:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18365:2:21"},"nodeType":"YulFunctionCall","src":"18365:16:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18346:3:21"},"nodeType":"YulFunctionCall","src":"18346:36:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18306:2:21"},"nodeType":"YulFunctionCall","src":"18306:77:21"},"nodeType":"YulIf","src":"18303:159:21"},{"nodeType":"YulVariableDeclaration","src":"18471:57:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18513:4:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"18519:8:21"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"18494:18:21"},"nodeType":"YulFunctionCall","src":"18494:34:21"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"18475:7:21","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"18484:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"18573:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18575:16:21"},"nodeType":"YulFunctionCall","src":"18575:18:21"},"nodeType":"YulExpressionStatement","src":"18575:18:21"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"18543:7:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18556:3:21"},"nodeType":"YulFunctionCall","src":"18556:6:21"},{"name":"base_1","nodeType":"YulIdentifier","src":"18564:6:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18552:3:21"},"nodeType":"YulFunctionCall","src":"18552:19:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18540:2:21"},"nodeType":"YulFunctionCall","src":"18540:32:21"},"nodeType":"YulIf","src":"18537:58:21"},{"nodeType":"YulAssignment","src":"18604:29:21","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"18617:7:21"},{"name":"base_1","nodeType":"YulIdentifier","src":"18626:6:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18613:3:21"},"nodeType":"YulFunctionCall","src":"18613:20:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18604:5:21"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"17863:4:21","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17869:8:21","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17882:5:21","type":""}],"src":"17833:806:21"},{"body":{"nodeType":"YulBlock","src":"18714:61:21","statements":[{"nodeType":"YulAssignment","src":"18724:45:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18754:4:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"18760:8:21"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"18733:20:21"},"nodeType":"YulFunctionCall","src":"18733:36:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18724:5:21"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"18685:4:21","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"18691:8:21","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"18704:5:21","type":""}],"src":"18644:131:21"},{"body":{"nodeType":"YulBlock","src":"18954:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18971:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18982:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18964:6:21"},"nodeType":"YulFunctionCall","src":"18964:21:21"},"nodeType":"YulExpressionStatement","src":"18964:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19005:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19016:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19001:3:21"},"nodeType":"YulFunctionCall","src":"19001:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"19021:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18994:6:21"},"nodeType":"YulFunctionCall","src":"18994:30:21"},"nodeType":"YulExpressionStatement","src":"18994:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19044:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19055:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19040:3:21"},"nodeType":"YulFunctionCall","src":"19040:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"19060:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19033:6:21"},"nodeType":"YulFunctionCall","src":"19033:62:21"},"nodeType":"YulExpressionStatement","src":"19033:62:21"},{"nodeType":"YulAssignment","src":"19104:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19116:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19127:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19112:3:21"},"nodeType":"YulFunctionCall","src":"19112:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19104:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18931:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18945:4:21","type":""}],"src":"18780:356:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__fromStack_reversed(headStart, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 384)\n        let tail_1 := abi_encode_string(value0, add(headStart, 384))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_string(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        let _1 := 0xffffffff\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n        mstore(add(headStart, 224), and(value7, _1))\n        mstore(add(headStart, 256), and(value8, 0xffff))\n        abi_encode_bool(value9, add(headStart, 288))\n        abi_encode_address(value10, add(headStart, 320))\n        abi_encode_address(value11, add(headStart, 352))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptrt_uint32t_uint32t_uint32t_uint16(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(calldataload(add(headStart, 32)), _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_string_calldata(add(headStart, calldataload(add(headStart, 32))), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        if gt(calldataload(add(headStart, 64)), _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_string_calldata(add(headStart, calldataload(add(headStart, 64))), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        if gt(calldataload(add(headStart, 96)), _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_string_calldata(add(headStart, calldataload(add(headStart, 96))), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n        value7 := abi_decode_uint32(add(headStart, 128))\n        value8 := abi_decode_uint32(add(headStart, 160))\n        value9 := abi_decode_uint32(add(headStart, 192))\n        value10 := abi_decode_uint16(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_03a0ef2274e5fa9c92bd6c8904f1025dd04b34d1da74eba1106c91ebdbd13a59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Already ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bff8fba7e8290554d856a3fb22093bf87bdf5e84742e561d9c5dea6562588f74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Project completed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cf1cbb480479ea4d7c3f4f3b5a2d1e356ab6d98c8dec1739a2a160b41897be8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"min 0.01 ether\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_b66f79849fb2a1aeae618e045c8144ee98af31f7d75c8241357798f6fb27a16b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Project already started\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a3a9eb15a1903ce0ba5279cfeb2e00d127b5a6f2993d14812bc6864e4dd646bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"No commitment\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"withdraw failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6ccad79e7aa285c9f3f2db83e30790c7046ceac0d7d86d7990286517708fb5ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Not author\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4762d97070854ffa537667d2f87773fc610015ed3ee39aef0aef6647d23f7004__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"not closed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 224)\n        let tail_1 := abi_encode_string(value0, add(headStart, 224))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_addresst_bytes32_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_contract$_IERC20MetadataUpgradeable_$883_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a3b6d4b23ae4bbd8dffd90f5160a835673157044abc6160caab696199469b553__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid start time\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f79adeb066186ecb6bfb5c8311500863e681b7aa46040b41ed874ebc28bd54f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid end time\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_268b2b3ef04afe4685fdbcff6cb683aa408f3edfff411f4ac3bbfee177e0bffa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Maximum duration exceeded\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr_t_string_calldata_ptr_t_uint32_t_uint16__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint32_t_uint16__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_string_calldata(value1, value2, add(headStart, 192))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string_calldata(value3, value4, tail_1)\n        mstore(add(headStart, 96), sub(tail_2, headStart))\n        tail := abi_encode_string_calldata(value5, value6, tail_2)\n        mstore(add(headStart, 128), and(value7, 0xffffffff))\n        mstore(add(headStart, 160), and(value8, 0xffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100a75760003560e01c806360ae7c3b1161006457806360ae7c3b14610182578063715018a6146101a25780638da5cb5b146101b7578063bb89bf75146101df578063e90d4c06146101ff578063f2fde38b1461023757600080fd5b806306661abd146100ac578063107046bd146100d557806316509ee21461010d578063249411471461012257806344a9ae8c146101425780635702146914610162575b600080fd5b3480156100b857600080fd5b506100c260045481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100f56100f036600461185c565b610257565b6040516100cc9c9b9a999897969594939291906118bb565b61012061011b36600461185c565b610472565b005b34801561012e57600080fd5b5061012061013d36600461185c565b6108a6565b34801561014e57600080fd5b5061012061015d36600461185c565b610a48565b34801561016e57600080fd5b5061012061017d36600461185c565b610c1a565b34801561018e57600080fd5b5061012061019d36600461185c565b61108d565b3480156101ae57600080fd5b50610120611261565b3480156101c357600080fd5b506000546040516001600160a01b0390911681526020016100cc565b3480156101eb57600080fd5b506101206101fa366004611a02565b611275565b34801561020b57600080fd5b506100c261021a366004611af3565b600660209081526000928352604080842090915290825290205481565b34801561024357600080fd5b50610120610252366004611b23565b6116ab565b60056020526000908152604090208054819061027290611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461029e90611b47565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b50505050509080600101805461030090611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461032c90611b47565b80156103795780601f1061034e57610100808354040283529160200191610379565b820191906000526020600020905b81548152906001019060200180831161035c57829003601f168201915b50505050509080600201805461038e90611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546103ba90611b47565b80156104075780601f106103dc57610100808354040283529160200191610407565b820191906000526020600020905b8154815290600101906020018083116103ea57829003601f168201915b50505060038401546004850154600586015460068701546007909701549596929591945063ffffffff8082169450600160201b8204811693600160401b83049091169261ffff600160601b8404169260ff600160701b90910416916001600160a01b0390811691168c565b600081815260056020819052604090912001548190600160201b900463ffffffff164211156104bc5760405162461bcd60e51b81526004016104b390611b81565b60405180910390fd5b60008181526005602081905260409091200154600160701b900460ff16156104f65760405162461bcd60e51b81526004016104b390611ba8565b662386f26fc1000034101561053e5760405162461bcd60e51b815260206004820152600e60248201526d36b4b710181718189032ba3432b960911b60448201526064016104b3565b6000828152600560205260408082208151610180810190925280548290829061056690611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461059290611b47565b80156105df5780601f106105b4576101008083540402835291602001916105df565b820191906000526020600020905b8154815290600101906020018083116105c257829003601f168201915b505050505081526020016001820180546105f890611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461062490611b47565b80156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b5050505050815260200160028201805461068a90611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546106b690611b47565b80156107035780601f106106d857610100808354040283529160200191610703565b820191906000526020600020905b8154815290600101906020018083116106e657829003601f168201915b50505091835250506003820154602082015260048201546040820152600582015463ffffffff8082166060840152600160201b820481166080840152600160401b82041660a0830152600160601b810461ffff1660c0830152600160701b900460ff16151560e082015260068201546001600160a01b039081166101008301526007909201549091166101209091015290506000806107a134611724565b9150915081836060018181516107b79190611be9565b9052506080830180518291906107ce908390611be9565b9052506000858152600660209081526040808320338452909152812080543492906107fa908490611be9565b9091555050604051348152339086907f245cbccbc6875e4b0475a653568fd4f7c2dae5fb8929e33c0d66dc530ba11b009060200160405180910390a38260e0015163ffffffff1683606001511061089f5760016101208401526060830151608084015160405187927ff418560cae8df9d7d7fb63eca7a926821d509b9751b541b3aac4249c34bafa639261089692918252602082015260400190565b60405180910390a25b5050505050565b6108ae611764565b600081815260056020819052604090912001548190600160201b900463ffffffff164211156108ef5760405162461bcd60e51b81526004016104b390611b81565b60008181526005602081905260409091200154600160701b900460ff16156109295760405162461bcd60e51b81526004016104b390611ba8565b600082815260056020819052604090912001544263ffffffff909116116109925760405162461bcd60e51b815260206004820152601760248201527f50726f6a65637420616c7265616479207374617274656400000000000000000060448201526064016104b3565b6000828152600560205260408120906109ab828261180e565b6109b960018301600061180e565b6109c760028301600061180e565b5060006003820181905560048201556005810180546effffffffffffffffffffffffffffff191690556006810180546001600160a01b03199081169091556007909101805490911690556040518281527fe3805ed669490875ae87c5c8b1ad6ecca0e5e67305a833926d0d4317c4822fc09060200160405180910390a15050565b600081815260056020819052604090912001548190600160201b900463ffffffff16421115610a895760405162461bcd60e51b81526004016104b390611b81565b60008181526005602081905260409091200154600160701b900460ff1615610ac35760405162461bcd60e51b81526004016104b390611ba8565b6000828152600660209081526040808320338452909152812054839180610ae983611724565b600088815260056020526040812060030180549395509193508492610b0f908490611c02565b909155505060008681526005602052604081206004018054839290610b35908490611c02565b909155505060008681526006602090815260408083203380855292528083208390555185908381818185875af1925050503d8060008114610b92576040519150601f19603f3d011682016040523d82523d6000602084013e610b97565b606091505b5050905080610bda5760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b60448201526064016104b3565b604051848152339088907f7fd902d6e186354d1617b957fc4cb4a144f44a19cc5c4525cfb772d707c405c29060200160405180910390a350505050505050565b60008181526005602052604090206006015481906001600160a01b03163314610c725760405162461bcd60e51b815260206004820152600a6024820152692737ba1030baba3437b960b11b60448201526064016104b3565b600082815260056020819052604090912001548290600160201b900463ffffffff16421180610cba575060008181526005602081905260409091200154600160701b900460ff165b610cf35760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104b3565b60008381526005602052604080822081516101808101909252805482908290610d1b90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4790611b47565b8015610d945780601f10610d6957610100808354040283529160200191610d94565b820191906000526020600020905b815481529060010190602001808311610d7757829003601f168201915b50505050508152602001600182018054610dad90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd990611b47565b8015610e265780601f10610dfb57610100808354040283529160200191610e26565b820191906000526020600020905b815481529060010190602001808311610e0957829003601f168201915b50505050508152602001600282018054610e3f90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6b90611b47565b8015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b505050918352505060038201546020820152600480830154604080840191909152600584015463ffffffff8082166060860152600160201b820481166080860152600160401b82041660a0850152600160601b810461ffff1660c0850152600160701b900460ff16151560e084015260068401546001600160a01b0390811661010085015260079094015484166101209093019290925260025484518584015161014087015194516325b211eb60e11b81529697506000969290951694634b6423d694610f9494929391923092601b9291839160239101611c15565b6020604051808303816000875af1158015610fb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd79190611c6f565b60035460015460405163e343361560e01b81526001600160a01b038085166004830152918216602482015292935060009291169063e34336159060440160408051808303816000875af1158015611032573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110569190611c8c565b5060405190915086907fbc8073ff7d7bd2ab93612911916e7941431e9bae6df21f172a7f4ace4284b80490600090a2505050505050565b600081815260056020819052604090912001548190600160201b900463ffffffff164211806110d5575060008181526005602081905260409091200154600160701b900460ff165b61110e5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104b3565b6000828152600660209081526040808320338452909152812054839161113382611724565b50600086815260056020526040812060030154919250908290611157906023611cba565b6111619190611cdc565b6002546000888152600560205260409081902060070154905163e486033960e01b81526001600160a01b039182166004820152929350169063e4860339906024016020604051808303816000875af11580156111c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e59190611c6f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af1158015611234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112589190611cf3565b50505050505050565b611269611764565b61127360006117be565b565b61127d611764565b428463ffffffff1610156112c85760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642073746172742074696d6560701b60448201526064016104b3565b8363ffffffff168363ffffffff16116113165760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420656e642074696d6560801b60448201526064016104b3565b61132362093a8042611be9565b8363ffffffff1611156113785760405162461bcd60e51b815260206004820152601960248201527f4d6178696d756d206475726174696f6e2065786365656465640000000000000060448201526064016104b3565b6004805490600061138883611d15565b91905055506040518061018001604052808b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815291810191908990899081908401838280828437600092019190915250505090825250604080516020601f8c018190048102820181019092528a815291810191908b908b9081908401838280828437600081840152601f19601f82011690508083019250505050505050815260200160008152602001600081526020018563ffffffff1681526020018463ffffffff1681526020018363ffffffff1681526020018261ffff1681526020016000151581526020018c6001600160a01b0316815260200160006001600160a01b031681525060056000600454815260200190815260200160002060008201518160000190816114e59190611d93565b50602082015160018201906114fa9082611d93565b506040820151600282019061150f9082611d93565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160050160046101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160050160086101000a81548163ffffffff021916908363ffffffff16021790555061010082015181600501600c6101000a81548161ffff021916908361ffff16021790555061012082015181600501600e6101000a81548160ff0219169083151502179055506101408201518160060160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050508a6001600160a01b03168363ffffffff168563ffffffff167f49230f399aeb93ae9a7a3d2ee455e764a5b042340225e7e2ec99dde6f7e9bf8d6004548e8e8e8e8e8e8c8c60405161169699989796959493929190611e7c565b60405180910390a45050505050505050505050565b6116b3611764565b6001600160a01b0381166117185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b3565b611721816117be565b50565b600080806014611735600286611fc9565b61173f9190611cba565b905060008261174f600287611fc9565b6117599190611c02565b959194509092505050565b6000546001600160a01b031633146112735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b50805461181a90611b47565b6000825580601f1061182a575050565b601f01602090049060005260206000209081019061172191905b808211156118585760008155600101611844565b5090565b60006020828403121561186e57600080fd5b5035919050565b6000815180845260005b8181101561189b5760208185018101518683018201520161187f565b506000602082860101526020601f19601f83011685010191505092915050565b610180815260006118d061018083018f611875565b82810360208401526118e2818f611875565b905082810360408401526118f6818e611875565b9150508a606083015289608083015263ffffffff808a1660a084015280891660c084015280881660e08401525061ffff861661010083015261193d61012083018615159052565b6001600160a01b0384166101408301526001600160a01b0383166101608301529d9c50505050505050505050505050565b6001600160a01b038116811461172157600080fd5b803561198e8161196e565b919050565b60008083601f8401126119a557600080fd5b50813567ffffffffffffffff8111156119bd57600080fd5b6020830191508360208285010111156119d557600080fd5b9250929050565b803563ffffffff8116811461198e57600080fd5b803561ffff8116811461198e57600080fd5b60008060008060008060008060008060006101008c8e031215611a2457600080fd5b611a2d8c611983565b9a5067ffffffffffffffff8060208e01351115611a4957600080fd5b611a598e60208f01358f01611993565b909b50995060408d0135811015611a6f57600080fd5b611a7f8e60408f01358f01611993565b909950975060608d0135811015611a9557600080fd5b50611aa68d60608e01358e01611993565b9096509450611ab760808d016119dc565b9350611ac560a08d016119dc565b9250611ad360c08d016119dc565b9150611ae160e08d016119f0565b90509295989b509295989b9093969950565b60008060408385031215611b0657600080fd5b823591506020830135611b188161196e565b809150509250929050565b600060208284031215611b3557600080fd5b8135611b408161196e565b9392505050565b600181811c90821680611b5b57607f821691505b602082108103611b7b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600d908201526c105b1c9958591e48195b991959609a1b604082015260600190565b602080825260119082015270141c9bda9958dd0818dbdb5c1b195d1959607a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611bfc57611bfc611bd3565b92915050565b81810381811115611bfc57611bfc611bd3565b60e081526000611c2860e083018a611875565b8281036020840152611c3a818a611875565b6001600160a01b0398891660408501526060840197909752505092909416608083015260a082015260c0019190915292915050565b600060208284031215611c8157600080fd5b8151611b408161196e565b60008060408385031215611c9f57600080fd5b8251611caa8161196e565b6020939093015192949293505050565b600082611cd757634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417611bfc57611bfc611bd3565b600060208284031215611d0557600080fd5b81518015158114611b4057600080fd5b600060018201611d2757611d27611bd3565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f821115611d8e57600081815260208120601f850160051c81016020861015611d6b5750805b601f850160051c820191505b81811015611d8a57828155600101611d77565b5050505b505050565b815167ffffffffffffffff811115611dad57611dad611d2e565b611dc181611dbb8454611b47565b84611d44565b602080601f831160018114611df65760008415611dde5750858301515b600019600386901b1c1916600185901b178555611d8a565b600085815260208120601f198616915b82811015611e2557888601518255948401946001909101908401611e06565b5085821015611e435787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208201526000611e9660c083018a8c611e53565b8281036040840152611ea981898b611e53565b90508281036060840152611ebe818789611e53565b91505063ffffffff8416608083015261ffff831660a08301529a9950505050505050505050565b600181815b80851115611f20578160001904821115611f0657611f06611bd3565b80851615611f1357918102915b93841c9390800290611eea565b509250929050565b600082611f3757506001611bfc565b81611f4457506000611bfc565b8160018114611f5a5760028114611f6457611f80565b6001915050611bfc565b60ff841115611f7557611f75611bd3565b50506001821b611bfc565b5060208310610133831016604e8410600b8410161715611fa3575081810a611bfc565b611fad8383611ee5565b8060001904821115611fc157611fc1611bd3565b029392505050565b6000611b408383611f2856fea264697066735822122081b6392816241f6f6d34dd42744470ddbd8c147a35518d11aa1d6c71caeb42ed64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60AE7C3B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x60AE7C3B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xBB89BF75 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xE90D4C06 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x107046BD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x16509EE2 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x24941147 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x44A9AE8C EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x57021469 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x1261 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1275 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x272 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29E SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32C SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x379 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x379 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x38E SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BA SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x407 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x407 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 POP PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP5 POP PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP4 PUSH1 0x1 PUSH1 0x40 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP3 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x60 SHL DUP5 DIV AND SWAP3 PUSH1 0xFF PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP13 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x36B4B710181718189032BA3432B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x180 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x566 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x592 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x5F8 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x624 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x671 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x646 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x671 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x654 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x68A SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B6 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x703 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x703 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SHL DUP2 DIV PUSH2 0xFFFF AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x7 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x7A1 CALLVALUE PUSH2 0x1724 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP4 PUSH1 0x60 ADD DUP2 DUP2 MLOAD PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x80 DUP4 ADD DUP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x7CE SWAP1 DUP4 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x7FA SWAP1 DUP5 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 DUP7 SWAP1 PUSH32 0x245CBCCBC6875E4B0475A653568FD4F7C2DAE5FB8929E33C0D66DC530BA11B00 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP3 PUSH1 0xE0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x60 ADD MLOAD LT PUSH2 0x89F JUMPI PUSH1 0x1 PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD DUP8 SWAP3 PUSH32 0xF418560CAE8DF9D7D7FB63ECA7A926821D509B9751B541B3AAC4249C34BAFA63 SWAP3 PUSH2 0x896 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8AE PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND GT PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A65637420616C72656164792073746172746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x9AB DUP3 DUP3 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x9B9 PUSH1 0x1 DUP4 ADD PUSH1 0x0 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x180E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x7 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xE3805ED669490875AE87C5C8B1AD6ECCA0E5E67305A833926D0D4317C4822FC0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP4 SWAP2 DUP1 PUSH2 0xAE9 DUP4 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP DUP5 SWAP3 PUSH2 0xB0F SWAP1 DUP5 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB35 SWAP1 DUP5 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE MLOAD DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1DDA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 DUP9 SWAP1 PUSH32 0x7FD902D6E186354D1617B957FC4CB4A144F44A19CC5C4525CFB772D707C405C2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA1030BABA3437B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT DUP1 PUSH2 0xCBA JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD0818DB1BDCD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x180 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xD1B SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD47 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD69 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xDAD SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDD9 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xE3F SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE6B SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SHL DUP2 DIV PUSH2 0xFFFF AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x7 SWAP1 SWAP5 ADD SLOAD DUP5 AND PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 SLOAD DUP5 MLOAD DUP6 DUP5 ADD MLOAD PUSH2 0x140 DUP8 ADD MLOAD SWAP5 MLOAD PUSH4 0x25B211EB PUSH1 0xE1 SHL DUP2 MSTORE SWAP7 SWAP8 POP PUSH1 0x0 SWAP7 SWAP3 SWAP1 SWAP6 AND SWAP5 PUSH4 0x4B6423D6 SWAP5 PUSH2 0xF94 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 ADDRESS SWAP3 PUSH1 0x1B SWAP3 SWAP2 DUP4 SWAP2 PUSH1 0x23 SWAP2 ADD PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD7 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3433615 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0xE3433615 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1032 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1056 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP7 SWAP1 PUSH32 0xBC8073FF7D7BD2AB93612911916E7941431E9BAE6DF21F172A7F4ACE4284B804 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT DUP1 PUSH2 0x10D5 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD0818DB1BDCD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP4 SWAP2 PUSH2 0x1133 DUP3 PUSH2 0x1724 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 PUSH2 0x1157 SWAP1 PUSH1 0x23 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP1 MLOAD PUSH4 0xE4860339 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xE4860339 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E5 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1234 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1258 SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1269 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x1273 PUSH1 0x0 PUSH2 0x17BE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x127D PUSH2 0x1764 JUMP JUMPDEST TIMESTAMP DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642073746172742074696D65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420656E642074696D65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1323 PUSH3 0x93A80 TIMESTAMP PUSH2 0x1BE9 JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1378 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206475726174696F6E20657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1388 DUP4 PUSH2 0x1D15 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x14FA SWAP1 DUP3 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x150F SWAP1 DUP3 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND PUSH32 0x49230F399AEB93AE9A7A3D2EE455E764A5B042340225E7E2EC99DDE6F7E9BF8D PUSH1 0x4 SLOAD DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1696 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16B3 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1721 DUP2 PUSH2 0x17BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x14 PUSH2 0x1735 PUSH1 0x2 DUP7 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x174F PUSH1 0x2 DUP8 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0x1759 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x181A SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x182A JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1721 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1844 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x189B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x187F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18D0 PUSH2 0x180 DUP4 ADD DUP16 PUSH2 0x1875 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18E2 DUP2 DUP16 PUSH2 0x1875 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x18F6 DUP2 DUP15 PUSH2 0x1875 JUMP JUMPDEST SWAP2 POP POP DUP11 PUSH1 0x60 DUP4 ADD MSTORE DUP10 PUSH1 0x80 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 DUP11 AND PUSH1 0xA0 DUP5 ADD MSTORE DUP1 DUP10 AND PUSH1 0xC0 DUP5 ADD MSTORE DUP1 DUP9 AND PUSH1 0xE0 DUP5 ADD MSTORE POP PUSH2 0xFFFF DUP7 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x193D PUSH2 0x120 DUP4 ADD DUP7 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x160 DUP4 ADD MSTORE SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x198E DUP2 PUSH2 0x196E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x198E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x198E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x1A24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2D DUP13 PUSH2 0x1983 JUMP JUMPDEST SWAP11 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x20 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x1A49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A59 DUP15 PUSH1 0x20 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x1A6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7F DUP15 PUSH1 0x40 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA6 DUP14 PUSH1 0x60 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x1AB7 PUSH1 0x80 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP4 POP PUSH2 0x1AC5 PUSH1 0xA0 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP3 POP PUSH2 0x1AD3 PUSH1 0xC0 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE1 PUSH1 0xE0 DUP14 ADD PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B18 DUP2 PUSH2 0x196E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B40 DUP2 PUSH2 0x196E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E48195B991959 PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x141C9BDA9958DD0818DBDB5C1B195D1959 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C28 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x1875 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C3A DUP2 DUP11 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP SWAP3 SWAP1 SWAP5 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B40 DUP2 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x1CAA DUP2 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CD7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D27 JUMPI PUSH2 0x1D27 PUSH2 0x1BD3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1D6B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D77 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAD JUMPI PUSH2 0x1DAD PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x1DC1 DUP2 PUSH2 0x1DBB DUP5 SLOAD PUSH2 0x1B47 JUMP JUMPDEST DUP5 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DF6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1DDE JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E25 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E06 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E43 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST DUP10 DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1E96 PUSH1 0xC0 DUP4 ADD DUP11 DUP13 PUSH2 0x1E53 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1EA9 DUP2 DUP10 DUP12 PUSH2 0x1E53 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1EBE DUP2 DUP8 DUP10 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1F20 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F06 PUSH2 0x1BD3 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1F13 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1EEA JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F37 JUMPI POP PUSH1 0x1 PUSH2 0x1BFC JUMP JUMPDEST DUP2 PUSH2 0x1F44 JUMPI POP PUSH1 0x0 PUSH2 0x1BFC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F5A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F64 JUMPI PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1BFC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F75 JUMPI PUSH2 0x1F75 PUSH2 0x1BD3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1BFC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1FA3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x1FAD DUP4 DUP4 PUSH2 0x1EE5 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1FC1 JUMPI PUSH2 0x1FC1 PUSH2 0x1BD3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B40 DUP4 DUP4 PUSH2 0x1F28 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xB6 CODECOPY 0x28 AND 0x24 0x1F PUSH16 0x6D34DD42744470DDBD8C147A35518D11 0xAA SAR PUSH13 0x71CAEB42ED64736F6C63430008 GT STOP CALLER ","sourceMap":"101:252:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1163:20:14;;;;;;;;;;;;;;;;;;;160:25:21;;;148:2;133:18;1163:20:14;;;;;;;;1187:43;;;;;;;;;;-1:-1:-1;1187:43:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;3920:541::-;;;;;;:::i;:::-;;:::i;:::-;;3700:217;;;;;;;;;;-1:-1:-1;3700:217:14;;;;;:::i;:::-;;:::i;4464:472::-;;;;;;;;;;-1:-1:-1;4464:472:14;;;;;:::i;:::-;;:::i;4939:547::-;;;;;;;;;;-1:-1:-1;4939:547:14;;;;;:::i;:::-;;:::i;5489:404::-;;;;;;;;;;-1:-1:-1;5489:404:14;;;;;:::i;:::-;;:::i;1831:101:6:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:6;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:6;;;2452:51:21;;2440:2;2425:18;1201:85:6;2306:203:21;2787:910:14;;;;;;;;;;-1:-1:-1;2787:910:14;;;;;:::i;:::-;;:::i;1234:66::-;;;;;;;;;;-1:-1:-1;1234:66:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2081:198:6;;;;;;;;;;-1:-1:-1;2081:198:6;;;;;:::i;:::-;;:::i;1187:43:14:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1187:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1187:43:14;;;;;-1:-1:-1;;;;1187:43:14;;;;;-1:-1:-1;;;1187:43:14;;;;;;;-1:-1:-1;;;1187:43:14;;;;;-1:-1:-1;;;1187:43:14;;;;;-1:-1:-1;;;;;1187:43:14;;;;;;:::o;3920:541::-;2163:13;;;;:8;:13;;;;;;;;:20;;:13;;-1:-1:-1;;;2163:20:14;;;;2144:15;:39;;2136:65;;;;-1:-1:-1;;;2136:65:14;;;;;;;:::i;:::-;;;;;;;;;2213:13;;;;:8;:13;;;;;;;;:23;;-1:-1:-1;;;2213:23:14;;;;:32;2205:62;;;;-1:-1:-1;;;2205:62:14;;;;;;;:::i;:::-;4024:10:::1;4011:9;:23;;4003:50;;;::::0;-1:-1:-1;;;4003:50:14;;6684:2:21;4003:50:14::1;::::0;::::1;6666:21:21::0;6723:2;6703:18;;;6696:30;-1:-1:-1;;;6742:18:21;;;6735:44;6796:18;;4003:50:14::1;6482:338:21::0;4003:50:14::1;4058:22;4083:13:::0;;;:8:::1;:13;::::0;;;;;4058:38;;::::1;::::0;::::1;::::0;;;;;;;4083:13;;4058:38:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;4058:38:14;;;-1:-1:-1;;4058:38:14::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;-1:-1:-1;;;4058:38:14;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4058:38:14;::::1;;::::0;;;;-1:-1:-1;;;4058:38:14;::::1;;;::::0;;;;-1:-1:-1;;;4058:38:14;::::1;;;;;::::0;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4058:38:14;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;;;4132:35:14::1;4157:9;4132:24;:35::i;:::-;4101:66;;;;4188:5;4172:7;:12;;:21;;;;;;;:::i;:::-;::::0;;-1:-1:-1;4197:17:14::1;::::0;::::1;:30:::0;;4218:9;;4197:17;:30:::1;::::0;4218:9;;4197:30:::1;:::i;:::-;::::0;;-1:-1:-1;4232:16:14::1;::::0;;;:11:::1;:16;::::0;;;;;;;4249:10:::1;4232:28:::0;;;;;;;:41;;4264:9:::1;::::0;4232:16;:41:::1;::::0;4264:9;;4232:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;4282:37:14::1;::::0;4309:9:::1;160:25:21::0;;4297:10:14::1;::::0;4292:3;;4282:37:::1;::::0;148:2:21;133:18;4282:37:14::1;;;;;;;4344:7;:14;;;4328:30;;:7;:12;;;:30;4324:134;;4385:4;4365:17;::::0;::::1;:24:::0;4421:12:::1;::::0;::::1;::::0;4435:17:::1;::::0;::::1;::::0;4399:54:::1;::::0;4416:3;;4399:54:::1;::::0;::::1;::::0;7261:25:21;;;7317:2;7302:18;;7295:34;7249:2;7234:18;;7087:248;4399:54:14::1;;;;;;;;4324:134;3999:462;;;3920:541:::0;;:::o;3700:217::-;1094:13:6;:11;:13::i;:::-;2163::14::1;::::0;;;:8:::1;:13;::::0;;;;;;;:20:::1;::::0;:13;;-1:-1:-1;;;2163:20:14;::::1;;;2144:15;:39;;2136:65;;;;-1:-1:-1::0;;;2136:65:14::1;;;;;;;:::i;:::-;2213:13;::::0;;;:8:::1;:13;::::0;;;;;;;:23:::1;::::0;-1:-1:-1;;;2213:23:14;::::1;;;:32;2205:62;;;;-1:-1:-1::0;;;2205:62:14::1;;;;;;;:::i;:::-;3791:13:::2;::::0;;;:8:::2;:13;::::0;;;;;;;:22:::2;::::0;3816:15:::2;3791:22;::::0;;::::2;:40;3783:76;;;::::0;-1:-1:-1;;;3783:76:14;;7542:2:21;3783:76:14::2;::::0;::::2;7524:21:21::0;7581:2;7561:18;;;7554:30;7620:25;7600:18;;;7593:53;7663:18;;3783:76:14::2;7340:347:21::0;3783:76:14::2;3870:13;::::0;;;:8:::2;:13;::::0;;;;;3863:20:::2;3870:13:::0;;3863:20:::2;:::i;:::-;;;::::0;::::2;;;:::i;:::-;;;::::0;::::2;;;:::i;:::-;-1:-1:-1::0;3863:20:14::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;3863:20:14;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;3863:20:14;;::::2;::::0;;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;3892:21:::2;::::0;160:25:21;;;3892:21:14::2;::::0;148:2:21;133:18;3892:21:14::2;;;;;;;1117:1:6::1;3700:217:14::0;:::o;4464:472::-;2163:13;;;;:8;:13;;;;;;;;:20;;:13;;-1:-1:-1;;;2163:20:14;;;;2144:15;:39;;2136:65;;;;-1:-1:-1;;;2136:65:14;;;;;;;:::i;:::-;2213:13;;;;:8;:13;;;;;;;;:23;;-1:-1:-1;;;2213:23:14;;;;:32;2205:62;;;;-1:-1:-1;;;2205:62:14;;;;;;;:::i;:::-;2511:1:::1;2479:16:::0;;;:11:::1;:16;::::0;;;;;;;2496:10:::1;4578:28:::0;;;;;;;;2479:16;;2511:1;4642:36:::2;4578:28:::0;4642:24:::2;:36::i;:::-;4682:13;::::0;;;:8:::2;:13;::::0;;;;:18:::2;;:27:::0;;4611:67;;-1:-1:-1;4611:67:14;;-1:-1:-1;4611:67:14;;4682:27:::2;::::0;4611:67;;4682:27:::2;:::i;:::-;::::0;;;-1:-1:-1;;4713:13:14::2;::::0;;;:8:::2;:13;::::0;;;;:23:::2;;:36:::0;;4740:9;;4713:13;:36:::2;::::0;4740:9;;4713:36:::2;:::i;:::-;::::0;;;-1:-1:-1;;4785:1:14::2;4754:16:::0;;;:11:::2;:16;::::0;;;;;;;4771:10:::2;4754:28:::0;;;;;;;;:32;;;4807:40;4831:10;;4785:1;4807:40;4785:1;4807:40;4831:10;4771;4807:40:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4791:56;;;4859:4;4851:32;;;::::0;-1:-1:-1;;;4851:32:14;;8579:2:21;4851:32:14::2;::::0;::::2;8561:21:21::0;8618:2;8598:18;;;8591:30;-1:-1:-1;;;8637:18:21;;;8630:45;8692:18;;4851:32:14::2;8377:339:21::0;4851:32:14::2;4893:39;::::0;160:25:21;;;4909:10:14::2;::::0;4904:3;;4893:39:::2;::::0;148:2:21;133:18;4893:39:14::2;;;;;;;4553:383;;;;2271:1:::1;4464:472:::0;;:::o;4939:547::-;1966:13;;;;:8;:13;;;;;:27;;;:13;;-1:-1:-1;;;;;1966:27:14;1952:10;:41;1944:64;;;;-1:-1:-1;;;1944:64:14;;8923:2:21;1944:64:14;;;8905:21:21;8962:2;8942:18;;;8935:30;-1:-1:-1;;;8981:18:21;;;8974:40;9031:18;;1944:64:14;8721:334:21;1944:64:14;2354:13:::1;::::0;;;:8:::1;:13;::::0;;;;;;;:20:::1;::::0;:13;;-1:-1:-1;;;2354:20:14;::::1;;;2336:15;:38;::::0;:65:::1;;-1:-1:-1::0;2378:13:14::1;::::0;;;:8:::1;:13;::::0;;;;;;;:23:::1;::::0;-1:-1:-1;;;2378:23:14;::::1;;;2336:65;2324:98;;;::::0;-1:-1:-1;;;2324:98:14;;9262:2:21;2324:98:14::1;::::0;::::1;9244:21:21::0;9301:2;9281:18;;;9274:30;-1:-1:-1;;;9320:18:21;;;9313:40;9370:18;;2324:98:14::1;9060:334:21::0;2324:98:14::1;5030:22:::2;5055:13:::0;;;:8:::2;:13;::::0;;;;;5030:38;;::::2;::::0;::::2;::::0;;;;;;;5055:13;;5030:38:::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;5030:38:14;;;-1:-1:-1;;5030:38:14::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;;;;-1:-1:-1;;;5030:38:14;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;5030:38:14;::::2;;::::0;;;;-1:-1:-1;;;5030:38:14;::::2;;;::::0;;;;-1:-1:-1;;;5030:38:14;::::2;;;;;::::0;;;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;5030:38:14;;::::2;;::::0;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;5117:19:::2;::::0;5154:12;;5171:14;;::::2;::::0;5228:21:::2;::::0;::::2;::::0;5096:196;;-1:-1:-1;;;5096:196:14;;5154:12;;-1:-1:-1;;;5117:19:14;;;::::2;::::0;5096:53:::2;::::0;:196:::2;::::0;5154:12;;5171:14;;5198:4:::2;::::0;910:2:::2;::::0;5228:21;910:2;;1054::::2;::::0;5096:196:::2;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5342:18;::::0;;5394:16;5323:91:::2;::::0;-1:-1:-1;;;5323:91:14;;-1:-1:-1;;;;;10689:15:21;;;5323:91:14::2;::::0;::::2;10671:34:21::0;5394:16:14;;::::2;10721:18:21::0;;;10714:43;5073:219:14;;-1:-1:-1;5298:19:14::2;::::0;5342:18;::::2;::::0;5323:49:::2;::::0;10606:18:21;;5323:91:14::2;::::0;::::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5461:21:14::2;::::0;5297:117;;-1:-1:-1;5478:3:14;;5461:21:::2;::::0;;;::::2;5026:460;;;2012:1:::1;4939:547:::0;;:::o;5489:404::-;2354:13;;;;:8;:13;;;;;;;;:20;;:13;;-1:-1:-1;;;2354:20:14;;;;2336:15;:38;;:65;;-1:-1:-1;2378:13:14;;;;:8;:13;;;;;;;;:23;;-1:-1:-1;;;2378:23:14;;;;2336:65;2324:98;;;;-1:-1:-1;;;2324:98:14;;9262:2:21;2324:98:14;;;9244:21:21;9301:2;9281:18;;;9274:30;-1:-1:-1;;;9320:18:21;;;9313:40;9370:18;;2324:98:14;9060:334:21;2324:98:14;2511:1:::1;2479:16:::0;;;:11:::1;:16;::::0;;;;;;;2496:10:::1;5604:28:::0;;;;;;;;2479:16;;5654:36:::2;5604:28:::0;5654:24:::2;:36::i;:::-;-1:-1:-1::0;5695:19:14::2;5737:13:::0;;;:8:::2;:13;::::0;;;;:18:::2;;::::0;5637:53;;-1:-1:-1;5695:19:14;5637:53;;5718:37:::2;::::0;1054:2:::2;5718:37;:::i;:::-;5717:47;;;;:::i;:::-;5792:19;::::0;::::2;5824:13:::0;;;:8:::2;:13;::::0;;;;;;:26:::2;;::::0;5771:80;;-1:-1:-1;;;5771:80:14;;-1:-1:-1;;;;;5824:26:14;;::::2;5771:80;::::0;::::2;2452:51:21::0;5695:69:14;;-1:-1:-1;5792:19:14::2;::::0;5771:52:::2;::::0;2425:18:21;;5771:80:14::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:118;::::0;-1:-1:-1;;;5771:118:14;;5865:10:::2;5771:118;::::0;::::2;11943:51:21::0;12010:18;;;12003:34;;;-1:-1:-1;;;;;5771:93:14;;;::::2;::::0;::::2;::::0;11916:18:21;;5771:118:14::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5579:314;;;2426:1:::1;5489:404:::0;;:::o;1831:101:6:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2787:910:14:-;1094:13:6;:11;:13::i;:::-;3044:15:14::1;3031:9;:28;;;;3023:59;;;::::0;-1:-1:-1;;;3023:59:14;;12532:2:21;3023:59:14::1;::::0;::::1;12514:21:21::0;12571:2;12551:18;;;12544:30;-1:-1:-1;;;12590:18:21;;;12583:48;12648:18;;3023:59:14::1;12330:342:21::0;3023:59:14::1;3104:9;3094:19;;:7;:19;;;3086:48;;;::::0;-1:-1:-1;;;3086:48:14;;12879:2:21;3086:48:14::1;::::0;::::1;12861:21:21::0;12918:2;12898:18;;;12891:30;-1:-1:-1;;;12937:18:21;;;12930:46;12993:18;;3086:48:14::1;12677:340:21::0;3086:48:14::1;3161:30;1100:6;3161:15;:30;:::i;:::-;3150:7;:41;;;;3138:89;;;::::0;-1:-1:-1;;;3138:89:14;;13224:2:21;3138:89:14::1;::::0;::::1;13206:21:21::0;13263:2;13243:18;;;13236:30;13302:27;13282:18;;;13275:55;13347:18;;3138:89:14::1;13022:349:21::0;3138:89:14::1;3232:5;:7:::0;;;:5:::1;:7;::::0;::::1;:::i;:::-;;;;;;3262:282;;;;;;;;3281:5;;3262:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;3262:282:14;;;-1:-1:-1;3262:282:14::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;3324:12;;;;;;3262:282;::::1;3324:12:::0;;;;3262:282;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;;3262:282:14;;;-1:-1:-1;3262:282:14::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;3299:7;;;;;;3262:282;::::1;3299:7:::0;;;;3262:282;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3347:1;3262:282;;;;3364:1;3262:282;;;;3380:9;3262:282;;;;;;3402:7;3262:282;;;;;;3422:7;3262:282;;;;;;3445:10;3262:282;;;;;;3471:5;3262:282;;;;;;3496:14;-1:-1:-1::0;;;;;3262:282:14::1;;;;;3537:1;-1:-1:-1::0;;;;;3262:282:14::1;;;::::0;3244:8:::1;:15;3253:5;;3244:15;;;;;;;;;;;:300;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3244:300:14::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;3244:300:14::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3244:300:14::1;;;;;-1:-1:-1::0;;;;;3244:300:14::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3244:300:14::1;;;;;-1:-1:-1::0;;;;;3244:300:14::1;;;;;;;;;3675:14;-1:-1:-1::0;;;;;3554:139:14::1;3636:7;3554:139;;3622:9;3554:139;;;3573:5;;3583;;3593:7;;3605:12;;3648:7;3660:10;3554:139;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2787:910:::0;;;;;;;;;;;:::o;2081:198:6:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:6;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:6;;17201:2:21;2161:73:6::1;::::0;::::1;17183:21:21::0;17240:2;17220:18;;;17213:30;17279:34;17259:18;;;17252:62;-1:-1:-1;;;17330:18:21;;;17323:36;17376:19;;2161:73:6::1;16999:402:21::0;2161:73:6::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;5896:255:14:-;5968:14;;;6052:2;6029:19;1157:1;6029:6;:19;:::i;:::-;6028:26;;;;:::i;:::-;6007:47;-1:-1:-1;6064:15:14;6106:9;6083:19;1157:1;6083:6;:19;:::i;:::-;6082:33;;;;:::i;:::-;6064:51;6136:10;;-1:-1:-1;5896:255:14;;-1:-1:-1;;;5896:255:14:o;1359:130:6:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:6;719:10:12;1422:23:6;1414:68;;;;-1:-1:-1;;;1414:68:6;;18982:2:21;1414:68:6;;;18964:21:21;;;19001:18;;;18994:30;19060:34;19040:18;;;19033:62;19112:18;;1414:68:6;18780:356:21;2433:187:6;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:6;;;-1:-1:-1;;;;;;2541:17:6;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:180:21:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:21;;196:180;-1:-1:-1;196:180:21:o;381:423::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;527:3;730:1;723:4;714:6;709:3;705:16;701:27;694:38;793:4;786:2;782:7;777:2;769:6;765:15;761:29;756:3;752:39;748:50;741:57;;;381:423;;;;:::o;1014:1287::-;1499:3;1488:9;1481:22;1462:4;1526:46;1567:3;1556:9;1552:19;1544:6;1526:46;:::i;:::-;1620:9;1612:6;1608:22;1603:2;1592:9;1588:18;1581:50;1654:33;1680:6;1672;1654:33;:::i;:::-;1640:47;;1735:9;1727:6;1723:22;1718:2;1707:9;1703:18;1696:50;1763:33;1789:6;1781;1763:33;:::i;:::-;1755:41;;;1832:6;1827:2;1816:9;1812:18;1805:34;1876:6;1870:3;1859:9;1855:19;1848:35;1902:10;1961:2;1953:6;1949:15;1943:3;1932:9;1928:19;1921:44;2014:2;2006:6;2002:15;1996:3;1985:9;1981:19;1974:44;2067:2;2059:6;2055:15;2049:3;2038:9;2034:19;2027:44;;2120:6;2112;2108:19;2102:3;2091:9;2087:19;2080:48;2137:44;2176:3;2165:9;2161:19;2153:6;879:13;872:21;860:34;;809:91;2137:44;-1:-1:-1;;;;;971:31:21;;2233:3;2218:19;;959:44;-1:-1:-1;;;;;971:31:21;;2290:3;2275:19;;959:44;1014:1287;;;;;;;;;;;;;;;:::o;2514:131::-;-1:-1:-1;;;;;2589:31:21;;2579:42;;2569:70;;2635:1;2632;2625:12;2650:134;2718:20;;2747:31;2718:20;2747:31;:::i;:::-;2650:134;;;:::o;2789:348::-;2841:8;2851:6;2905:3;2898:4;2890:6;2886:17;2882:27;2872:55;;2923:1;2920;2913:12;2872:55;-1:-1:-1;2946:20:21;;2989:18;2978:30;;2975:50;;;3021:1;3018;3011:12;2975:50;3058:4;3050:6;3046:17;3034:29;;3110:3;3103:4;3094:6;3086;3082:19;3078:30;3075:39;3072:59;;;3127:1;3124;3117:12;3072:59;2789:348;;;;;:::o;3142:163::-;3209:20;;3269:10;3258:22;;3248:33;;3238:61;;3295:1;3292;3285:12;3310:159;3377:20;;3437:6;3426:18;;3416:29;;3406:57;;3459:1;3456;3449:12;3474:1358;3628:6;3636;3644;3652;3660;3668;3676;3684;3692;3700;3708:7;3762:3;3750:9;3741:7;3737:23;3733:33;3730:53;;;3779:1;3776;3769:12;3730:53;3802:29;3821:9;3802:29;:::i;:::-;3792:39;;3850:18;3917:2;3911;3900:9;3896:18;3883:32;3880:40;3877:60;;;3933:1;3930;3923:12;3877:60;3972:85;4049:7;4042:2;4031:9;4027:18;4014:32;4003:9;3999:48;3972:85;:::i;:::-;4076:8;;-1:-1:-1;4103:8:21;-1:-1:-1;4154:2:21;4139:18;;4126:32;4123:40;-1:-1:-1;4120:60:21;;;4176:1;4173;4166:12;4120:60;4215:85;4292:7;4285:2;4274:9;4270:18;4257:32;4246:9;4242:48;4215:85;:::i;:::-;4319:8;;-1:-1:-1;4346:8:21;-1:-1:-1;4397:2:21;4382:18;;4369:32;4366:40;-1:-1:-1;4363:60:21;;;4419:1;4416;4409:12;4363:60;;4458:85;4535:7;4528:2;4517:9;4513:18;4500:32;4489:9;4485:48;4458:85;:::i;:::-;4562:8;;-1:-1:-1;4589:8:21;-1:-1:-1;4616:38:21;4649:3;4634:19;;4616:38;:::i;:::-;4606:48;;4673:38;4706:3;4695:9;4691:19;4673:38;:::i;:::-;4663:48;;4730:38;4763:3;4752:9;4748:19;4730:38;:::i;:::-;4720:48;;4788:38;4821:3;4810:9;4806:19;4788:38;:::i;:::-;4777:49;;3474:1358;;;;;;;;;;;;;;:::o;4837:315::-;4905:6;4913;4966:2;4954:9;4945:7;4941:23;4937:32;4934:52;;;4982:1;4979;4972:12;4934:52;5018:9;5005:23;4995:33;;5078:2;5067:9;5063:18;5050:32;5091:31;5116:5;5091:31;:::i;:::-;5141:5;5131:15;;;4837:315;;;;;:::o;5157:247::-;5216:6;5269:2;5257:9;5248:7;5244:23;5240:32;5237:52;;;5285:1;5282;5275:12;5237:52;5324:9;5311:23;5343:31;5368:5;5343:31;:::i;:::-;5393:5;5157:247;-1:-1:-1;;;5157:247:21:o;5409:380::-;5488:1;5484:12;;;;5531;;;5552:61;;5606:4;5598:6;5594:17;5584:27;;5552:61;5659:2;5651:6;5648:14;5628:18;5625:38;5622:161;;5705:10;5700:3;5696:20;5693:1;5686:31;5740:4;5737:1;5730:15;5768:4;5765:1;5758:15;5622:161;;5409:380;;;:::o;5794:337::-;5996:2;5978:21;;;6035:2;6015:18;;;6008:30;-1:-1:-1;;;6069:2:21;6054:18;;6047:43;6122:2;6107:18;;5794:337::o;6136:341::-;6338:2;6320:21;;;6377:2;6357:18;;;6350:30;-1:-1:-1;;;6411:2:21;6396:18;;6389:47;6468:2;6453:18;;6136:341::o;6825:127::-;6886:10;6881:3;6877:20;6874:1;6867:31;6917:4;6914:1;6907:15;6941:4;6938:1;6931:15;6957:125;7022:9;;;7043:10;;;7040:36;;;7056:18;;:::i;:::-;6957:125;;;;:::o;8034:128::-;8101:9;;;8122:11;;;8119:37;;;8136:18;;:::i;9399:799::-;9736:3;9725:9;9718:22;9699:4;9763:46;9804:3;9793:9;9789:19;9781:6;9763:46;:::i;:::-;9857:9;9849:6;9845:22;9840:2;9829:9;9825:18;9818:50;9885:33;9911:6;9903;9885:33;:::i;:::-;-1:-1:-1;;;;;9992:15:21;;;9987:2;9972:18;;9965:43;10039:2;10024:18;;10017:34;;;;-1:-1:-1;;10088:15:21;;;;10082:3;10067:19;;10060:44;9945:3;10120:19;;10113:35;10179:3;10164:19;10157:35;;;;9877:41;9399:799;-1:-1:-1;;9399:799:21:o;10203:251::-;10273:6;10326:2;10314:9;10305:7;10301:23;10297:32;10294:52;;;10342:1;10339;10332:12;10294:52;10374:9;10368:16;10393:31;10418:5;10393:31;:::i;10768:312::-;10847:6;10855;10908:2;10896:9;10887:7;10883:23;10879:32;10876:52;;;10924:1;10921;10914:12;10876:52;10956:9;10950:16;10975:31;11000:5;10975:31;:::i;:::-;11070:2;11055:18;;;;11049:25;11025:5;;11049:25;;-1:-1:-1;;;10768:312:21:o;11085:217::-;11125:1;11151;11141:132;;11195:10;11190:3;11186:20;11183:1;11176:31;11230:4;11227:1;11220:15;11258:4;11255:1;11248:15;11141:132;-1:-1:-1;11287:9:21;;11085:217::o;11307:168::-;11380:9;;;11411;;11428:15;;;11422:22;;11408:37;11398:71;;11449:18;;:::i;12048:277::-;12115:6;12168:2;12156:9;12147:7;12143:23;12139:32;12136:52;;;12184:1;12181;12174:12;12136:52;12216:9;12210:16;12269:5;12262:13;12255:21;12248:5;12245:32;12235:60;;12291:1;12288;12281:12;13376:135;13415:3;13436:17;;;13433:43;;13456:18;;:::i;:::-;-1:-1:-1;13503:1:21;13492:13;;13376:135::o;13516:127::-;13577:10;13572:3;13568:20;13565:1;13558:31;13608:4;13605:1;13598:15;13632:4;13629:1;13622:15;13774:545;13876:2;13871:3;13868:11;13865:448;;;13912:1;13937:5;13933:2;13926:17;13982:4;13978:2;13968:19;14052:2;14040:10;14036:19;14033:1;14029:27;14023:4;14019:38;14088:4;14076:10;14073:20;14070:47;;;-1:-1:-1;14111:4:21;14070:47;14166:2;14161:3;14157:12;14154:1;14150:20;14144:4;14140:31;14130:41;;14221:82;14239:2;14232:5;14229:13;14221:82;;;14284:17;;;14265:1;14254:13;14221:82;;;14225:3;;;13865:448;13774:545;;;:::o;14495:1352::-;14621:3;14615:10;14648:18;14640:6;14637:30;14634:56;;;14670:18;;:::i;:::-;14699:97;14789:6;14749:38;14781:4;14775:11;14749:38;:::i;:::-;14743:4;14699:97;:::i;:::-;14851:4;;14915:2;14904:14;;14932:1;14927:663;;;;15634:1;15651:6;15648:89;;;-1:-1:-1;15703:19:21;;;15697:26;15648:89;-1:-1:-1;;14452:1:21;14448:11;;;14444:24;14440:29;14430:40;14476:1;14472:11;;;14427:57;15750:81;;14897:944;;14927:663;13721:1;13714:14;;;13758:4;13745:18;;-1:-1:-1;;14963:20:21;;;15081:236;15095:7;15092:1;15089:14;15081:236;;;15184:19;;;15178:26;15163:42;;15276:27;;;;15244:1;15232:14;;;;15111:19;;15081:236;;;15085:3;15345:6;15336:7;15333:19;15330:201;;;15406:19;;;15400:26;-1:-1:-1;;15489:1:21;15485:14;;;15501:3;15481:24;15477:37;15473:42;15458:58;15443:74;;15330:201;-1:-1:-1;;;;;15577:1:21;15561:14;;;15557:22;15544:36;;-1:-1:-1;14495:1352:21:o;15852:267::-;15941:6;15936:3;15929:19;15993:6;15986:5;15979:4;15974:3;15970:14;15957:43;-1:-1:-1;16045:1:21;16020:16;;;16038:4;16016:27;;;16009:38;;;;16101:2;16080:15;;;-1:-1:-1;;16076:29:21;16067:39;;;16063:50;;15852:267::o;16124:870::-;16479:6;16468:9;16461:25;16522:3;16517:2;16506:9;16502:18;16495:31;16442:4;16549:63;16607:3;16596:9;16592:19;16584:6;16576;16549:63;:::i;:::-;16660:9;16652:6;16648:22;16643:2;16632:9;16628:18;16621:50;16694;16737:6;16729;16721;16694:50;:::i;:::-;16680:64;;16792:9;16784:6;16780:22;16775:2;16764:9;16760:18;16753:50;16820;16863:6;16855;16847;16820:50;:::i;:::-;16812:58;;;16919:10;16911:6;16907:23;16901:3;16890:9;16886:19;16879:52;16980:6;16972;16968:19;16962:3;16951:9;16947:19;16940:48;16124:870;;;;;;;;;;;;:::o;17406:422::-;17495:1;17538:5;17495:1;17552:270;17573:7;17563:8;17560:21;17552:270;;;17632:4;17628:1;17624:6;17620:17;17614:4;17611:27;17608:53;;;17641:18;;:::i;:::-;17691:7;17681:8;17677:22;17674:55;;;17711:16;;;;17674:55;17790:22;;;;17750:15;;;;17552:270;;;17556:3;17406:422;;;;;:::o;17833:806::-;17882:5;17912:8;17902:80;;-1:-1:-1;17953:1:21;17967:5;;17902:80;18001:4;17991:76;;-1:-1:-1;18038:1:21;18052:5;;17991:76;18083:4;18101:1;18096:59;;;;18169:1;18164:130;;;;18076:218;;18096:59;18126:1;18117:10;;18140:5;;;18164:130;18201:3;18191:8;18188:17;18185:43;;;18208:18;;:::i;:::-;-1:-1:-1;;18264:1:21;18250:16;;18279:5;;18076:218;;18378:2;18368:8;18365:16;18359:3;18353:4;18350:13;18346:36;18340:2;18330:8;18327:16;18322:2;18316:4;18313:12;18309:35;18306:77;18303:159;;;-1:-1:-1;18415:19:21;;;18447:5;;18303:159;18494:34;18519:8;18513:4;18494:34;:::i;:::-;18564:6;18560:1;18556:6;18552:19;18543:7;18540:32;18537:58;;;18575:18;;:::i;:::-;18613:20;;17833:806;-1:-1:-1;;;17833:806:21:o;18644:131::-;18704:5;18733:36;18760:8;18754:4;18733:36;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1640600","executionCost":"infinite","totalCost":"infinite"},"external":{"cancelProject(uint256)":"infinite","claimProjectTokens(uint256)":"infinite","commitOnProject(uint256)":"infinite","commitments(uint256,address)":"2693","count()":"2285","createProject(address,string,string,string,uint32,uint32,uint32,uint16)":"infinite","owner()":"2345","projects(uint256)":"infinite","renounceOwnership()":"infinite","transferOwnership(address)":"infinite","validateProject(uint256)":"infinite","withdrawOnProject(uint256)":"infinite"}},"methodIdentifiers":{"cancelProject(uint256)":"24941147","claimProjectTokens(uint256)":"60ae7c3b","commitOnProject(uint256)":"16509ee2","commitments(uint256,address)":"e90d4c06","count()":"06661abd","createProject(address,string,string,string,uint32,uint32,uint32,uint16)":"bb89bf75","owner()":"8da5cb5b","projects(uint256)":"107046bd","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","validateProject(uint256)":"57021469","withdrawOnProject(uint256)":"44a9ae8c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wethTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolFactoryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Committed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProjectCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fund\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"ProjectCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"startsAt\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"endsAt\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"target\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minInvest\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProjectValidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"claimProjectTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"commitOnProject\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"_startsAt\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endsAt\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_target\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_minInvest\",\"type\":\"uint16\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startsAt\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endsAt\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"target\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"minInvest\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"authorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"validateProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawOnProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FansSociety.sol\":\"FansSociety\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/FansSociety.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { Projects } from './Projects.sol';\\n\\ncontract FansSociety is Projects  {\\n    \\n    constructor(\\n        address _wethTokenAddress,\\n\\t\\taddress _tokenFactoryAddress, \\n\\t\\taddress _poolFactoryAddress\\n    ) Projects(_wethTokenAddress, _tokenFactoryAddress, _poolFactoryAddress) {\\n        \\n    }\\n\\n}\\n\",\"keccak256\":\"0xf9722a28aaf800eafb4cee4924f2290e8068cb57f452886e2a2499c67701ded0\",\"license\":\"MIT\"},\"contracts/Projects.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\n\\nimport { Initializable } from '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport { Ownable } from '@openzeppelin/contracts/access/Ownable.sol';\\n\\nimport { IProjectTokenFactory } from './tokens/interfaces/IProjectTokenFactory.sol';\\nimport { ITokensPoolFactory } from './pools/interfaces/ITokensPoolFactory.sol';\\n\\ncontract Projects is Ownable {\\n\\tstruct Project {\\n\\t\\tstring name;\\n\\t\\tstring description;\\n\\t\\tstring symbol;\\n\\t\\tuint256 fund;\\n\\t\\tuint256 liquidity;\\n\\t\\tuint32 startsAt;\\n\\t\\tuint32 endsAt;\\n\\t\\tuint32 target;\\n\\t\\tuint16 minInvest;\\n\\t\\tbool completed;\\n\\t\\taddress authorAddress;\\n\\t\\taddress tokenAddress;\\n\\t}\\n\\n\\taddress internal wethTokenAddress;\\n\\n\\taddress internal tokenFactoryAddress;\\n\\taddress internal poolFactoryAddress;\\n\\n\\tuint256 private constant FSOCIETY_SUPPLY = 27;\\n\\tuint256 private constant AUTHOR_SUPPLY = 27;\\n\\tuint256 private constant LIQUIDITY_SUPPLY = 30;\\n\\tuint256 private constant INVESTORS_SUPPLY = 35;\\n\\n\\tuint256 private constant MAX_DURATION = 604800; // 1 week\\n\\n\\tuint256 private constant PRECISION = 2;\\n\\n\\n\\tuint256 public count;\\n\\n\\tmapping(uint256 => Project) public projects;\\n\\n\\tmapping(uint256 => mapping(address => uint256)) public commitments;\\n\\n\\tevent ProjectCreated(\\n\\t\\tuint256 id,\\n\\t\\tstring name,\\n\\t\\tstring symbol,\\n\\t\\tstring description,\\n\\t\\tuint32 indexed startsAt,\\n\\t\\tuint32 indexed endsAt,\\n\\t\\tuint32 target,\\n\\t\\tuint16 minInvest,\\n\\t\\taddress indexed author\\n\\t);\\n\\n\\tevent ProjectCancelled(uint256 id);\\n\\n\\tevent Committed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent Withdrawed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent Claimed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent ProjectCompleted(uint256 indexed id, uint fund, uint liquidity);\\n\\n\\tevent ProjectValidated(uint256 indexed id);\\n\\n\\tmodifier onlyAuthor(uint256 _id) {\\n\\t\\trequire(msg.sender == projects[_id].authorAddress, 'Not author');\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier crowdfundingOpened(uint256 _id) {\\n\\t\\t//require(block.timestamp >= projects[_id].startsAt, 'not started');\\n\\t\\trequire(block.timestamp <= projects[_id].endsAt, 'Already ended');\\n\\t\\trequire(projects[_id].completed == false, 'Project completed');\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier crowdfundingClosed(uint256 _id) {\\n\\t\\trequire(\\n\\t\\t\\tblock.timestamp > projects[_id].endsAt || projects[_id].completed,\\n\\t\\t\\t'not closed'\\n\\t\\t);\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier isCommited(uint256 _id) {\\n\\t\\trequire(commitments[_id][msg.sender] >= 0, 'No commitment');\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(\\n\\t\\taddress _wethTokenAddress,\\n\\t\\taddress _tokenFactoryAddress, \\n\\t\\taddress _poolFactoryAddress\\n\\t) {\\n\\t\\twethTokenAddress = _wethTokenAddress;\\n\\t\\ttokenFactoryAddress = _tokenFactoryAddress;\\n\\t\\tpoolFactoryAddress = _poolFactoryAddress;\\n\\t}\\n\\n\\tfunction createProject(\\n\\t\\taddress _authorAddress,\\n\\t\\tstring calldata _name,\\n\\t\\tstring calldata _symbol,\\n\\t\\tstring calldata _description,\\n\\t\\tuint32 _startsAt,\\n\\t\\tuint32 _endsAt,\\n\\t\\tuint32 _target,\\n\\t\\tuint16 _minInvest\\n\\t) external onlyOwner {\\n\\t\\trequire(_startsAt >= block.timestamp, 'Invalid start time');\\n\\t\\trequire(_endsAt > _startsAt, 'Invalid end time');\\n\\t\\trequire(\\n\\t\\t\\t_endsAt <= block.timestamp + MAX_DURATION,\\n\\t\\t\\t'Maximum duration exceeded'\\n\\t\\t);\\n\\n\\t\\tcount++;\\n\\n\\t\\tprojects[count] = Project({\\n\\t\\t\\tname: _name,\\n\\t\\t\\tsymbol: _symbol,\\n\\t\\t\\tdescription: _description,\\n\\t\\t\\tfund: 0,\\n\\t\\t\\tliquidity: 0,\\n\\t\\t\\tstartsAt: _startsAt,\\n\\t\\t\\tendsAt: _endsAt,\\n\\t\\t\\ttarget: _target,\\n\\t\\t\\tminInvest: _minInvest,\\n\\t\\t\\tcompleted: false,\\n\\t\\t\\tauthorAddress: _authorAddress,\\n\\t\\t\\ttokenAddress: address(0)\\n\\t\\t});\\n\\n\\t\\temit ProjectCreated(\\n\\t\\t\\tcount,\\n\\t\\t\\t_name,\\n\\t\\t\\t_symbol,\\n\\t\\t\\t_description,\\n\\t\\t\\t_startsAt,\\n\\t\\t\\t_endsAt,\\n\\t\\t\\t_target,\\n\\t\\t\\t_minInvest,\\n\\t\\t\\t_authorAddress\\n\\t\\t);\\n\\t}\\n\\n\\tfunction cancelProject(uint256 _id) external onlyOwner crowdfundingOpened(_id) {\\n\\t\\trequire(projects[_id].startsAt > block.timestamp, 'Project already started');\\n\\t\\tdelete projects[_id];\\n\\t\\temit ProjectCancelled(_id);\\n\\t}\\n\\n\\tfunction commitOnProject(uint256 _id) external payable crowdfundingOpened(_id) {\\n\\t\\trequire(msg.value >= 0.01 ether, 'min 0.01 ether');\\n\\n\\t\\tProject memory project = projects[_id];\\n\\n\\t\\t(uint value, uint liquidity) = computeValueAndLiquidity(msg.value);\\n\\n\\t\\tproject.fund += value;\\n\\t\\tproject.liquidity += liquidity;\\n\\n\\t\\tcommitments[_id][msg.sender] += msg.value;\\n\\t\\temit Committed(_id, msg.sender, msg.value);\\n\\n\\t\\tif (project.fund >= project.target) {\\n\\t\\t\\tproject.completed = true;\\n\\t\\t\\temit ProjectCompleted(_id, project.fund, project.liquidity);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction withdrawOnProject(uint256 _id) external crowdfundingOpened(_id) isCommited(_id) {\\n\\t\\tuint256 commitment = commitments[_id][msg.sender];\\n\\n\\t\\t(uint value, uint liquidity) = computeValueAndLiquidity(commitment);\\n\\t\\tprojects[_id].fund -= value;\\n\\t\\tprojects[_id].liquidity -= liquidity;\\n\\n\\t\\tcommitments[_id][msg.sender] = 0;\\n\\n\\t\\t(bool sent, ) = msg.sender.call{ value: commitment }('');\\n\\t\\trequire(sent, 'withdraw failed');\\n\\n\\t\\temit Withdrawed(_id, msg.sender, commitment);\\n\\t}\\n\\n\\tfunction validateProject(uint256 _id) external onlyAuthor(_id) crowdfundingClosed(_id) {\\n\\t\\tProject memory project = projects[_id];\\n\\n\\t\\taddress tokenAddress = IProjectTokenFactory(tokenFactoryAddress).createToken(\\n\\t\\t\\tproject.name,\\n\\t\\t\\tproject.symbol,\\n\\t\\t\\taddress(this),\\n\\t\\t\\tFSOCIETY_SUPPLY,\\n\\t\\t\\tproject.authorAddress,\\n\\t\\t\\tAUTHOR_SUPPLY,\\n\\t\\t\\tINVESTORS_SUPPLY\\n\\t\\t);\\n\\n\\t\\t(address poolAddress, ) = ITokensPoolFactory(poolFactoryAddress).createPool(\\n\\t\\t\\ttokenAddress,\\n\\t\\t\\twethTokenAddress\\n\\t\\t);\\n\\n\\t\\t// TODO: add pool liquidity here \\n\\n\\t\\temit ProjectValidated(_id);\\n\\t}\\n\\n\\tfunction claimProjectTokens(uint256 _id) external crowdfundingClosed(_id) isCommited(_id) {\\n\\t\\tuint256 commitment = commitments[_id][msg.sender];\\n\\n\\t\\t(uint value, ) = computeValueAndLiquidity(commitment);\\n\\n\\t\\tuint256 tokenAmount = (INVESTORS_SUPPLY / projects[_id].fund) * value;\\n\\t\\t\\n\\t\\tIProjectTokenFactory(tokenFactoryAddress)\\n\\t\\t\\t.tokens(projects[_id].tokenAddress)\\n\\t\\t\\t.transfer(msg.sender, tokenAmount);\\n\\t}\\n\\n\\tfunction computeValueAndLiquidity(uint256 _value) private pure returns (uint256 amount, uint256 liquidity) {\\n\\t\\tuint256 _liquidity = (_value ** PRECISION) / 20; // 5%\\n\\t\\tuint256 _amount = (_value ** PRECISION) - liquidity;\\n\\t\\treturn (_amount, _liquidity);\\n\\t}\\n}\\n\",\"keccak256\":\"0x3a3a5924bc7d4134dfcad14a815f9adc02ed6d83f63e20ab4c66d137af38c2f7\",\"license\":\"MIT\"},\"contracts/pools/interfaces/ITokensPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface ITokensPool {\\n\\n}\\n\",\"keccak256\":\"0x7ac72d3ff0503a826a4212e471c74c4dae24afd341e8e3a838cea1b775a5f376\",\"license\":\"MIT\"},\"contracts/pools/interfaces/ITokensPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { ITokensPool } from './ITokensPool.sol';\\n\\ninterface ITokensPoolFactory {\\n    \\n    function createPool(\\n        address _token1,\\n        address _token2\\n    ) external returns (address poolAddress, bytes32 poolHash);\\n\\n    function getPoolByTokensPair(address _token1, address _token2) external view returns (ITokensPool);\\n\\n    function getPoolByHash(bytes32 _hash) external view returns (ITokensPool);\\n\\n    function getTokenPools(address _token) external view returns (address[] memory);\\n\\n}\\n\",\"keccak256\":\"0x2f4d87912043eaeb26ed509c678c2d69e46b63b8de92e553f46e8dd826fcd846\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IProjectTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { IERC20MetadataUpgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol';\\n\\ninterface IProjectTokenFactory {\\n    \\n    function tokens(address tokenAddress) external returns (IERC20MetadataUpgradeable);\\n\\n    function createToken(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsocietyAddress,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        uint256 _otherSupply\\n    ) external returns (address);\\n    \\n}\\n\",\"keccak256\":\"0xa878d9f6ec956830d7918773396406c2804119b6b924fa15ecee86cab720cf71\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1217,"contract":"contracts/FansSociety.sol:FansSociety","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2471,"contract":"contracts/FansSociety.sol:FansSociety","label":"wethTokenAddress","offset":0,"slot":"1","type":"t_address"},{"astId":2473,"contract":"contracts/FansSociety.sol:FansSociety","label":"tokenFactoryAddress","offset":0,"slot":"2","type":"t_address"},{"astId":2475,"contract":"contracts/FansSociety.sol:FansSociety","label":"poolFactoryAddress","offset":0,"slot":"3","type":"t_address"},{"astId":2495,"contract":"contracts/FansSociety.sol:FansSociety","label":"count","offset":0,"slot":"4","type":"t_uint256"},{"astId":2500,"contract":"contracts/FansSociety.sol:FansSociety","label":"projects","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(Project)2469_storage)"},{"astId":2506,"contract":"contracts/FansSociety.sol:FansSociety","label":"commitments","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_struct(Project)2469_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Projects.Project)","numberOfBytes":"32","value":"t_struct(Project)2469_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Project)2469_storage":{"encoding":"inplace","label":"struct Projects.Project","members":[{"astId":2446,"contract":"contracts/FansSociety.sol:FansSociety","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2448,"contract":"contracts/FansSociety.sol:FansSociety","label":"description","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2450,"contract":"contracts/FansSociety.sol:FansSociety","label":"symbol","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2452,"contract":"contracts/FansSociety.sol:FansSociety","label":"fund","offset":0,"slot":"3","type":"t_uint256"},{"astId":2454,"contract":"contracts/FansSociety.sol:FansSociety","label":"liquidity","offset":0,"slot":"4","type":"t_uint256"},{"astId":2456,"contract":"contracts/FansSociety.sol:FansSociety","label":"startsAt","offset":0,"slot":"5","type":"t_uint32"},{"astId":2458,"contract":"contracts/FansSociety.sol:FansSociety","label":"endsAt","offset":4,"slot":"5","type":"t_uint32"},{"astId":2460,"contract":"contracts/FansSociety.sol:FansSociety","label":"target","offset":8,"slot":"5","type":"t_uint32"},{"astId":2462,"contract":"contracts/FansSociety.sol:FansSociety","label":"minInvest","offset":12,"slot":"5","type":"t_uint16"},{"astId":2464,"contract":"contracts/FansSociety.sol:FansSociety","label":"completed","offset":14,"slot":"5","type":"t_bool"},{"astId":2466,"contract":"contracts/FansSociety.sol:FansSociety","label":"authorAddress","offset":0,"slot":"6","type":"t_address"},{"astId":2468,"contract":"contracts/FansSociety.sol:FansSociety","label":"tokenAddress","offset":0,"slot":"7","type":"t_address"}],"numberOfBytes":"256"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Projects.sol":{"Projects":{"abi":[{"inputs":[{"internalType":"address","name":"_wethTokenAddress","type":"address"},{"internalType":"address","name":"_tokenFactoryAddress","type":"address"},{"internalType":"address","name":"_poolFactoryAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Claimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Committed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"}],"name":"ProjectCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fund","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"}],"name":"ProjectCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":true,"internalType":"uint32","name":"startsAt","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"endsAt","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"target","type":"uint32"},{"indexed":false,"internalType":"uint16","name":"minInvest","type":"uint16"},{"indexed":true,"internalType":"address","name":"author","type":"address"}],"name":"ProjectCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"ProjectValidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawed","type":"event"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"cancelProject","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"claimProjectTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"commitOnProject","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"commitments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_authorAddress","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"uint32","name":"_startsAt","type":"uint32"},{"internalType":"uint32","name":"_endsAt","type":"uint32"},{"internalType":"uint32","name":"_target","type":"uint32"},{"internalType":"uint16","name":"_minInvest","type":"uint16"}],"name":"createProject","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"projects","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"fund","type":"uint256"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint32","name":"startsAt","type":"uint32"},{"internalType":"uint32","name":"endsAt","type":"uint32"},{"internalType":"uint32","name":"target","type":"uint32"},{"internalType":"uint16","name":"minInvest","type":"uint16"},{"internalType":"bool","name":"completed","type":"bool"},{"internalType":"address","name":"authorAddress","type":"address"},{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"validateProject","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"withdrawOnProject","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1233":{"entryPoint":null,"id":1233,"parameterSlots":0,"returnSlots":0},"@_2672":{"entryPoint":null,"id":2672,"parameterSlots":3,"returnSlots":0},"@_msgSender_2398":{"entryPoint":null,"id":2398,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1321":{"entryPoint":130,"id":1321,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":210,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":239,"id":null,"parameterSlots":2,"returnSlots":3}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:576:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"74:117:21","statements":[{"nodeType":"YulAssignment","src":"84:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"99:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"93:5:21"},"nodeType":"YulFunctionCall","src":"93:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"84:5:21"}]},{"body":{"nodeType":"YulBlock","src":"169:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"178:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"181:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"171:6:21"},"nodeType":"YulFunctionCall","src":"171:12:21"},"nodeType":"YulExpressionStatement","src":"171:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"128:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"139:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"154:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"150:3:21"},"nodeType":"YulFunctionCall","src":"150:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"163:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"146:3:21"},"nodeType":"YulFunctionCall","src":"146:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"135:3:21"},"nodeType":"YulFunctionCall","src":"135:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"125:2:21"},"nodeType":"YulFunctionCall","src":"125:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"118:6:21"},"nodeType":"YulFunctionCall","src":"118:50:21"},"nodeType":"YulIf","src":"115:70:21"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"53:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:21","type":""}],"src":"14:177:21"},{"body":{"nodeType":"YulBlock","src":"311:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"357:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"366:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"369:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"359:6:21"},"nodeType":"YulFunctionCall","src":"359:12:21"},"nodeType":"YulExpressionStatement","src":"359:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"332:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"341:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"328:3:21"},"nodeType":"YulFunctionCall","src":"328:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"353:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"324:3:21"},"nodeType":"YulFunctionCall","src":"324:32:21"},"nodeType":"YulIf","src":"321:52:21"},{"nodeType":"YulAssignment","src":"382:50:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"392:29:21"},"nodeType":"YulFunctionCall","src":"392:40:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"382:6:21"}]},{"nodeType":"YulAssignment","src":"441:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:21"},"nodeType":"YulFunctionCall","src":"481:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"451:29:21"},"nodeType":"YulFunctionCall","src":"451:49:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"441:6:21"}]},{"nodeType":"YulAssignment","src":"509:59:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"564:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"549:3:21"},"nodeType":"YulFunctionCall","src":"549:18:21"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"519:29:21"},"nodeType":"YulFunctionCall","src":"519:49:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"509:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"261:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"272:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"284:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"292:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"300:6:21","type":""}],"src":"196:378:21"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002154380380620021548339810160408190526200003491620000ef565b6200003f3362000082565b600180546001600160a01b039485166001600160a01b03199182161790915560028054938516938216939093179092556003805491909316911617905562000139565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000ea57600080fd5b919050565b6000806000606084860312156200010557600080fd5b6200011084620000d2565b92506200012060208501620000d2565b91506200013060408501620000d2565b90509250925092565b61200b80620001496000396000f3fe6080604052600436106100a75760003560e01c806360ae7c3b1161006457806360ae7c3b14610182578063715018a6146101a25780638da5cb5b146101b7578063bb89bf75146101df578063e90d4c06146101ff578063f2fde38b1461023757600080fd5b806306661abd146100ac578063107046bd146100d557806316509ee21461010d578063249411471461012257806344a9ae8c146101425780635702146914610162575b600080fd5b3480156100b857600080fd5b506100c260045481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100f56100f036600461185c565b610257565b6040516100cc9c9b9a999897969594939291906118bb565b61012061011b36600461185c565b610472565b005b34801561012e57600080fd5b5061012061013d36600461185c565b6108a6565b34801561014e57600080fd5b5061012061015d36600461185c565b610a48565b34801561016e57600080fd5b5061012061017d36600461185c565b610c1a565b34801561018e57600080fd5b5061012061019d36600461185c565b61108d565b3480156101ae57600080fd5b50610120611261565b3480156101c357600080fd5b506000546040516001600160a01b0390911681526020016100cc565b3480156101eb57600080fd5b506101206101fa366004611a02565b611275565b34801561020b57600080fd5b506100c261021a366004611af3565b600660209081526000928352604080842090915290825290205481565b34801561024357600080fd5b50610120610252366004611b23565b6116ab565b60056020526000908152604090208054819061027290611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461029e90611b47565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b50505050509080600101805461030090611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461032c90611b47565b80156103795780601f1061034e57610100808354040283529160200191610379565b820191906000526020600020905b81548152906001019060200180831161035c57829003601f168201915b50505050509080600201805461038e90611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546103ba90611b47565b80156104075780601f106103dc57610100808354040283529160200191610407565b820191906000526020600020905b8154815290600101906020018083116103ea57829003601f168201915b50505060038401546004850154600586015460068701546007909701549596929591945063ffffffff8082169450600160201b8204811693600160401b83049091169261ffff600160601b8404169260ff600160701b90910416916001600160a01b0390811691168c565b600081815260056020819052604090912001548190600160201b900463ffffffff164211156104bc5760405162461bcd60e51b81526004016104b390611b81565b60405180910390fd5b60008181526005602081905260409091200154600160701b900460ff16156104f65760405162461bcd60e51b81526004016104b390611ba8565b662386f26fc1000034101561053e5760405162461bcd60e51b815260206004820152600e60248201526d36b4b710181718189032ba3432b960911b60448201526064016104b3565b6000828152600560205260408082208151610180810190925280548290829061056690611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461059290611b47565b80156105df5780601f106105b4576101008083540402835291602001916105df565b820191906000526020600020905b8154815290600101906020018083116105c257829003601f168201915b505050505081526020016001820180546105f890611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461062490611b47565b80156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b5050505050815260200160028201805461068a90611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546106b690611b47565b80156107035780601f106106d857610100808354040283529160200191610703565b820191906000526020600020905b8154815290600101906020018083116106e657829003601f168201915b50505091835250506003820154602082015260048201546040820152600582015463ffffffff8082166060840152600160201b820481166080840152600160401b82041660a0830152600160601b810461ffff1660c0830152600160701b900460ff16151560e082015260068201546001600160a01b039081166101008301526007909201549091166101209091015290506000806107a134611724565b9150915081836060018181516107b79190611be9565b9052506080830180518291906107ce908390611be9565b9052506000858152600660209081526040808320338452909152812080543492906107fa908490611be9565b9091555050604051348152339086907f245cbccbc6875e4b0475a653568fd4f7c2dae5fb8929e33c0d66dc530ba11b009060200160405180910390a38260e0015163ffffffff1683606001511061089f5760016101208401526060830151608084015160405187927ff418560cae8df9d7d7fb63eca7a926821d509b9751b541b3aac4249c34bafa639261089692918252602082015260400190565b60405180910390a25b5050505050565b6108ae611764565b600081815260056020819052604090912001548190600160201b900463ffffffff164211156108ef5760405162461bcd60e51b81526004016104b390611b81565b60008181526005602081905260409091200154600160701b900460ff16156109295760405162461bcd60e51b81526004016104b390611ba8565b600082815260056020819052604090912001544263ffffffff909116116109925760405162461bcd60e51b815260206004820152601760248201527f50726f6a65637420616c7265616479207374617274656400000000000000000060448201526064016104b3565b6000828152600560205260408120906109ab828261180e565b6109b960018301600061180e565b6109c760028301600061180e565b5060006003820181905560048201556005810180546effffffffffffffffffffffffffffff191690556006810180546001600160a01b03199081169091556007909101805490911690556040518281527fe3805ed669490875ae87c5c8b1ad6ecca0e5e67305a833926d0d4317c4822fc09060200160405180910390a15050565b600081815260056020819052604090912001548190600160201b900463ffffffff16421115610a895760405162461bcd60e51b81526004016104b390611b81565b60008181526005602081905260409091200154600160701b900460ff1615610ac35760405162461bcd60e51b81526004016104b390611ba8565b6000828152600660209081526040808320338452909152812054839180610ae983611724565b600088815260056020526040812060030180549395509193508492610b0f908490611c02565b909155505060008681526005602052604081206004018054839290610b35908490611c02565b909155505060008681526006602090815260408083203380855292528083208390555185908381818185875af1925050503d8060008114610b92576040519150601f19603f3d011682016040523d82523d6000602084013e610b97565b606091505b5050905080610bda5760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b60448201526064016104b3565b604051848152339088907f7fd902d6e186354d1617b957fc4cb4a144f44a19cc5c4525cfb772d707c405c29060200160405180910390a350505050505050565b60008181526005602052604090206006015481906001600160a01b03163314610c725760405162461bcd60e51b815260206004820152600a6024820152692737ba1030baba3437b960b11b60448201526064016104b3565b600082815260056020819052604090912001548290600160201b900463ffffffff16421180610cba575060008181526005602081905260409091200154600160701b900460ff165b610cf35760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104b3565b60008381526005602052604080822081516101808101909252805482908290610d1b90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4790611b47565b8015610d945780601f10610d6957610100808354040283529160200191610d94565b820191906000526020600020905b815481529060010190602001808311610d7757829003601f168201915b50505050508152602001600182018054610dad90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd990611b47565b8015610e265780601f10610dfb57610100808354040283529160200191610e26565b820191906000526020600020905b815481529060010190602001808311610e0957829003601f168201915b50505050508152602001600282018054610e3f90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6b90611b47565b8015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b505050918352505060038201546020820152600480830154604080840191909152600584015463ffffffff8082166060860152600160201b820481166080860152600160401b82041660a0850152600160601b810461ffff1660c0850152600160701b900460ff16151560e084015260068401546001600160a01b0390811661010085015260079094015484166101209093019290925260025484518584015161014087015194516325b211eb60e11b81529697506000969290951694634b6423d694610f9494929391923092601b9291839160239101611c15565b6020604051808303816000875af1158015610fb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd79190611c6f565b60035460015460405163e343361560e01b81526001600160a01b038085166004830152918216602482015292935060009291169063e34336159060440160408051808303816000875af1158015611032573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110569190611c8c565b5060405190915086907fbc8073ff7d7bd2ab93612911916e7941431e9bae6df21f172a7f4ace4284b80490600090a2505050505050565b600081815260056020819052604090912001548190600160201b900463ffffffff164211806110d5575060008181526005602081905260409091200154600160701b900460ff165b61110e5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104b3565b6000828152600660209081526040808320338452909152812054839161113382611724565b50600086815260056020526040812060030154919250908290611157906023611cba565b6111619190611cdc565b6002546000888152600560205260409081902060070154905163e486033960e01b81526001600160a01b039182166004820152929350169063e4860339906024016020604051808303816000875af11580156111c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e59190611c6f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af1158015611234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112589190611cf3565b50505050505050565b611269611764565b61127360006117be565b565b61127d611764565b428463ffffffff1610156112c85760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642073746172742074696d6560701b60448201526064016104b3565b8363ffffffff168363ffffffff16116113165760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420656e642074696d6560801b60448201526064016104b3565b61132362093a8042611be9565b8363ffffffff1611156113785760405162461bcd60e51b815260206004820152601960248201527f4d6178696d756d206475726174696f6e2065786365656465640000000000000060448201526064016104b3565b6004805490600061138883611d15565b91905055506040518061018001604052808b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815291810191908990899081908401838280828437600092019190915250505090825250604080516020601f8c018190048102820181019092528a815291810191908b908b9081908401838280828437600081840152601f19601f82011690508083019250505050505050815260200160008152602001600081526020018563ffffffff1681526020018463ffffffff1681526020018363ffffffff1681526020018261ffff1681526020016000151581526020018c6001600160a01b0316815260200160006001600160a01b031681525060056000600454815260200190815260200160002060008201518160000190816114e59190611d93565b50602082015160018201906114fa9082611d93565b506040820151600282019061150f9082611d93565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160050160046101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160050160086101000a81548163ffffffff021916908363ffffffff16021790555061010082015181600501600c6101000a81548161ffff021916908361ffff16021790555061012082015181600501600e6101000a81548160ff0219169083151502179055506101408201518160060160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050508a6001600160a01b03168363ffffffff168563ffffffff167f49230f399aeb93ae9a7a3d2ee455e764a5b042340225e7e2ec99dde6f7e9bf8d6004548e8e8e8e8e8e8c8c60405161169699989796959493929190611e7c565b60405180910390a45050505050505050505050565b6116b3611764565b6001600160a01b0381166117185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b3565b611721816117be565b50565b600080806014611735600286611fc9565b61173f9190611cba565b905060008261174f600287611fc9565b6117599190611c02565b959194509092505050565b6000546001600160a01b031633146112735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b50805461181a90611b47565b6000825580601f1061182a575050565b601f01602090049060005260206000209081019061172191905b808211156118585760008155600101611844565b5090565b60006020828403121561186e57600080fd5b5035919050565b6000815180845260005b8181101561189b5760208185018101518683018201520161187f565b506000602082860101526020601f19601f83011685010191505092915050565b610180815260006118d061018083018f611875565b82810360208401526118e2818f611875565b905082810360408401526118f6818e611875565b9150508a606083015289608083015263ffffffff808a1660a084015280891660c084015280881660e08401525061ffff861661010083015261193d61012083018615159052565b6001600160a01b0384166101408301526001600160a01b0383166101608301529d9c50505050505050505050505050565b6001600160a01b038116811461172157600080fd5b803561198e8161196e565b919050565b60008083601f8401126119a557600080fd5b50813567ffffffffffffffff8111156119bd57600080fd5b6020830191508360208285010111156119d557600080fd5b9250929050565b803563ffffffff8116811461198e57600080fd5b803561ffff8116811461198e57600080fd5b60008060008060008060008060008060006101008c8e031215611a2457600080fd5b611a2d8c611983565b9a5067ffffffffffffffff8060208e01351115611a4957600080fd5b611a598e60208f01358f01611993565b909b50995060408d0135811015611a6f57600080fd5b611a7f8e60408f01358f01611993565b909950975060608d0135811015611a9557600080fd5b50611aa68d60608e01358e01611993565b9096509450611ab760808d016119dc565b9350611ac560a08d016119dc565b9250611ad360c08d016119dc565b9150611ae160e08d016119f0565b90509295989b509295989b9093969950565b60008060408385031215611b0657600080fd5b823591506020830135611b188161196e565b809150509250929050565b600060208284031215611b3557600080fd5b8135611b408161196e565b9392505050565b600181811c90821680611b5b57607f821691505b602082108103611b7b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600d908201526c105b1c9958591e48195b991959609a1b604082015260600190565b602080825260119082015270141c9bda9958dd0818dbdb5c1b195d1959607a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611bfc57611bfc611bd3565b92915050565b81810381811115611bfc57611bfc611bd3565b60e081526000611c2860e083018a611875565b8281036020840152611c3a818a611875565b6001600160a01b0398891660408501526060840197909752505092909416608083015260a082015260c0019190915292915050565b600060208284031215611c8157600080fd5b8151611b408161196e565b60008060408385031215611c9f57600080fd5b8251611caa8161196e565b6020939093015192949293505050565b600082611cd757634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417611bfc57611bfc611bd3565b600060208284031215611d0557600080fd5b81518015158114611b4057600080fd5b600060018201611d2757611d27611bd3565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f821115611d8e57600081815260208120601f850160051c81016020861015611d6b5750805b601f850160051c820191505b81811015611d8a57828155600101611d77565b5050505b505050565b815167ffffffffffffffff811115611dad57611dad611d2e565b611dc181611dbb8454611b47565b84611d44565b602080601f831160018114611df65760008415611dde5750858301515b600019600386901b1c1916600185901b178555611d8a565b600085815260208120601f198616915b82811015611e2557888601518255948401946001909101908401611e06565b5085821015611e435787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208201526000611e9660c083018a8c611e53565b8281036040840152611ea981898b611e53565b90508281036060840152611ebe818789611e53565b91505063ffffffff8416608083015261ffff831660a08301529a9950505050505050505050565b600181815b80851115611f20578160001904821115611f0657611f06611bd3565b80851615611f1357918102915b93841c9390800290611eea565b509250929050565b600082611f3757506001611bfc565b81611f4457506000611bfc565b8160018114611f5a5760028114611f6457611f80565b6001915050611bfc565b60ff841115611f7557611f75611bd3565b50506001821b611bfc565b5060208310610133831016604e8410600b8410161715611fa3575081810a611bfc565b611fad8383611ee5565b8060001904821115611fc157611fc1611bd3565b029392505050565b6000611b408383611f2856fea2646970667358221220d08946b677167cc5ab6a9b9e8e5c29c23d4179a651c935fb92b0fd9335adc8d264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2154 CODESIZE SUB DUP1 PUSH3 0x2154 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0xEF JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x82 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH3 0x139 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x110 DUP5 PUSH3 0xD2 JUMP JUMPDEST SWAP3 POP PUSH3 0x120 PUSH1 0x20 DUP6 ADD PUSH3 0xD2 JUMP JUMPDEST SWAP2 POP PUSH3 0x130 PUSH1 0x40 DUP6 ADD PUSH3 0xD2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x200B DUP1 PUSH3 0x149 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60AE7C3B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x60AE7C3B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xBB89BF75 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xE90D4C06 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x107046BD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x16509EE2 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x24941147 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x44A9AE8C EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x57021469 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x1261 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1275 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x272 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29E SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32C SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x379 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x379 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x38E SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BA SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x407 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x407 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 POP PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP5 POP PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP4 PUSH1 0x1 PUSH1 0x40 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP3 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x60 SHL DUP5 DIV AND SWAP3 PUSH1 0xFF PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP13 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x36B4B710181718189032BA3432B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x180 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x566 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x592 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x5F8 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x624 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x671 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x646 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x671 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x654 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x68A SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B6 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x703 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x703 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SHL DUP2 DIV PUSH2 0xFFFF AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x7 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x7A1 CALLVALUE PUSH2 0x1724 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP4 PUSH1 0x60 ADD DUP2 DUP2 MLOAD PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x80 DUP4 ADD DUP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x7CE SWAP1 DUP4 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x7FA SWAP1 DUP5 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 DUP7 SWAP1 PUSH32 0x245CBCCBC6875E4B0475A653568FD4F7C2DAE5FB8929E33C0D66DC530BA11B00 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP3 PUSH1 0xE0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x60 ADD MLOAD LT PUSH2 0x89F JUMPI PUSH1 0x1 PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD DUP8 SWAP3 PUSH32 0xF418560CAE8DF9D7D7FB63ECA7A926821D509B9751B541B3AAC4249C34BAFA63 SWAP3 PUSH2 0x896 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8AE PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND GT PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A65637420616C72656164792073746172746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x9AB DUP3 DUP3 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x9B9 PUSH1 0x1 DUP4 ADD PUSH1 0x0 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x180E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x7 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xE3805ED669490875AE87C5C8B1AD6ECCA0E5E67305A833926D0D4317C4822FC0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP4 SWAP2 DUP1 PUSH2 0xAE9 DUP4 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP DUP5 SWAP3 PUSH2 0xB0F SWAP1 DUP5 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB35 SWAP1 DUP5 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE MLOAD DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1DDA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 DUP9 SWAP1 PUSH32 0x7FD902D6E186354D1617B957FC4CB4A144F44A19CC5C4525CFB772D707C405C2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA1030BABA3437B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT DUP1 PUSH2 0xCBA JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD0818DB1BDCD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x180 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xD1B SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD47 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD69 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xDAD SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDD9 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xE3F SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE6B SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SHL DUP2 DIV PUSH2 0xFFFF AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x7 SWAP1 SWAP5 ADD SLOAD DUP5 AND PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 SLOAD DUP5 MLOAD DUP6 DUP5 ADD MLOAD PUSH2 0x140 DUP8 ADD MLOAD SWAP5 MLOAD PUSH4 0x25B211EB PUSH1 0xE1 SHL DUP2 MSTORE SWAP7 SWAP8 POP PUSH1 0x0 SWAP7 SWAP3 SWAP1 SWAP6 AND SWAP5 PUSH4 0x4B6423D6 SWAP5 PUSH2 0xF94 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 ADDRESS SWAP3 PUSH1 0x1B SWAP3 SWAP2 DUP4 SWAP2 PUSH1 0x23 SWAP2 ADD PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD7 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3433615 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0xE3433615 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1032 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1056 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP7 SWAP1 PUSH32 0xBC8073FF7D7BD2AB93612911916E7941431E9BAE6DF21F172A7F4ACE4284B804 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT DUP1 PUSH2 0x10D5 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD0818DB1BDCD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP4 SWAP2 PUSH2 0x1133 DUP3 PUSH2 0x1724 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 PUSH2 0x1157 SWAP1 PUSH1 0x23 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP1 MLOAD PUSH4 0xE4860339 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xE4860339 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E5 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1234 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1258 SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1269 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x1273 PUSH1 0x0 PUSH2 0x17BE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x127D PUSH2 0x1764 JUMP JUMPDEST TIMESTAMP DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642073746172742074696D65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420656E642074696D65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1323 PUSH3 0x93A80 TIMESTAMP PUSH2 0x1BE9 JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1378 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206475726174696F6E20657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1388 DUP4 PUSH2 0x1D15 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x14FA SWAP1 DUP3 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x150F SWAP1 DUP3 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND PUSH32 0x49230F399AEB93AE9A7A3D2EE455E764A5B042340225E7E2EC99DDE6F7E9BF8D PUSH1 0x4 SLOAD DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1696 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16B3 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1721 DUP2 PUSH2 0x17BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x14 PUSH2 0x1735 PUSH1 0x2 DUP7 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x174F PUSH1 0x2 DUP8 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0x1759 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x181A SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x182A JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1721 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1844 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x189B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x187F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18D0 PUSH2 0x180 DUP4 ADD DUP16 PUSH2 0x1875 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18E2 DUP2 DUP16 PUSH2 0x1875 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x18F6 DUP2 DUP15 PUSH2 0x1875 JUMP JUMPDEST SWAP2 POP POP DUP11 PUSH1 0x60 DUP4 ADD MSTORE DUP10 PUSH1 0x80 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 DUP11 AND PUSH1 0xA0 DUP5 ADD MSTORE DUP1 DUP10 AND PUSH1 0xC0 DUP5 ADD MSTORE DUP1 DUP9 AND PUSH1 0xE0 DUP5 ADD MSTORE POP PUSH2 0xFFFF DUP7 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x193D PUSH2 0x120 DUP4 ADD DUP7 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x160 DUP4 ADD MSTORE SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x198E DUP2 PUSH2 0x196E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x198E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x198E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x1A24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2D DUP13 PUSH2 0x1983 JUMP JUMPDEST SWAP11 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x20 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x1A49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A59 DUP15 PUSH1 0x20 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x1A6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7F DUP15 PUSH1 0x40 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA6 DUP14 PUSH1 0x60 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x1AB7 PUSH1 0x80 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP4 POP PUSH2 0x1AC5 PUSH1 0xA0 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP3 POP PUSH2 0x1AD3 PUSH1 0xC0 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE1 PUSH1 0xE0 DUP14 ADD PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B18 DUP2 PUSH2 0x196E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B40 DUP2 PUSH2 0x196E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E48195B991959 PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x141C9BDA9958DD0818DBDB5C1B195D1959 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C28 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x1875 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C3A DUP2 DUP11 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP SWAP3 SWAP1 SWAP5 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B40 DUP2 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x1CAA DUP2 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CD7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D27 JUMPI PUSH2 0x1D27 PUSH2 0x1BD3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1D6B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D77 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAD JUMPI PUSH2 0x1DAD PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x1DC1 DUP2 PUSH2 0x1DBB DUP5 SLOAD PUSH2 0x1B47 JUMP JUMPDEST DUP5 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DF6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1DDE JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E25 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E06 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E43 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST DUP10 DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1E96 PUSH1 0xC0 DUP4 ADD DUP11 DUP13 PUSH2 0x1E53 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1EA9 DUP2 DUP10 DUP12 PUSH2 0x1E53 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1EBE DUP2 DUP8 DUP10 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1F20 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F06 PUSH2 0x1BD3 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1F13 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1EEA JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F37 JUMPI POP PUSH1 0x1 PUSH2 0x1BFC JUMP JUMPDEST DUP2 PUSH2 0x1F44 JUMPI POP PUSH1 0x0 PUSH2 0x1BFC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F5A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F64 JUMPI PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1BFC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F75 JUMPI PUSH2 0x1F75 PUSH2 0x1BD3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1BFC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1FA3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x1FAD DUP4 DUP4 PUSH2 0x1EE5 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1FC1 JUMPI PUSH2 0x1FC1 PUSH2 0x1BD3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B40 DUP4 DUP4 PUSH2 0x1F28 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP10 CHAINID 0xB6 PUSH24 0x167CC5AB6A9B9E8E5C29C23D4179A651C935FB92B0FD9335 0xAD 0xC8 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"467:5686:14:-:0;;;2542:242;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:6;719:10:12;936:18:6;:32::i;:::-;2654:16:14;:36;;-1:-1:-1;;;;;2654:36:14;;;-1:-1:-1;;;;;;2654:36:14;;;;;;;2694:19;:42;;;;;;;;;;;;;;;2740:18;:40;;;;;;;;;;;467:5686;;2433:187:6;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:6;;;-1:-1:-1;;;;;;2541:17:6;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:177:21:-;93:13;;-1:-1:-1;;;;;135:31:21;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;467:5686:14;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_1264":{"entryPoint":5988,"id":1264,"parameterSlots":0,"returnSlots":0},"@_msgSender_2398":{"entryPoint":null,"id":2398,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1321":{"entryPoint":6078,"id":1321,"parameterSlots":1,"returnSlots":0},"@cancelProject_2787":{"entryPoint":2214,"id":2787,"parameterSlots":1,"returnSlots":0},"@claimProjectTokens_3053":{"entryPoint":4237,"id":3053,"parameterSlots":1,"returnSlots":0},"@commitOnProject_2871":{"entryPoint":1138,"id":2871,"parameterSlots":1,"returnSlots":0},"@commitments_2506":{"entryPoint":null,"id":2506,"parameterSlots":0,"returnSlots":0},"@computeValueAndLiquidity_3085":{"entryPoint":5924,"id":3085,"parameterSlots":1,"returnSlots":2},"@count_2495":{"entryPoint":null,"id":2495,"parameterSlots":0,"returnSlots":0},"@createProject_2756":{"entryPoint":4725,"id":2756,"parameterSlots":11,"returnSlots":0},"@owner_1250":{"entryPoint":null,"id":1250,"parameterSlots":0,"returnSlots":1},"@projects_2500":{"entryPoint":599,"id":2500,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_1278":{"entryPoint":4705,"id":1278,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1301":{"entryPoint":5803,"id":1301,"parameterSlots":1,"returnSlots":0},"@validateProject_2999":{"entryPoint":3098,"id":2999,"parameterSlots":1,"returnSlots":0},"@withdrawOnProject_2945":{"entryPoint":2632,"id":2945,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":6531,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":6547,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":6947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":7279,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes32_fromMemory":{"entryPoint":7308,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptrt_uint32t_uint32t_uint32t_uint16":{"entryPoint":6658,"id":null,"parameterSlots":2,"returnSlots":11},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":7411,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20MetadataUpgradeable_$883_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":6899,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint16":{"entryPoint":6640,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_uint32":{"entryPoint":6620,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":6261,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_calldata":{"entryPoint":7763,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7189,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__fromStack_reversed":{"entryPoint":6331,"id":null,"parameterSlots":13,"returnSlots":1},"abi_encode_tuple_t_stringliteral_03a0ef2274e5fa9c92bd6c8904f1025dd04b34d1da74eba1106c91ebdbd13a59__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7041,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_268b2b3ef04afe4685fdbcff6cb683aa408f3edfff411f4ac3bbfee177e0bffa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4762d97070854ffa537667d2f87773fc610015ed3ee39aef0aef6647d23f7004__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6ccad79e7aa285c9f3f2db83e30790c7046ceac0d7d86d7990286517708fb5ee__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a3a9eb15a1903ce0ba5279cfeb2e00d127b5a6f2993d14812bc6864e4dd646bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a3b6d4b23ae4bbd8dffd90f5160a835673157044abc6160caab696199469b553__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b66f79849fb2a1aeae618e045c8144ee98af31f7d75c8241357798f6fb27a16b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bff8fba7e8290554d856a3fb22093bf87bdf5e84742e561d9c5dea6562588f74__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7080,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cf1cbb480479ea4d7c3f4f3b5a2d1e356ab6d98c8dec1739a2a160b41897be8e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f79adeb066186ecb6bfb5c8311500863e681b7aa46040b41ed874ebc28bd54f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr_t_string_calldata_ptr_t_uint32_t_uint16__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint32_t_uint16__fromStack_reversed":{"entryPoint":7804,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7145,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7354,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":7909,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":8137,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":7976,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7388,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7170,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":7492,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":7571,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6983,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":7445,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7123,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7470,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":6510,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19138:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:21","statements":[{"nodeType":"YulAssignment","src":"125:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:21"},"nodeType":"YulFunctionCall","src":"133:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:21"},"nodeType":"YulFunctionCall","src":"160:25:21"},"nodeType":"YulExpressionStatement","src":"160:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:21","type":""}],"src":"14:177:21"},{"body":{"nodeType":"YulBlock","src":"266:110:21","statements":[{"body":{"nodeType":"YulBlock","src":"312:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"321:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"324:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"314:6:21"},"nodeType":"YulFunctionCall","src":"314:12:21"},"nodeType":"YulExpressionStatement","src":"314:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"287:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"296:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"283:3:21"},"nodeType":"YulFunctionCall","src":"283:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"308:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"279:3:21"},"nodeType":"YulFunctionCall","src":"279:32:21"},"nodeType":"YulIf","src":"276:52:21"},{"nodeType":"YulAssignment","src":"337:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"360:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"347:12:21"},"nodeType":"YulFunctionCall","src":"347:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"337:6:21"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"232:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"243:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"255:6:21","type":""}],"src":"196:180:21"},{"body":{"nodeType":"YulBlock","src":"431:373:21","statements":[{"nodeType":"YulVariableDeclaration","src":"441:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"461:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"455:5:21"},"nodeType":"YulFunctionCall","src":"455:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"445:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"483:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"488:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"476:6:21"},"nodeType":"YulFunctionCall","src":"476:19:21"},"nodeType":"YulExpressionStatement","src":"476:19:21"},{"nodeType":"YulVariableDeclaration","src":"504:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"513:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"508:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"575:110:21","statements":[{"nodeType":"YulVariableDeclaration","src":"589:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"599:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"593:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"631:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"636:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"627:3:21"},"nodeType":"YulFunctionCall","src":"627:11:21"},{"name":"_1","nodeType":"YulIdentifier","src":"640:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"623:3:21"},"nodeType":"YulFunctionCall","src":"623:20:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"},{"name":"i","nodeType":"YulIdentifier","src":"666:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"655:3:21"},"nodeType":"YulFunctionCall","src":"655:13:21"},{"name":"_1","nodeType":"YulIdentifier","src":"670:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"651:3:21"},"nodeType":"YulFunctionCall","src":"651:22:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"645:5:21"},"nodeType":"YulFunctionCall","src":"645:29:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"616:6:21"},"nodeType":"YulFunctionCall","src":"616:59:21"},"nodeType":"YulExpressionStatement","src":"616:59:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"534:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"537:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"531:2:21"},"nodeType":"YulFunctionCall","src":"531:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"545:21:21","statements":[{"nodeType":"YulAssignment","src":"547:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"556:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"559:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"552:3:21"},"nodeType":"YulFunctionCall","src":"552:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"547:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"527:3:21","statements":[]},"src":"523:162:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"709:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"714:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"705:3:21"},"nodeType":"YulFunctionCall","src":"705:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"723:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"701:3:21"},"nodeType":"YulFunctionCall","src":"701:27:21"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"694:6:21"},"nodeType":"YulFunctionCall","src":"694:38:21"},"nodeType":"YulExpressionStatement","src":"694:38:21"},{"nodeType":"YulAssignment","src":"741:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"756:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"769:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"777:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:21"},"nodeType":"YulFunctionCall","src":"765:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"786:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"782:3:21"},"nodeType":"YulFunctionCall","src":"782:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"761:3:21"},"nodeType":"YulFunctionCall","src":"761:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"752:3:21"},"nodeType":"YulFunctionCall","src":"752:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"793:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"748:3:21"},"nodeType":"YulFunctionCall","src":"748:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"741:3:21"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"408:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"415:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"423:3:21","type":""}],"src":"381:423:21"},{"body":{"nodeType":"YulBlock","src":"850:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"867:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"886:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"879:6:21"},"nodeType":"YulFunctionCall","src":"879:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"872:6:21"},"nodeType":"YulFunctionCall","src":"872:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"860:6:21"},"nodeType":"YulFunctionCall","src":"860:34:21"},"nodeType":"YulExpressionStatement","src":"860:34:21"}]},"name":"abi_encode_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"834:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"841:3:21","type":""}],"src":"809:91:21"},{"body":{"nodeType":"YulBlock","src":"949:60:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"966:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"975:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"990:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"995:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"986:3:21"},"nodeType":"YulFunctionCall","src":"986:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"999:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"982:3:21"},"nodeType":"YulFunctionCall","src":"982:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"971:3:21"},"nodeType":"YulFunctionCall","src":"971:31:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"959:6:21"},"nodeType":"YulFunctionCall","src":"959:44:21"},"nodeType":"YulExpressionStatement","src":"959:44:21"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"933:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"940:3:21","type":""}],"src":"905:104:21"},{"body":{"nodeType":"YulBlock","src":"1471:830:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1488:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1499:3:21","type":"","value":"384"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1481:6:21"},"nodeType":"YulFunctionCall","src":"1481:22:21"},"nodeType":"YulExpressionStatement","src":"1481:22:21"},{"nodeType":"YulVariableDeclaration","src":"1512:60:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1544:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1556:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1567:3:21","type":"","value":"384"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1552:3:21"},"nodeType":"YulFunctionCall","src":"1552:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1526:17:21"},"nodeType":"YulFunctionCall","src":"1526:46:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1516:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1592:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1603:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1588:3:21"},"nodeType":"YulFunctionCall","src":"1588:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1612:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1620:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1608:3:21"},"nodeType":"YulFunctionCall","src":"1608:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1581:6:21"},"nodeType":"YulFunctionCall","src":"1581:50:21"},"nodeType":"YulExpressionStatement","src":"1581:50:21"},{"nodeType":"YulVariableDeclaration","src":"1640:47:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1672:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"1680:6:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1654:17:21"},"nodeType":"YulFunctionCall","src":"1654:33:21"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"1644:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1707:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1718:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1703:3:21"},"nodeType":"YulFunctionCall","src":"1703:18:21"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"1727:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1735:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1723:3:21"},"nodeType":"YulFunctionCall","src":"1723:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1696:6:21"},"nodeType":"YulFunctionCall","src":"1696:50:21"},"nodeType":"YulExpressionStatement","src":"1696:50:21"},{"nodeType":"YulAssignment","src":"1755:41:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1781:6:21"},{"name":"tail_2","nodeType":"YulIdentifier","src":"1789:6:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1763:17:21"},"nodeType":"YulFunctionCall","src":"1763:33:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1755:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1816:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1827:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:21"},"nodeType":"YulFunctionCall","src":"1812:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"1832:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1805:6:21"},"nodeType":"YulFunctionCall","src":"1805:34:21"},"nodeType":"YulExpressionStatement","src":"1805:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1859:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1870:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1855:3:21"},"nodeType":"YulFunctionCall","src":"1855:19:21"},{"name":"value4","nodeType":"YulIdentifier","src":"1876:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1848:6:21"},"nodeType":"YulFunctionCall","src":"1848:35:21"},"nodeType":"YulExpressionStatement","src":"1848:35:21"},{"nodeType":"YulVariableDeclaration","src":"1892:20:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1902:10:21","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1896:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1932:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1943:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1928:3:21"},"nodeType":"YulFunctionCall","src":"1928:19:21"},{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"1953:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1961:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1949:3:21"},"nodeType":"YulFunctionCall","src":"1949:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1921:6:21"},"nodeType":"YulFunctionCall","src":"1921:44:21"},"nodeType":"YulExpressionStatement","src":"1921:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1985:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1996:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1981:3:21"},"nodeType":"YulFunctionCall","src":"1981:19:21"},{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"2006:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2014:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2002:3:21"},"nodeType":"YulFunctionCall","src":"2002:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1974:6:21"},"nodeType":"YulFunctionCall","src":"1974:44:21"},"nodeType":"YulExpressionStatement","src":"1974:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2038:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2049:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2034:3:21"},"nodeType":"YulFunctionCall","src":"2034:19:21"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"2059:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2067:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2055:3:21"},"nodeType":"YulFunctionCall","src":"2055:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2027:6:21"},"nodeType":"YulFunctionCall","src":"2027:44:21"},"nodeType":"YulExpressionStatement","src":"2027:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2091:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2102:3:21","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2087:3:21"},"nodeType":"YulFunctionCall","src":"2087:19:21"},{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"2112:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2120:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2108:3:21"},"nodeType":"YulFunctionCall","src":"2108:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2080:6:21"},"nodeType":"YulFunctionCall","src":"2080:48:21"},"nodeType":"YulExpressionStatement","src":"2080:48:21"},{"expression":{"arguments":[{"name":"value9","nodeType":"YulIdentifier","src":"2153:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2165:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2176:3:21","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2161:3:21"},"nodeType":"YulFunctionCall","src":"2161:19:21"}],"functionName":{"name":"abi_encode_bool","nodeType":"YulIdentifier","src":"2137:15:21"},"nodeType":"YulFunctionCall","src":"2137:44:21"},"nodeType":"YulExpressionStatement","src":"2137:44:21"},{"expression":{"arguments":[{"name":"value10","nodeType":"YulIdentifier","src":"2209:7:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2222:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2233:3:21","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:21"},"nodeType":"YulFunctionCall","src":"2218:19:21"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"2190:18:21"},"nodeType":"YulFunctionCall","src":"2190:48:21"},"nodeType":"YulExpressionStatement","src":"2190:48:21"},{"expression":{"arguments":[{"name":"value11","nodeType":"YulIdentifier","src":"2266:7:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2279:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2290:3:21","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2275:3:21"},"nodeType":"YulFunctionCall","src":"2275:19:21"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"2247:18:21"},"nodeType":"YulFunctionCall","src":"2247:48:21"},"nodeType":"YulExpressionStatement","src":"2247:48:21"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1350:9:21","type":""},{"name":"value11","nodeType":"YulTypedName","src":"1361:7:21","type":""},{"name":"value10","nodeType":"YulTypedName","src":"1370:7:21","type":""},{"name":"value9","nodeType":"YulTypedName","src":"1379:6:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"1387:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"1395:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1403:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1411:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1419:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1427:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1435:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1443:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1451:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1462:4:21","type":""}],"src":"1014:1287:21"},{"body":{"nodeType":"YulBlock","src":"2407:102:21","statements":[{"nodeType":"YulAssignment","src":"2417:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2429:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2440:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2425:3:21"},"nodeType":"YulFunctionCall","src":"2425:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2417:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2459:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2474:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2490:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2495:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2486:3:21"},"nodeType":"YulFunctionCall","src":"2486:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2499:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2482:3:21"},"nodeType":"YulFunctionCall","src":"2482:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2470:3:21"},"nodeType":"YulFunctionCall","src":"2470:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2452:6:21"},"nodeType":"YulFunctionCall","src":"2452:51:21"},"nodeType":"YulExpressionStatement","src":"2452:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2376:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2387:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2398:4:21","type":""}],"src":"2306:203:21"},{"body":{"nodeType":"YulBlock","src":"2559:86:21","statements":[{"body":{"nodeType":"YulBlock","src":"2623:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2632:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2635:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2625:6:21"},"nodeType":"YulFunctionCall","src":"2625:12:21"},"nodeType":"YulExpressionStatement","src":"2625:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2582:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2593:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2608:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2613:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2604:3:21"},"nodeType":"YulFunctionCall","src":"2604:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2617:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2600:3:21"},"nodeType":"YulFunctionCall","src":"2600:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2589:3:21"},"nodeType":"YulFunctionCall","src":"2589:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2579:2:21"},"nodeType":"YulFunctionCall","src":"2579:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2572:6:21"},"nodeType":"YulFunctionCall","src":"2572:50:21"},"nodeType":"YulIf","src":"2569:70:21"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2548:5:21","type":""}],"src":"2514:131:21"},{"body":{"nodeType":"YulBlock","src":"2699:85:21","statements":[{"nodeType":"YulAssignment","src":"2709:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2731:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2718:12:21"},"nodeType":"YulFunctionCall","src":"2718:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2709:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2772:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2747:24:21"},"nodeType":"YulFunctionCall","src":"2747:31:21"},"nodeType":"YulExpressionStatement","src":"2747:31:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2678:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2689:5:21","type":""}],"src":"2650:134:21"},{"body":{"nodeType":"YulBlock","src":"2862:275:21","statements":[{"body":{"nodeType":"YulBlock","src":"2911:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2920:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2923:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2913:6:21"},"nodeType":"YulFunctionCall","src":"2913:12:21"},"nodeType":"YulExpressionStatement","src":"2913:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2890:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2898:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2886:3:21"},"nodeType":"YulFunctionCall","src":"2886:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2905:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2882:3:21"},"nodeType":"YulFunctionCall","src":"2882:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2875:6:21"},"nodeType":"YulFunctionCall","src":"2875:35:21"},"nodeType":"YulIf","src":"2872:55:21"},{"nodeType":"YulAssignment","src":"2936:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2959:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2946:12:21"},"nodeType":"YulFunctionCall","src":"2946:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2936:6:21"}]},{"body":{"nodeType":"YulBlock","src":"3009:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3018:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3021:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3011:6:21"},"nodeType":"YulFunctionCall","src":"3011:12:21"},"nodeType":"YulExpressionStatement","src":"3011:12:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2981:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2989:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2978:2:21"},"nodeType":"YulFunctionCall","src":"2978:30:21"},"nodeType":"YulIf","src":"2975:50:21"},{"nodeType":"YulAssignment","src":"3034:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3058:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3046:3:21"},"nodeType":"YulFunctionCall","src":"3046:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3034:8:21"}]},{"body":{"nodeType":"YulBlock","src":"3115:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3124:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3127:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3117:6:21"},"nodeType":"YulFunctionCall","src":"3117:12:21"},"nodeType":"YulExpressionStatement","src":"3117:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3086:6:21"},{"name":"length","nodeType":"YulIdentifier","src":"3094:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3082:3:21"},"nodeType":"YulFunctionCall","src":"3082:19:21"},{"kind":"number","nodeType":"YulLiteral","src":"3103:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3078:3:21"},"nodeType":"YulFunctionCall","src":"3078:30:21"},{"name":"end","nodeType":"YulIdentifier","src":"3110:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3075:2:21"},"nodeType":"YulFunctionCall","src":"3075:39:21"},"nodeType":"YulIf","src":"3072:59:21"}]},"name":"abi_decode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2825:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2833:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2841:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"2851:6:21","type":""}],"src":"2789:348:21"},{"body":{"nodeType":"YulBlock","src":"3190:115:21","statements":[{"nodeType":"YulAssignment","src":"3200:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3222:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3209:12:21"},"nodeType":"YulFunctionCall","src":"3209:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3200:5:21"}]},{"body":{"nodeType":"YulBlock","src":"3283:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3295:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3285:6:21"},"nodeType":"YulFunctionCall","src":"3285:12:21"},"nodeType":"YulExpressionStatement","src":"3285:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3251:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3262:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3269:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:21"},"nodeType":"YulFunctionCall","src":"3258:22:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3248:2:21"},"nodeType":"YulFunctionCall","src":"3248:33:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3241:6:21"},"nodeType":"YulFunctionCall","src":"3241:41:21"},"nodeType":"YulIf","src":"3238:61:21"}]},"name":"abi_decode_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3169:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3180:5:21","type":""}],"src":"3142:163:21"},{"body":{"nodeType":"YulBlock","src":"3358:111:21","statements":[{"nodeType":"YulAssignment","src":"3368:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3390:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3377:12:21"},"nodeType":"YulFunctionCall","src":"3377:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3368:5:21"}]},{"body":{"nodeType":"YulBlock","src":"3447:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3456:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3459:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3449:6:21"},"nodeType":"YulFunctionCall","src":"3449:12:21"},"nodeType":"YulExpressionStatement","src":"3449:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3419:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3430:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3437:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3426:3:21"},"nodeType":"YulFunctionCall","src":"3426:18:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3416:2:21"},"nodeType":"YulFunctionCall","src":"3416:29:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3409:6:21"},"nodeType":"YulFunctionCall","src":"3409:37:21"},"nodeType":"YulIf","src":"3406:57:21"}]},"name":"abi_decode_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3337:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3348:5:21","type":""}],"src":"3310:159:21"},{"body":{"nodeType":"YulBlock","src":"3720:1112:21","statements":[{"body":{"nodeType":"YulBlock","src":"3767:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3776:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3779:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3769:6:21"},"nodeType":"YulFunctionCall","src":"3769:12:21"},"nodeType":"YulExpressionStatement","src":"3769:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3741:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3750:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3737:3:21"},"nodeType":"YulFunctionCall","src":"3737:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3762:3:21","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3733:3:21"},"nodeType":"YulFunctionCall","src":"3733:33:21"},"nodeType":"YulIf","src":"3730:53:21"},{"nodeType":"YulAssignment","src":"3792:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3821:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3802:18:21"},"nodeType":"YulFunctionCall","src":"3802:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3792:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3840:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3850:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3844:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3921:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3930:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3933:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3923:6:21"},"nodeType":"YulFunctionCall","src":"3923:12:21"},"nodeType":"YulExpressionStatement","src":"3923:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3900:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3911:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3896:3:21"},"nodeType":"YulFunctionCall","src":"3896:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3883:12:21"},"nodeType":"YulFunctionCall","src":"3883:32:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3917:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3880:2:21"},"nodeType":"YulFunctionCall","src":"3880:40:21"},"nodeType":"YulIf","src":"3877:60:21"},{"nodeType":"YulVariableDeclaration","src":"3946:111:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4003:9:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4031:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4042:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4027:3:21"},"nodeType":"YulFunctionCall","src":"4027:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4014:12:21"},"nodeType":"YulFunctionCall","src":"4014:32:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3999:3:21"},"nodeType":"YulFunctionCall","src":"3999:48:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4049:7:21"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"3972:26:21"},"nodeType":"YulFunctionCall","src":"3972:85:21"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"3950:8:21","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"3960:8:21","type":""}]},{"nodeType":"YulAssignment","src":"4066:18:21","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"4076:8:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4066:6:21"}]},{"nodeType":"YulAssignment","src":"4093:18:21","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4103:8:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4093:6:21"}]},{"body":{"nodeType":"YulBlock","src":"4164:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4173:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4176:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4166:6:21"},"nodeType":"YulFunctionCall","src":"4166:12:21"},"nodeType":"YulExpressionStatement","src":"4166:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4143:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4154:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4139:3:21"},"nodeType":"YulFunctionCall","src":"4139:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4126:12:21"},"nodeType":"YulFunctionCall","src":"4126:32:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4160:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4123:2:21"},"nodeType":"YulFunctionCall","src":"4123:40:21"},"nodeType":"YulIf","src":"4120:60:21"},{"nodeType":"YulVariableDeclaration","src":"4189:111:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4246:9:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4274:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4285:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4270:3:21"},"nodeType":"YulFunctionCall","src":"4270:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4257:12:21"},"nodeType":"YulFunctionCall","src":"4257:32:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4242:3:21"},"nodeType":"YulFunctionCall","src":"4242:48:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4292:7:21"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"4215:26:21"},"nodeType":"YulFunctionCall","src":"4215:85:21"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"4193:8:21","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"4203:8:21","type":""}]},{"nodeType":"YulAssignment","src":"4309:18:21","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"4319:8:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4309:6:21"}]},{"nodeType":"YulAssignment","src":"4336:18:21","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"4346:8:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4336:6:21"}]},{"body":{"nodeType":"YulBlock","src":"4407:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4416:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4419:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4409:6:21"},"nodeType":"YulFunctionCall","src":"4409:12:21"},"nodeType":"YulExpressionStatement","src":"4409:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4386:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4397:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4382:3:21"},"nodeType":"YulFunctionCall","src":"4382:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4369:12:21"},"nodeType":"YulFunctionCall","src":"4369:32:21"},{"name":"_1","nodeType":"YulIdentifier","src":"4403:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4366:2:21"},"nodeType":"YulFunctionCall","src":"4366:40:21"},"nodeType":"YulIf","src":"4363:60:21"},{"nodeType":"YulVariableDeclaration","src":"4432:111:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4489:9:21"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4517:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4528:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4513:3:21"},"nodeType":"YulFunctionCall","src":"4513:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4500:12:21"},"nodeType":"YulFunctionCall","src":"4500:32:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4485:3:21"},"nodeType":"YulFunctionCall","src":"4485:48:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4535:7:21"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"4458:26:21"},"nodeType":"YulFunctionCall","src":"4458:85:21"},"variables":[{"name":"value5_1","nodeType":"YulTypedName","src":"4436:8:21","type":""},{"name":"value6_1","nodeType":"YulTypedName","src":"4446:8:21","type":""}]},{"nodeType":"YulAssignment","src":"4552:18:21","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"4562:8:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4552:6:21"}]},{"nodeType":"YulAssignment","src":"4579:18:21","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"4589:8:21"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4579:6:21"}]},{"nodeType":"YulAssignment","src":"4606:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4638:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4649:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4634:3:21"},"nodeType":"YulFunctionCall","src":"4634:19:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"4616:17:21"},"nodeType":"YulFunctionCall","src":"4616:38:21"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"4606:6:21"}]},{"nodeType":"YulAssignment","src":"4663:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4695:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4706:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4691:3:21"},"nodeType":"YulFunctionCall","src":"4691:19:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"4673:17:21"},"nodeType":"YulFunctionCall","src":"4673:38:21"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"4663:6:21"}]},{"nodeType":"YulAssignment","src":"4720:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4752:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4763:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4748:3:21"},"nodeType":"YulFunctionCall","src":"4748:19:21"}],"functionName":{"name":"abi_decode_uint32","nodeType":"YulIdentifier","src":"4730:17:21"},"nodeType":"YulFunctionCall","src":"4730:38:21"},"variableNames":[{"name":"value9","nodeType":"YulIdentifier","src":"4720:6:21"}]},{"nodeType":"YulAssignment","src":"4777:49:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4810:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4821:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4806:3:21"},"nodeType":"YulFunctionCall","src":"4806:19:21"}],"functionName":{"name":"abi_decode_uint16","nodeType":"YulIdentifier","src":"4788:17:21"},"nodeType":"YulFunctionCall","src":"4788:38:21"},"variableNames":[{"name":"value10","nodeType":"YulIdentifier","src":"4777:7:21"}]}]},"name":"abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptrt_uint32t_uint32t_uint32t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3605:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3616:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3628:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3636:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3644:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3652:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3660:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3668:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3676:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3684:6:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"3692:6:21","type":""},{"name":"value9","nodeType":"YulTypedName","src":"3700:6:21","type":""},{"name":"value10","nodeType":"YulTypedName","src":"3708:7:21","type":""}],"src":"3474:1358:21"},{"body":{"nodeType":"YulBlock","src":"4924:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"4970:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4979:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4982:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4972:6:21"},"nodeType":"YulFunctionCall","src":"4972:12:21"},"nodeType":"YulExpressionStatement","src":"4972:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4945:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4954:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4941:3:21"},"nodeType":"YulFunctionCall","src":"4941:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4966:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4937:3:21"},"nodeType":"YulFunctionCall","src":"4937:32:21"},"nodeType":"YulIf","src":"4934:52:21"},{"nodeType":"YulAssignment","src":"4995:33:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5018:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5005:12:21"},"nodeType":"YulFunctionCall","src":"5005:23:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4995:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5037:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5067:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5078:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5063:3:21"},"nodeType":"YulFunctionCall","src":"5063:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5050:12:21"},"nodeType":"YulFunctionCall","src":"5050:32:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5041:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5116:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5091:24:21"},"nodeType":"YulFunctionCall","src":"5091:31:21"},"nodeType":"YulExpressionStatement","src":"5091:31:21"},{"nodeType":"YulAssignment","src":"5131:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5141:5:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5131:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4882:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4893:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4905:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4913:6:21","type":""}],"src":"4837:315:21"},{"body":{"nodeType":"YulBlock","src":"5227:177:21","statements":[{"body":{"nodeType":"YulBlock","src":"5273:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5282:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5285:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5275:6:21"},"nodeType":"YulFunctionCall","src":"5275:12:21"},"nodeType":"YulExpressionStatement","src":"5275:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5248:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5257:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5244:3:21"},"nodeType":"YulFunctionCall","src":"5244:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"5269:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5240:3:21"},"nodeType":"YulFunctionCall","src":"5240:32:21"},"nodeType":"YulIf","src":"5237:52:21"},{"nodeType":"YulVariableDeclaration","src":"5298:36:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5311:12:21"},"nodeType":"YulFunctionCall","src":"5311:23:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5302:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5368:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5343:24:21"},"nodeType":"YulFunctionCall","src":"5343:31:21"},"nodeType":"YulExpressionStatement","src":"5343:31:21"},{"nodeType":"YulAssignment","src":"5383:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5393:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5383:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5193:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5204:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5216:6:21","type":""}],"src":"5157:247:21"},{"body":{"nodeType":"YulBlock","src":"5464:325:21","statements":[{"nodeType":"YulAssignment","src":"5474:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5488:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"5491:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5484:3:21"},"nodeType":"YulFunctionCall","src":"5484:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5474:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"5505:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5535:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"5541:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5531:3:21"},"nodeType":"YulFunctionCall","src":"5531:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5509:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5582:31:21","statements":[{"nodeType":"YulAssignment","src":"5584:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5598:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5606:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5594:3:21"},"nodeType":"YulFunctionCall","src":"5594:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5584:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5562:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5555:6:21"},"nodeType":"YulFunctionCall","src":"5555:26:21"},"nodeType":"YulIf","src":"5552:61:21"},{"body":{"nodeType":"YulBlock","src":"5672:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5693:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5700:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5705:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5696:3:21"},"nodeType":"YulFunctionCall","src":"5696:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5686:6:21"},"nodeType":"YulFunctionCall","src":"5686:31:21"},"nodeType":"YulExpressionStatement","src":"5686:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5737:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5740:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5730:6:21"},"nodeType":"YulFunctionCall","src":"5730:15:21"},"nodeType":"YulExpressionStatement","src":"5730:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5765:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5768:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5758:6:21"},"nodeType":"YulFunctionCall","src":"5758:15:21"},"nodeType":"YulExpressionStatement","src":"5758:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"5628:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5651:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5659:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5648:2:21"},"nodeType":"YulFunctionCall","src":"5648:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5625:2:21"},"nodeType":"YulFunctionCall","src":"5625:38:21"},"nodeType":"YulIf","src":"5622:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5444:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5453:6:21","type":""}],"src":"5409:380:21"},{"body":{"nodeType":"YulBlock","src":"5968:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5985:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5996:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5978:6:21"},"nodeType":"YulFunctionCall","src":"5978:21:21"},"nodeType":"YulExpressionStatement","src":"5978:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6019:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6030:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6015:3:21"},"nodeType":"YulFunctionCall","src":"6015:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6035:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6008:6:21"},"nodeType":"YulFunctionCall","src":"6008:30:21"},"nodeType":"YulExpressionStatement","src":"6008:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6058:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6069:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6054:3:21"},"nodeType":"YulFunctionCall","src":"6054:18:21"},{"hexValue":"416c726561647920656e646564","kind":"string","nodeType":"YulLiteral","src":"6074:15:21","type":"","value":"Already ended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6047:6:21"},"nodeType":"YulFunctionCall","src":"6047:43:21"},"nodeType":"YulExpressionStatement","src":"6047:43:21"},{"nodeType":"YulAssignment","src":"6099:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6111:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6122:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6107:3:21"},"nodeType":"YulFunctionCall","src":"6107:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6099:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_03a0ef2274e5fa9c92bd6c8904f1025dd04b34d1da74eba1106c91ebdbd13a59__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5945:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5959:4:21","type":""}],"src":"5794:337:21"},{"body":{"nodeType":"YulBlock","src":"6310:167:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6327:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6338:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6320:6:21"},"nodeType":"YulFunctionCall","src":"6320:21:21"},"nodeType":"YulExpressionStatement","src":"6320:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6361:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6372:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6357:3:21"},"nodeType":"YulFunctionCall","src":"6357:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6377:2:21","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6350:6:21"},"nodeType":"YulFunctionCall","src":"6350:30:21"},"nodeType":"YulExpressionStatement","src":"6350:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6400:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6411:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6396:3:21"},"nodeType":"YulFunctionCall","src":"6396:18:21"},{"hexValue":"50726f6a65637420636f6d706c65746564","kind":"string","nodeType":"YulLiteral","src":"6416:19:21","type":"","value":"Project completed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6389:6:21"},"nodeType":"YulFunctionCall","src":"6389:47:21"},"nodeType":"YulExpressionStatement","src":"6389:47:21"},{"nodeType":"YulAssignment","src":"6445:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6457:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6468:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6453:3:21"},"nodeType":"YulFunctionCall","src":"6453:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6445:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_bff8fba7e8290554d856a3fb22093bf87bdf5e84742e561d9c5dea6562588f74__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6287:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6301:4:21","type":""}],"src":"6136:341:21"},{"body":{"nodeType":"YulBlock","src":"6656:164:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6673:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6684:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6666:6:21"},"nodeType":"YulFunctionCall","src":"6666:21:21"},"nodeType":"YulExpressionStatement","src":"6666:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6707:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6718:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6703:3:21"},"nodeType":"YulFunctionCall","src":"6703:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6723:2:21","type":"","value":"14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6696:6:21"},"nodeType":"YulFunctionCall","src":"6696:30:21"},"nodeType":"YulExpressionStatement","src":"6696:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6746:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6757:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6742:3:21"},"nodeType":"YulFunctionCall","src":"6742:18:21"},{"hexValue":"6d696e20302e3031206574686572","kind":"string","nodeType":"YulLiteral","src":"6762:16:21","type":"","value":"min 0.01 ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6735:6:21"},"nodeType":"YulFunctionCall","src":"6735:44:21"},"nodeType":"YulExpressionStatement","src":"6735:44:21"},{"nodeType":"YulAssignment","src":"6788:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6800:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6811:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6796:3:21"},"nodeType":"YulFunctionCall","src":"6796:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6788:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_cf1cbb480479ea4d7c3f4f3b5a2d1e356ab6d98c8dec1739a2a160b41897be8e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6633:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6647:4:21","type":""}],"src":"6482:338:21"},{"body":{"nodeType":"YulBlock","src":"6857:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6874:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6881:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6886:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6877:3:21"},"nodeType":"YulFunctionCall","src":"6877:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6867:6:21"},"nodeType":"YulFunctionCall","src":"6867:31:21"},"nodeType":"YulExpressionStatement","src":"6867:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6914:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6917:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6907:6:21"},"nodeType":"YulFunctionCall","src":"6907:15:21"},"nodeType":"YulExpressionStatement","src":"6907:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6938:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6941:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6931:6:21"},"nodeType":"YulFunctionCall","src":"6931:15:21"},"nodeType":"YulExpressionStatement","src":"6931:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6825:127:21"},{"body":{"nodeType":"YulBlock","src":"7005:77:21","statements":[{"nodeType":"YulAssignment","src":"7015:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7026:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"7029:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7022:3:21"},"nodeType":"YulFunctionCall","src":"7022:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7015:3:21"}]},{"body":{"nodeType":"YulBlock","src":"7054:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7056:16:21"},"nodeType":"YulFunctionCall","src":"7056:18:21"},"nodeType":"YulExpressionStatement","src":"7056:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7046:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"7049:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7043:2:21"},"nodeType":"YulFunctionCall","src":"7043:10:21"},"nodeType":"YulIf","src":"7040:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6988:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"6991:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6997:3:21","type":""}],"src":"6957:125:21"},{"body":{"nodeType":"YulBlock","src":"7216:119:21","statements":[{"nodeType":"YulAssignment","src":"7226:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7238:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7249:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7234:3:21"},"nodeType":"YulFunctionCall","src":"7234:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7226:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7268:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"7279:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7261:6:21"},"nodeType":"YulFunctionCall","src":"7261:25:21"},"nodeType":"YulExpressionStatement","src":"7261:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7306:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7317:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7302:3:21"},"nodeType":"YulFunctionCall","src":"7302:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"7322:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7295:6:21"},"nodeType":"YulFunctionCall","src":"7295:34:21"},"nodeType":"YulExpressionStatement","src":"7295:34:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7177:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7188:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7196:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7207:4:21","type":""}],"src":"7087:248:21"},{"body":{"nodeType":"YulBlock","src":"7514:173:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7531:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7542:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7524:6:21"},"nodeType":"YulFunctionCall","src":"7524:21:21"},"nodeType":"YulExpressionStatement","src":"7524:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7565:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7576:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7561:3:21"},"nodeType":"YulFunctionCall","src":"7561:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7581:2:21","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7554:6:21"},"nodeType":"YulFunctionCall","src":"7554:30:21"},"nodeType":"YulExpressionStatement","src":"7554:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7604:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7615:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7600:3:21"},"nodeType":"YulFunctionCall","src":"7600:18:21"},{"hexValue":"50726f6a65637420616c72656164792073746172746564","kind":"string","nodeType":"YulLiteral","src":"7620:25:21","type":"","value":"Project already started"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7593:6:21"},"nodeType":"YulFunctionCall","src":"7593:53:21"},"nodeType":"YulExpressionStatement","src":"7593:53:21"},{"nodeType":"YulAssignment","src":"7655:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7667:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7678:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7663:3:21"},"nodeType":"YulFunctionCall","src":"7663:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7655:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b66f79849fb2a1aeae618e045c8144ee98af31f7d75c8241357798f6fb27a16b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7491:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7505:4:21","type":""}],"src":"7340:347:21"},{"body":{"nodeType":"YulBlock","src":"7866:163:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7883:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7894:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7876:6:21"},"nodeType":"YulFunctionCall","src":"7876:21:21"},"nodeType":"YulExpressionStatement","src":"7876:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7917:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7928:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7913:3:21"},"nodeType":"YulFunctionCall","src":"7913:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7933:2:21","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7906:6:21"},"nodeType":"YulFunctionCall","src":"7906:30:21"},"nodeType":"YulExpressionStatement","src":"7906:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7956:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7967:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7952:3:21"},"nodeType":"YulFunctionCall","src":"7952:18:21"},{"hexValue":"4e6f20636f6d6d69746d656e74","kind":"string","nodeType":"YulLiteral","src":"7972:15:21","type":"","value":"No commitment"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7945:6:21"},"nodeType":"YulFunctionCall","src":"7945:43:21"},"nodeType":"YulExpressionStatement","src":"7945:43:21"},{"nodeType":"YulAssignment","src":"7997:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8009:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8020:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8005:3:21"},"nodeType":"YulFunctionCall","src":"8005:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7997:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a3a9eb15a1903ce0ba5279cfeb2e00d127b5a6f2993d14812bc6864e4dd646bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7843:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7857:4:21","type":""}],"src":"7692:337:21"},{"body":{"nodeType":"YulBlock","src":"8083:79:21","statements":[{"nodeType":"YulAssignment","src":"8093:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8105:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"8108:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8101:3:21"},"nodeType":"YulFunctionCall","src":"8101:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8093:4:21"}]},{"body":{"nodeType":"YulBlock","src":"8134:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8136:16:21"},"nodeType":"YulFunctionCall","src":"8136:18:21"},"nodeType":"YulExpressionStatement","src":"8136:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"8125:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"8131:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8122:2:21"},"nodeType":"YulFunctionCall","src":"8122:11:21"},"nodeType":"YulIf","src":"8119:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8065:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"8068:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8074:4:21","type":""}],"src":"8034:128:21"},{"body":{"nodeType":"YulBlock","src":"8358:14:21","statements":[{"nodeType":"YulAssignment","src":"8360:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"8367:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8360:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8342:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8350:3:21","type":""}],"src":"8167:205:21"},{"body":{"nodeType":"YulBlock","src":"8551:165:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8568:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8579:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8561:6:21"},"nodeType":"YulFunctionCall","src":"8561:21:21"},"nodeType":"YulExpressionStatement","src":"8561:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8602:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8613:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8598:3:21"},"nodeType":"YulFunctionCall","src":"8598:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8618:2:21","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8591:6:21"},"nodeType":"YulFunctionCall","src":"8591:30:21"},"nodeType":"YulExpressionStatement","src":"8591:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8641:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8652:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8637:3:21"},"nodeType":"YulFunctionCall","src":"8637:18:21"},{"hexValue":"7769746864726177206661696c6564","kind":"string","nodeType":"YulLiteral","src":"8657:17:21","type":"","value":"withdraw failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8630:6:21"},"nodeType":"YulFunctionCall","src":"8630:45:21"},"nodeType":"YulExpressionStatement","src":"8630:45:21"},{"nodeType":"YulAssignment","src":"8684:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8696:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8707:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8692:3:21"},"nodeType":"YulFunctionCall","src":"8692:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8684:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8528:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8542:4:21","type":""}],"src":"8377:339:21"},{"body":{"nodeType":"YulBlock","src":"8895:160:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8912:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8923:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8905:6:21"},"nodeType":"YulFunctionCall","src":"8905:21:21"},"nodeType":"YulExpressionStatement","src":"8905:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8946:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8957:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8942:3:21"},"nodeType":"YulFunctionCall","src":"8942:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8962:2:21","type":"","value":"10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8935:6:21"},"nodeType":"YulFunctionCall","src":"8935:30:21"},"nodeType":"YulExpressionStatement","src":"8935:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8985:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8996:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8981:3:21"},"nodeType":"YulFunctionCall","src":"8981:18:21"},{"hexValue":"4e6f7420617574686f72","kind":"string","nodeType":"YulLiteral","src":"9001:12:21","type":"","value":"Not author"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8974:6:21"},"nodeType":"YulFunctionCall","src":"8974:40:21"},"nodeType":"YulExpressionStatement","src":"8974:40:21"},{"nodeType":"YulAssignment","src":"9023:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9035:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9046:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9031:3:21"},"nodeType":"YulFunctionCall","src":"9031:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9023:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6ccad79e7aa285c9f3f2db83e30790c7046ceac0d7d86d7990286517708fb5ee__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8872:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8886:4:21","type":""}],"src":"8721:334:21"},{"body":{"nodeType":"YulBlock","src":"9234:160:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9251:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9262:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9244:6:21"},"nodeType":"YulFunctionCall","src":"9244:21:21"},"nodeType":"YulExpressionStatement","src":"9244:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9285:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9296:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9281:3:21"},"nodeType":"YulFunctionCall","src":"9281:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"9301:2:21","type":"","value":"10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9274:6:21"},"nodeType":"YulFunctionCall","src":"9274:30:21"},"nodeType":"YulExpressionStatement","src":"9274:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9324:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9335:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9320:3:21"},"nodeType":"YulFunctionCall","src":"9320:18:21"},{"hexValue":"6e6f7420636c6f736564","kind":"string","nodeType":"YulLiteral","src":"9340:12:21","type":"","value":"not closed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9313:6:21"},"nodeType":"YulFunctionCall","src":"9313:40:21"},"nodeType":"YulExpressionStatement","src":"9313:40:21"},{"nodeType":"YulAssignment","src":"9362:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9374:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9385:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9370:3:21"},"nodeType":"YulFunctionCall","src":"9370:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9362:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4762d97070854ffa537667d2f87773fc610015ed3ee39aef0aef6647d23f7004__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9211:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9225:4:21","type":""}],"src":"9060:334:21"},{"body":{"nodeType":"YulBlock","src":"9708:490:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9725:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9736:3:21","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9718:6:21"},"nodeType":"YulFunctionCall","src":"9718:22:21"},"nodeType":"YulExpressionStatement","src":"9718:22:21"},{"nodeType":"YulVariableDeclaration","src":"9749:60:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9781:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9793:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9804:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9789:3:21"},"nodeType":"YulFunctionCall","src":"9789:19:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9763:17:21"},"nodeType":"YulFunctionCall","src":"9763:46:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"9753:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9829:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9840:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9825:3:21"},"nodeType":"YulFunctionCall","src":"9825:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"9849:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9857:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9845:3:21"},"nodeType":"YulFunctionCall","src":"9845:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9818:6:21"},"nodeType":"YulFunctionCall","src":"9818:50:21"},"nodeType":"YulExpressionStatement","src":"9818:50:21"},{"nodeType":"YulAssignment","src":"9877:41:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9903:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"9911:6:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9885:17:21"},"nodeType":"YulFunctionCall","src":"9885:33:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9877:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"9927:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9945:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9950:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9941:3:21"},"nodeType":"YulFunctionCall","src":"9941:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"9954:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9937:3:21"},"nodeType":"YulFunctionCall","src":"9937:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9931:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9976:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9987:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9972:3:21"},"nodeType":"YulFunctionCall","src":"9972:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9996:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10004:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9992:3:21"},"nodeType":"YulFunctionCall","src":"9992:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9965:6:21"},"nodeType":"YulFunctionCall","src":"9965:43:21"},"nodeType":"YulExpressionStatement","src":"9965:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10028:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10039:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10024:3:21"},"nodeType":"YulFunctionCall","src":"10024:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"10044:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10017:6:21"},"nodeType":"YulFunctionCall","src":"10017:34:21"},"nodeType":"YulExpressionStatement","src":"10017:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10071:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10082:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10067:3:21"},"nodeType":"YulFunctionCall","src":"10067:19:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10092:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10100:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10088:3:21"},"nodeType":"YulFunctionCall","src":"10088:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10060:6:21"},"nodeType":"YulFunctionCall","src":"10060:44:21"},"nodeType":"YulExpressionStatement","src":"10060:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10124:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10135:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10120:3:21"},"nodeType":"YulFunctionCall","src":"10120:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"10141:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10113:6:21"},"nodeType":"YulFunctionCall","src":"10113:35:21"},"nodeType":"YulExpressionStatement","src":"10113:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10168:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10179:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10164:3:21"},"nodeType":"YulFunctionCall","src":"10164:19:21"},{"name":"value6","nodeType":"YulIdentifier","src":"10185:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10157:6:21"},"nodeType":"YulFunctionCall","src":"10157:35:21"},"nodeType":"YulExpressionStatement","src":"10157:35:21"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9629:9:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"9640:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9648:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9656:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9664:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9672:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9680:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9688:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9699:4:21","type":""}],"src":"9399:799:21"},{"body":{"nodeType":"YulBlock","src":"10284:170:21","statements":[{"body":{"nodeType":"YulBlock","src":"10330:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10339:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10342:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10332:6:21"},"nodeType":"YulFunctionCall","src":"10332:12:21"},"nodeType":"YulExpressionStatement","src":"10332:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10305:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10314:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10301:3:21"},"nodeType":"YulFunctionCall","src":"10301:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10326:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10297:3:21"},"nodeType":"YulFunctionCall","src":"10297:32:21"},"nodeType":"YulIf","src":"10294:52:21"},{"nodeType":"YulVariableDeclaration","src":"10355:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10374:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10368:5:21"},"nodeType":"YulFunctionCall","src":"10368:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10359:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10418:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10393:24:21"},"nodeType":"YulFunctionCall","src":"10393:31:21"},"nodeType":"YulExpressionStatement","src":"10393:31:21"},{"nodeType":"YulAssignment","src":"10433:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"10443:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10433:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10250:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10261:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10273:6:21","type":""}],"src":"10203:251:21"},{"body":{"nodeType":"YulBlock","src":"10588:175:21","statements":[{"nodeType":"YulAssignment","src":"10598:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10610:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10621:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10606:3:21"},"nodeType":"YulFunctionCall","src":"10606:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10598:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"10633:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10651:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10656:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10647:3:21"},"nodeType":"YulFunctionCall","src":"10647:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"10660:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10643:3:21"},"nodeType":"YulFunctionCall","src":"10643:19:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10637:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10678:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10693:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10701:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10689:3:21"},"nodeType":"YulFunctionCall","src":"10689:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10671:6:21"},"nodeType":"YulFunctionCall","src":"10671:34:21"},"nodeType":"YulExpressionStatement","src":"10671:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10725:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10736:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10721:3:21"},"nodeType":"YulFunctionCall","src":"10721:18:21"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10745:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"10753:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10741:3:21"},"nodeType":"YulFunctionCall","src":"10741:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10714:6:21"},"nodeType":"YulFunctionCall","src":"10714:43:21"},"nodeType":"YulExpressionStatement","src":"10714:43:21"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10549:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10560:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10568:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10579:4:21","type":""}],"src":"10459:304:21"},{"body":{"nodeType":"YulBlock","src":"10866:214:21","statements":[{"body":{"nodeType":"YulBlock","src":"10912:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10921:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10924:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10914:6:21"},"nodeType":"YulFunctionCall","src":"10914:12:21"},"nodeType":"YulExpressionStatement","src":"10914:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10887:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10896:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10883:3:21"},"nodeType":"YulFunctionCall","src":"10883:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"10908:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10879:3:21"},"nodeType":"YulFunctionCall","src":"10879:32:21"},"nodeType":"YulIf","src":"10876:52:21"},{"nodeType":"YulVariableDeclaration","src":"10937:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10956:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10950:5:21"},"nodeType":"YulFunctionCall","src":"10950:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10941:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11000:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10975:24:21"},"nodeType":"YulFunctionCall","src":"10975:31:21"},"nodeType":"YulExpressionStatement","src":"10975:31:21"},{"nodeType":"YulAssignment","src":"11015:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"11025:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11015:6:21"}]},{"nodeType":"YulAssignment","src":"11039:35:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11059:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11070:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11055:3:21"},"nodeType":"YulFunctionCall","src":"11055:18:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11049:5:21"},"nodeType":"YulFunctionCall","src":"11049:25:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11039:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10824:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10835:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10847:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10855:6:21","type":""}],"src":"10768:312:21"},{"body":{"nodeType":"YulBlock","src":"11131:171:21","statements":[{"body":{"nodeType":"YulBlock","src":"11162:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11183:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11190:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11195:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11186:3:21"},"nodeType":"YulFunctionCall","src":"11186:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11176:6:21"},"nodeType":"YulFunctionCall","src":"11176:31:21"},"nodeType":"YulExpressionStatement","src":"11176:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11227:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11230:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11220:6:21"},"nodeType":"YulFunctionCall","src":"11220:15:21"},"nodeType":"YulExpressionStatement","src":"11220:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11255:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11258:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11248:6:21"},"nodeType":"YulFunctionCall","src":"11248:15:21"},"nodeType":"YulExpressionStatement","src":"11248:15:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11151:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11144:6:21"},"nodeType":"YulFunctionCall","src":"11144:9:21"},"nodeType":"YulIf","src":"11141:132:21"},{"nodeType":"YulAssignment","src":"11282:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11291:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11294:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11287:3:21"},"nodeType":"YulFunctionCall","src":"11287:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"11282:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11116:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11119:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"11125:1:21","type":""}],"src":"11085:217:21"},{"body":{"nodeType":"YulBlock","src":"11359:116:21","statements":[{"nodeType":"YulAssignment","src":"11369:20:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11384:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11387:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11380:3:21"},"nodeType":"YulFunctionCall","src":"11380:9:21"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"11369:7:21"}]},{"body":{"nodeType":"YulBlock","src":"11447:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11449:16:21"},"nodeType":"YulFunctionCall","src":"11449:18:21"},"nodeType":"YulExpressionStatement","src":"11449:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11418:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11411:6:21"},"nodeType":"YulFunctionCall","src":"11411:9:21"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11425:1:21"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"11432:7:21"},{"name":"x","nodeType":"YulIdentifier","src":"11441:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11428:3:21"},"nodeType":"YulFunctionCall","src":"11428:15:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11422:2:21"},"nodeType":"YulFunctionCall","src":"11422:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11408:2:21"},"nodeType":"YulFunctionCall","src":"11408:37:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11401:6:21"},"nodeType":"YulFunctionCall","src":"11401:45:21"},"nodeType":"YulIf","src":"11398:71:21"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11338:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11341:1:21","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"11347:7:21","type":""}],"src":"11307:168:21"},{"body":{"nodeType":"YulBlock","src":"11594:170:21","statements":[{"body":{"nodeType":"YulBlock","src":"11640:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11649:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11652:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11642:6:21"},"nodeType":"YulFunctionCall","src":"11642:12:21"},"nodeType":"YulExpressionStatement","src":"11642:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11615:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11624:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11611:3:21"},"nodeType":"YulFunctionCall","src":"11611:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11636:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11607:3:21"},"nodeType":"YulFunctionCall","src":"11607:32:21"},"nodeType":"YulIf","src":"11604:52:21"},{"nodeType":"YulVariableDeclaration","src":"11665:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11684:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11678:5:21"},"nodeType":"YulFunctionCall","src":"11678:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11669:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11728:5:21"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"11703:24:21"},"nodeType":"YulFunctionCall","src":"11703:31:21"},"nodeType":"YulExpressionStatement","src":"11703:31:21"},{"nodeType":"YulAssignment","src":"11743:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"11753:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11743:6:21"}]}]},"name":"abi_decode_tuple_t_contract$_IERC20MetadataUpgradeable_$883_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11560:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11571:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11583:6:21","type":""}],"src":"11480:284:21"},{"body":{"nodeType":"YulBlock","src":"11898:145:21","statements":[{"nodeType":"YulAssignment","src":"11908:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11920:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11931:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11916:3:21"},"nodeType":"YulFunctionCall","src":"11916:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11908:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11950:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11965:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11981:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11986:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11977:3:21"},"nodeType":"YulFunctionCall","src":"11977:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"11990:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11973:3:21"},"nodeType":"YulFunctionCall","src":"11973:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11961:3:21"},"nodeType":"YulFunctionCall","src":"11961:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11943:6:21"},"nodeType":"YulFunctionCall","src":"11943:51:21"},"nodeType":"YulExpressionStatement","src":"11943:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12014:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12025:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12010:3:21"},"nodeType":"YulFunctionCall","src":"12010:18:21"},{"name":"value1","nodeType":"YulIdentifier","src":"12030:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12003:6:21"},"nodeType":"YulFunctionCall","src":"12003:34:21"},"nodeType":"YulExpressionStatement","src":"12003:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11859:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11870:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11878:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11889:4:21","type":""}],"src":"11769:274:21"},{"body":{"nodeType":"YulBlock","src":"12126:199:21","statements":[{"body":{"nodeType":"YulBlock","src":"12172:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12181:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12184:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12174:6:21"},"nodeType":"YulFunctionCall","src":"12174:12:21"},"nodeType":"YulExpressionStatement","src":"12174:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12147:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12156:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12143:3:21"},"nodeType":"YulFunctionCall","src":"12143:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"12168:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12139:3:21"},"nodeType":"YulFunctionCall","src":"12139:32:21"},"nodeType":"YulIf","src":"12136:52:21"},{"nodeType":"YulVariableDeclaration","src":"12197:29:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12216:9:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12210:5:21"},"nodeType":"YulFunctionCall","src":"12210:16:21"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12201:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12279:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12288:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12291:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12281:6:21"},"nodeType":"YulFunctionCall","src":"12281:12:21"},"nodeType":"YulExpressionStatement","src":"12281:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12248:5:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12269:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12262:6:21"},"nodeType":"YulFunctionCall","src":"12262:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12255:6:21"},"nodeType":"YulFunctionCall","src":"12255:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12245:2:21"},"nodeType":"YulFunctionCall","src":"12245:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12238:6:21"},"nodeType":"YulFunctionCall","src":"12238:40:21"},"nodeType":"YulIf","src":"12235:60:21"},{"nodeType":"YulAssignment","src":"12304:15:21","value":{"name":"value","nodeType":"YulIdentifier","src":"12314:5:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12304:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12092:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12103:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12115:6:21","type":""}],"src":"12048:277:21"},{"body":{"nodeType":"YulBlock","src":"12504:168:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12521:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12532:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12514:6:21"},"nodeType":"YulFunctionCall","src":"12514:21:21"},"nodeType":"YulExpressionStatement","src":"12514:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12555:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12566:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12551:3:21"},"nodeType":"YulFunctionCall","src":"12551:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12571:2:21","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12544:6:21"},"nodeType":"YulFunctionCall","src":"12544:30:21"},"nodeType":"YulExpressionStatement","src":"12544:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12594:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12605:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12590:3:21"},"nodeType":"YulFunctionCall","src":"12590:18:21"},{"hexValue":"496e76616c69642073746172742074696d65","kind":"string","nodeType":"YulLiteral","src":"12610:20:21","type":"","value":"Invalid start time"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12583:6:21"},"nodeType":"YulFunctionCall","src":"12583:48:21"},"nodeType":"YulExpressionStatement","src":"12583:48:21"},{"nodeType":"YulAssignment","src":"12640:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12652:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12663:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12648:3:21"},"nodeType":"YulFunctionCall","src":"12648:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12640:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a3b6d4b23ae4bbd8dffd90f5160a835673157044abc6160caab696199469b553__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12481:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12495:4:21","type":""}],"src":"12330:342:21"},{"body":{"nodeType":"YulBlock","src":"12851:166:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12879:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12861:6:21"},"nodeType":"YulFunctionCall","src":"12861:21:21"},"nodeType":"YulExpressionStatement","src":"12861:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12902:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12913:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12898:3:21"},"nodeType":"YulFunctionCall","src":"12898:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"12918:2:21","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12891:6:21"},"nodeType":"YulFunctionCall","src":"12891:30:21"},"nodeType":"YulExpressionStatement","src":"12891:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12941:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12952:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12937:3:21"},"nodeType":"YulFunctionCall","src":"12937:18:21"},{"hexValue":"496e76616c696420656e642074696d65","kind":"string","nodeType":"YulLiteral","src":"12957:18:21","type":"","value":"Invalid end time"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12930:6:21"},"nodeType":"YulFunctionCall","src":"12930:46:21"},"nodeType":"YulExpressionStatement","src":"12930:46:21"},{"nodeType":"YulAssignment","src":"12985:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12997:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13008:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12993:3:21"},"nodeType":"YulFunctionCall","src":"12993:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12985:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f79adeb066186ecb6bfb5c8311500863e681b7aa46040b41ed874ebc28bd54f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12828:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12842:4:21","type":""}],"src":"12677:340:21"},{"body":{"nodeType":"YulBlock","src":"13196:175:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13213:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13224:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13206:6:21"},"nodeType":"YulFunctionCall","src":"13206:21:21"},"nodeType":"YulExpressionStatement","src":"13206:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13247:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13258:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13243:3:21"},"nodeType":"YulFunctionCall","src":"13243:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"13263:2:21","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13236:6:21"},"nodeType":"YulFunctionCall","src":"13236:30:21"},"nodeType":"YulExpressionStatement","src":"13236:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13286:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13297:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13282:3:21"},"nodeType":"YulFunctionCall","src":"13282:18:21"},{"hexValue":"4d6178696d756d206475726174696f6e206578636565646564","kind":"string","nodeType":"YulLiteral","src":"13302:27:21","type":"","value":"Maximum duration exceeded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13275:6:21"},"nodeType":"YulFunctionCall","src":"13275:55:21"},"nodeType":"YulExpressionStatement","src":"13275:55:21"},{"nodeType":"YulAssignment","src":"13339:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13351:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13362:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13347:3:21"},"nodeType":"YulFunctionCall","src":"13347:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13339:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_268b2b3ef04afe4685fdbcff6cb683aa408f3edfff411f4ac3bbfee177e0bffa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13173:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13187:4:21","type":""}],"src":"13022:349:21"},{"body":{"nodeType":"YulBlock","src":"13423:88:21","statements":[{"body":{"nodeType":"YulBlock","src":"13454:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13456:16:21"},"nodeType":"YulFunctionCall","src":"13456:18:21"},"nodeType":"YulExpressionStatement","src":"13456:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13439:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13450:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13446:3:21"},"nodeType":"YulFunctionCall","src":"13446:6:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13436:2:21"},"nodeType":"YulFunctionCall","src":"13436:17:21"},"nodeType":"YulIf","src":"13433:43:21"},{"nodeType":"YulAssignment","src":"13485:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13496:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13503:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13492:3:21"},"nodeType":"YulFunctionCall","src":"13492:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13485:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13405:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13415:3:21","type":""}],"src":"13376:135:21"},{"body":{"nodeType":"YulBlock","src":"13548:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13565:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13572:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13577:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13568:3:21"},"nodeType":"YulFunctionCall","src":"13568:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13558:6:21"},"nodeType":"YulFunctionCall","src":"13558:31:21"},"nodeType":"YulExpressionStatement","src":"13558:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13605:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13608:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13598:6:21"},"nodeType":"YulFunctionCall","src":"13598:15:21"},"nodeType":"YulExpressionStatement","src":"13598:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13629:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13632:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13622:6:21"},"nodeType":"YulFunctionCall","src":"13622:15:21"},"nodeType":"YulExpressionStatement","src":"13622:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"13516:127:21"},{"body":{"nodeType":"YulBlock","src":"13704:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13721:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"13724:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13714:6:21"},"nodeType":"YulFunctionCall","src":"13714:14:21"},"nodeType":"YulExpressionStatement","src":"13714:14:21"},{"nodeType":"YulAssignment","src":"13737:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13755:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13758:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13745:9:21"},"nodeType":"YulFunctionCall","src":"13745:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13737:4:21"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13687:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13695:4:21","type":""}],"src":"13648:121:21"},{"body":{"nodeType":"YulBlock","src":"13855:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"13888:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13902:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13912:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13906:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13933:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"13937:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13926:6:21"},"nodeType":"YulFunctionCall","src":"13926:17:21"},"nodeType":"YulExpressionStatement","src":"13926:17:21"},{"nodeType":"YulVariableDeclaration","src":"13956:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"13978:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"13982:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"13968:9:21"},"nodeType":"YulFunctionCall","src":"13968:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"13960:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14000:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14023:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14033:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"14040:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"14052:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14036:3:21"},"nodeType":"YulFunctionCall","src":"14036:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14029:3:21"},"nodeType":"YulFunctionCall","src":"14029:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14019:3:21"},"nodeType":"YulFunctionCall","src":"14019:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"14004:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14094:23:21","statements":[{"nodeType":"YulAssignment","src":"14096:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"14111:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"14096:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"14076:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"14088:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14073:2:21"},"nodeType":"YulFunctionCall","src":"14073:20:21"},"nodeType":"YulIf","src":"14070:47:21"},{"nodeType":"YulVariableDeclaration","src":"14130:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14144:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14154:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"14161:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14166:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14157:3:21"},"nodeType":"YulFunctionCall","src":"14157:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14150:3:21"},"nodeType":"YulFunctionCall","src":"14150:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14140:3:21"},"nodeType":"YulFunctionCall","src":"14140:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"14134:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14184:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"14197:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"14188:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14282:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14291:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"14298:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"14284:6:21"},"nodeType":"YulFunctionCall","src":"14284:17:21"},"nodeType":"YulExpressionStatement","src":"14284:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14232:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"14239:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14229:2:21"},"nodeType":"YulFunctionCall","src":"14229:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14243:26:21","statements":[{"nodeType":"YulAssignment","src":"14245:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"14258:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"14265:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14254:3:21"},"nodeType":"YulFunctionCall","src":"14254:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"14245:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"14225:3:21","statements":[]},"src":"14221:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"13871:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13876:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13868:2:21"},"nodeType":"YulFunctionCall","src":"13868:11:21"},"nodeType":"YulIf","src":"13865:448:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"13827:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"13834:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"13839:10:21","type":""}],"src":"13774:545:21"},{"body":{"nodeType":"YulBlock","src":"14409:81:21","statements":[{"nodeType":"YulAssignment","src":"14419:65:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14434:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14452:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"14455:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14448:3:21"},"nodeType":"YulFunctionCall","src":"14448:11:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14465:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14461:3:21"},"nodeType":"YulFunctionCall","src":"14461:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"14444:3:21"},"nodeType":"YulFunctionCall","src":"14444:24:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14440:3:21"},"nodeType":"YulFunctionCall","src":"14440:29:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14430:3:21"},"nodeType":"YulFunctionCall","src":"14430:40:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14476:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"14479:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14472:3:21"},"nodeType":"YulFunctionCall","src":"14472:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14427:2:21"},"nodeType":"YulFunctionCall","src":"14427:57:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"14419:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14386:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"14392:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"14400:4:21","type":""}],"src":"14324:166:21"},{"body":{"nodeType":"YulBlock","src":"14591:1256:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14601:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14621:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14615:5:21"},"nodeType":"YulFunctionCall","src":"14615:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"14605:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14668:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14670:16:21"},"nodeType":"YulFunctionCall","src":"14670:18:21"},"nodeType":"YulExpressionStatement","src":"14670:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14640:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14648:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14637:2:21"},"nodeType":"YulFunctionCall","src":"14637:30:21"},"nodeType":"YulIf","src":"14634:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14743:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"14781:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14775:5:21"},"nodeType":"YulFunctionCall","src":"14775:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14749:25:21"},"nodeType":"YulFunctionCall","src":"14749:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"14789:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"14699:43:21"},"nodeType":"YulFunctionCall","src":"14699:97:21"},"nodeType":"YulExpressionStatement","src":"14699:97:21"},{"nodeType":"YulVariableDeclaration","src":"14805:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14822:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"14809:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14832:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14851:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"14836:11:21","type":""}]},{"nodeType":"YulAssignment","src":"14864:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"14877:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"14864:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14934:656:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14948:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14967:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14979:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14975:3:21"},"nodeType":"YulFunctionCall","src":"14975:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14963:3:21"},"nodeType":"YulFunctionCall","src":"14963:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"14952:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14996:49:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15040:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"15010:29:21"},"nodeType":"YulFunctionCall","src":"15010:35:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"15000:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15058:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"15067:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15062:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15145:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15170:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15188:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15193:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15184:3:21"},"nodeType":"YulFunctionCall","src":"15184:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15178:5:21"},"nodeType":"YulFunctionCall","src":"15178:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15163:6:21"},"nodeType":"YulFunctionCall","src":"15163:42:21"},"nodeType":"YulExpressionStatement","src":"15163:42:21"},{"nodeType":"YulAssignment","src":"15222:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15236:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15244:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15232:3:21"},"nodeType":"YulFunctionCall","src":"15232:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15222:6:21"}]},{"nodeType":"YulAssignment","src":"15263:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15280:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"15291:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15276:3:21"},"nodeType":"YulFunctionCall","src":"15276:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"15263:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15092:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"15095:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15089:2:21"},"nodeType":"YulFunctionCall","src":"15089:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15104:28:21","statements":[{"nodeType":"YulAssignment","src":"15106:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15115:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"15118:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15111:3:21"},"nodeType":"YulFunctionCall","src":"15111:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15106:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"15085:3:21","statements":[]},"src":"15081:236:21"},{"body":{"nodeType":"YulBlock","src":"15365:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15383:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15410:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15415:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15406:3:21"},"nodeType":"YulFunctionCall","src":"15406:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15400:5:21"},"nodeType":"YulFunctionCall","src":"15400:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"15387:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"15450:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"15462:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15489:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"15492:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15485:3:21"},"nodeType":"YulFunctionCall","src":"15485:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"15501:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15481:3:21"},"nodeType":"YulFunctionCall","src":"15481:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15511:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15507:3:21"},"nodeType":"YulFunctionCall","src":"15507:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"15477:3:21"},"nodeType":"YulFunctionCall","src":"15477:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15473:3:21"},"nodeType":"YulFunctionCall","src":"15473:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15458:3:21"},"nodeType":"YulFunctionCall","src":"15458:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15443:6:21"},"nodeType":"YulFunctionCall","src":"15443:74:21"},"nodeType":"YulExpressionStatement","src":"15443:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"15336:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"15345:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15333:2:21"},"nodeType":"YulFunctionCall","src":"15333:19:21"},"nodeType":"YulIf","src":"15330:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15551:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15565:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"15568:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15561:3:21"},"nodeType":"YulFunctionCall","src":"15561:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"15577:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15557:3:21"},"nodeType":"YulFunctionCall","src":"15557:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15544:6:21"},"nodeType":"YulFunctionCall","src":"15544:36:21"},"nodeType":"YulExpressionStatement","src":"15544:36:21"}]},"nodeType":"YulCase","src":"14927:663:21","value":{"kind":"number","nodeType":"YulLiteral","src":"14932:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"15607:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"15621:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"15634:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15625:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"15670:67:21","statements":[{"nodeType":"YulAssignment","src":"15688:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15707:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"15712:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15703:3:21"},"nodeType":"YulFunctionCall","src":"15703:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15697:5:21"},"nodeType":"YulFunctionCall","src":"15697:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15688:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"15651:6:21"},"nodeType":"YulIf","src":"15648:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"15757:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15816:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"15823:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"15763:52:21"},"nodeType":"YulFunctionCall","src":"15763:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"15750:6:21"},"nodeType":"YulFunctionCall","src":"15750:81:21"},"nodeType":"YulExpressionStatement","src":"15750:81:21"}]},"nodeType":"YulCase","src":"15599:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"14907:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14915:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14904:2:21"},"nodeType":"YulFunctionCall","src":"14904:14:21"},"nodeType":"YulSwitch","src":"14897:944:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"14576:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"14582:3:21","type":""}],"src":"14495:1352:21"},{"body":{"nodeType":"YulBlock","src":"15919:200:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15936:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"15941:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15929:6:21"},"nodeType":"YulFunctionCall","src":"15929:19:21"},"nodeType":"YulExpressionStatement","src":"15929:19:21"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15974:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15979:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15970:3:21"},"nodeType":"YulFunctionCall","src":"15970:14:21"},{"name":"start","nodeType":"YulIdentifier","src":"15986:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"15993:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"15957:12:21"},"nodeType":"YulFunctionCall","src":"15957:43:21"},"nodeType":"YulExpressionStatement","src":"15957:43:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16024:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16029:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16020:3:21"},"nodeType":"YulFunctionCall","src":"16020:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"16038:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16016:3:21"},"nodeType":"YulFunctionCall","src":"16016:27:21"},{"kind":"number","nodeType":"YulLiteral","src":"16045:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16009:6:21"},"nodeType":"YulFunctionCall","src":"16009:38:21"},"nodeType":"YulExpressionStatement","src":"16009:38:21"},{"nodeType":"YulAssignment","src":"16056:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16071:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16084:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16092:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16080:3:21"},"nodeType":"YulFunctionCall","src":"16080:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16101:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16097:3:21"},"nodeType":"YulFunctionCall","src":"16097:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16076:3:21"},"nodeType":"YulFunctionCall","src":"16076:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16067:3:21"},"nodeType":"YulFunctionCall","src":"16067:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"16108:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16063:3:21"},"nodeType":"YulFunctionCall","src":"16063:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16056:3:21"}]}]},"name":"abi_encode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"15888:5:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"15895:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15903:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15911:3:21","type":""}],"src":"15852:267:21"},{"body":{"nodeType":"YulBlock","src":"16451:543:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16468:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"16479:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16461:6:21"},"nodeType":"YulFunctionCall","src":"16461:25:21"},"nodeType":"YulExpressionStatement","src":"16461:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16506:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16517:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16502:3:21"},"nodeType":"YulFunctionCall","src":"16502:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"16522:3:21","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16495:6:21"},"nodeType":"YulFunctionCall","src":"16495:31:21"},"nodeType":"YulExpressionStatement","src":"16495:31:21"},{"nodeType":"YulVariableDeclaration","src":"16535:77:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16576:6:21"},{"name":"value2","nodeType":"YulIdentifier","src":"16584:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16596:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16607:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16592:3:21"},"nodeType":"YulFunctionCall","src":"16592:19:21"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"16549:26:21"},"nodeType":"YulFunctionCall","src":"16549:63:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"16539:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16632:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16643:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16628:3:21"},"nodeType":"YulFunctionCall","src":"16628:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"16652:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16660:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16648:3:21"},"nodeType":"YulFunctionCall","src":"16648:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16621:6:21"},"nodeType":"YulFunctionCall","src":"16621:50:21"},"nodeType":"YulExpressionStatement","src":"16621:50:21"},{"nodeType":"YulVariableDeclaration","src":"16680:64:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16721:6:21"},{"name":"value4","nodeType":"YulIdentifier","src":"16729:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"16737:6:21"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"16694:26:21"},"nodeType":"YulFunctionCall","src":"16694:50:21"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"16684:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16764:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16775:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16760:3:21"},"nodeType":"YulFunctionCall","src":"16760:18:21"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"16784:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16792:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16780:3:21"},"nodeType":"YulFunctionCall","src":"16780:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16753:6:21"},"nodeType":"YulFunctionCall","src":"16753:50:21"},"nodeType":"YulExpressionStatement","src":"16753:50:21"},{"nodeType":"YulAssignment","src":"16812:58:21","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"16847:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"16855:6:21"},{"name":"tail_2","nodeType":"YulIdentifier","src":"16863:6:21"}],"functionName":{"name":"abi_encode_string_calldata","nodeType":"YulIdentifier","src":"16820:26:21"},"nodeType":"YulFunctionCall","src":"16820:50:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16812:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16890:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16901:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16886:3:21"},"nodeType":"YulFunctionCall","src":"16886:19:21"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"16911:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16919:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16907:3:21"},"nodeType":"YulFunctionCall","src":"16907:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16879:6:21"},"nodeType":"YulFunctionCall","src":"16879:52:21"},"nodeType":"YulExpressionStatement","src":"16879:52:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16951:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16962:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16947:3:21"},"nodeType":"YulFunctionCall","src":"16947:19:21"},{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"16972:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16980:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16968:3:21"},"nodeType":"YulFunctionCall","src":"16968:19:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16940:6:21"},"nodeType":"YulFunctionCall","src":"16940:48:21"},"nodeType":"YulExpressionStatement","src":"16940:48:21"}]},"name":"abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr_t_string_calldata_ptr_t_uint32_t_uint16__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint32_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16356:9:21","type":""},{"name":"value8","nodeType":"YulTypedName","src":"16367:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"16375:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"16383:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"16391:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16399:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16407:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16415:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16423:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16431:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16442:4:21","type":""}],"src":"16124:870:21"},{"body":{"nodeType":"YulBlock","src":"17173:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17190:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17201:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17183:6:21"},"nodeType":"YulFunctionCall","src":"17183:21:21"},"nodeType":"YulExpressionStatement","src":"17183:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17224:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17235:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17220:3:21"},"nodeType":"YulFunctionCall","src":"17220:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"17240:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17213:6:21"},"nodeType":"YulFunctionCall","src":"17213:30:21"},"nodeType":"YulExpressionStatement","src":"17213:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17263:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17274:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17259:3:21"},"nodeType":"YulFunctionCall","src":"17259:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"17279:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17252:6:21"},"nodeType":"YulFunctionCall","src":"17252:62:21"},"nodeType":"YulExpressionStatement","src":"17252:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17334:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17345:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17330:3:21"},"nodeType":"YulFunctionCall","src":"17330:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"17350:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17323:6:21"},"nodeType":"YulFunctionCall","src":"17323:36:21"},"nodeType":"YulExpressionStatement","src":"17323:36:21"},{"nodeType":"YulAssignment","src":"17368:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17380:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17391:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17376:3:21"},"nodeType":"YulFunctionCall","src":"17376:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17368:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17150:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17164:4:21","type":""}],"src":"16999:402:21"},{"body":{"nodeType":"YulBlock","src":"17470:358:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17480:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17495:1:21","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"17484:7:21","type":""}]},{"nodeType":"YulAssignment","src":"17505:16:21","value":{"name":"power_1","nodeType":"YulIdentifier","src":"17514:7:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17505:5:21"}]},{"nodeType":"YulAssignment","src":"17530:13:21","value":{"name":"_base","nodeType":"YulIdentifier","src":"17538:5:21"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"17530:4:21"}]},{"body":{"nodeType":"YulBlock","src":"17594:228:21","statements":[{"body":{"nodeType":"YulBlock","src":"17639:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17641:16:21"},"nodeType":"YulFunctionCall","src":"17641:18:21"},"nodeType":"YulExpressionStatement","src":"17641:18:21"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17614:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17628:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"17624:3:21"},"nodeType":"YulFunctionCall","src":"17624:6:21"},{"name":"base","nodeType":"YulIdentifier","src":"17632:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17620:3:21"},"nodeType":"YulFunctionCall","src":"17620:17:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17611:2:21"},"nodeType":"YulFunctionCall","src":"17611:27:21"},"nodeType":"YulIf","src":"17608:53:21"},{"body":{"nodeType":"YulBlock","src":"17700:29:21","statements":[{"nodeType":"YulAssignment","src":"17702:25:21","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"17715:5:21"},{"name":"base","nodeType":"YulIdentifier","src":"17722:4:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17711:3:21"},"nodeType":"YulFunctionCall","src":"17711:16:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17702:5:21"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17681:8:21"},{"name":"power_1","nodeType":"YulIdentifier","src":"17691:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17677:3:21"},"nodeType":"YulFunctionCall","src":"17677:22:21"},"nodeType":"YulIf","src":"17674:55:21"},{"nodeType":"YulAssignment","src":"17742:23:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"17754:4:21"},{"name":"base","nodeType":"YulIdentifier","src":"17760:4:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17750:3:21"},"nodeType":"YulFunctionCall","src":"17750:15:21"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"17742:4:21"}]},{"nodeType":"YulAssignment","src":"17778:34:21","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"17794:7:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"17803:8:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"17790:3:21"},"nodeType":"YulFunctionCall","src":"17790:22:21"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"17778:8:21"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17563:8:21"},{"name":"power_1","nodeType":"YulIdentifier","src":"17573:7:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17560:2:21"},"nodeType":"YulFunctionCall","src":"17560:21:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17582:3:21","statements":[]},"pre":{"nodeType":"YulBlock","src":"17556:3:21","statements":[]},"src":"17552:270:21"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"17434:5:21","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17441:8:21","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17454:5:21","type":""},{"name":"base","nodeType":"YulTypedName","src":"17461:4:21","type":""}],"src":"17406:422:21"},{"body":{"nodeType":"YulBlock","src":"17892:747:21","statements":[{"body":{"nodeType":"YulBlock","src":"17930:52:21","statements":[{"nodeType":"YulAssignment","src":"17944:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17953:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"17944:5:21"}]},{"nodeType":"YulLeave","src":"17967:5:21"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"17912:8:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17905:6:21"},"nodeType":"YulFunctionCall","src":"17905:16:21"},"nodeType":"YulIf","src":"17902:80:21"},{"body":{"nodeType":"YulBlock","src":"18015:52:21","statements":[{"nodeType":"YulAssignment","src":"18029:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18038:1:21","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18029:5:21"}]},{"nodeType":"YulLeave","src":"18052:5:21"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18001:4:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17994:6:21"},"nodeType":"YulFunctionCall","src":"17994:12:21"},"nodeType":"YulIf","src":"17991:76:21"},{"cases":[{"body":{"nodeType":"YulBlock","src":"18103:52:21","statements":[{"nodeType":"YulAssignment","src":"18117:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18126:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18117:5:21"}]},{"nodeType":"YulLeave","src":"18140:5:21"}]},"nodeType":"YulCase","src":"18096:59:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18101:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"18171:123:21","statements":[{"body":{"nodeType":"YulBlock","src":"18206:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18208:16:21"},"nodeType":"YulFunctionCall","src":"18208:18:21"},"nodeType":"YulExpressionStatement","src":"18208:18:21"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18191:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"18201:3:21","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18188:2:21"},"nodeType":"YulFunctionCall","src":"18188:17:21"},"nodeType":"YulIf","src":"18185:43:21"},{"nodeType":"YulAssignment","src":"18241:25:21","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18254:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"18264:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18250:3:21"},"nodeType":"YulFunctionCall","src":"18250:16:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18241:5:21"}]},{"nodeType":"YulLeave","src":"18279:5:21"}]},"nodeType":"YulCase","src":"18164:130:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18169:1:21","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"18083:4:21"},"nodeType":"YulSwitch","src":"18076:218:21"},{"body":{"nodeType":"YulBlock","src":"18392:70:21","statements":[{"nodeType":"YulAssignment","src":"18406:28:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18419:4:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"18425:8:21"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"18415:3:21"},"nodeType":"YulFunctionCall","src":"18415:19:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18406:5:21"}]},{"nodeType":"YulLeave","src":"18447:5:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18316:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"18322:2:21","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18313:2:21"},"nodeType":"YulFunctionCall","src":"18313:12:21"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18330:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"18340:2:21","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18327:2:21"},"nodeType":"YulFunctionCall","src":"18327:16:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18309:3:21"},"nodeType":"YulFunctionCall","src":"18309:35:21"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18353:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"18359:3:21","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18350:2:21"},"nodeType":"YulFunctionCall","src":"18350:13:21"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"18368:8:21"},{"kind":"number","nodeType":"YulLiteral","src":"18378:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18365:2:21"},"nodeType":"YulFunctionCall","src":"18365:16:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18346:3:21"},"nodeType":"YulFunctionCall","src":"18346:36:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18306:2:21"},"nodeType":"YulFunctionCall","src":"18306:77:21"},"nodeType":"YulIf","src":"18303:159:21"},{"nodeType":"YulVariableDeclaration","src":"18471:57:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18513:4:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"18519:8:21"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"18494:18:21"},"nodeType":"YulFunctionCall","src":"18494:34:21"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"18475:7:21","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"18484:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"18573:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18575:16:21"},"nodeType":"YulFunctionCall","src":"18575:18:21"},"nodeType":"YulExpressionStatement","src":"18575:18:21"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"18543:7:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18556:3:21"},"nodeType":"YulFunctionCall","src":"18556:6:21"},{"name":"base_1","nodeType":"YulIdentifier","src":"18564:6:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18552:3:21"},"nodeType":"YulFunctionCall","src":"18552:19:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18540:2:21"},"nodeType":"YulFunctionCall","src":"18540:32:21"},"nodeType":"YulIf","src":"18537:58:21"},{"nodeType":"YulAssignment","src":"18604:29:21","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"18617:7:21"},{"name":"base_1","nodeType":"YulIdentifier","src":"18626:6:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18613:3:21"},"nodeType":"YulFunctionCall","src":"18613:20:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18604:5:21"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"17863:4:21","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"17869:8:21","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"17882:5:21","type":""}],"src":"17833:806:21"},{"body":{"nodeType":"YulBlock","src":"18714:61:21","statements":[{"nodeType":"YulAssignment","src":"18724:45:21","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"18754:4:21"},{"name":"exponent","nodeType":"YulIdentifier","src":"18760:8:21"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"18733:20:21"},"nodeType":"YulFunctionCall","src":"18733:36:21"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"18724:5:21"}]}]},"name":"checked_exp_t_uint256_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"18685:4:21","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"18691:8:21","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"18704:5:21","type":""}],"src":"18644:131:21"},{"body":{"nodeType":"YulBlock","src":"18954:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18971:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18982:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18964:6:21"},"nodeType":"YulFunctionCall","src":"18964:21:21"},"nodeType":"YulExpressionStatement","src":"18964:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19005:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19016:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19001:3:21"},"nodeType":"YulFunctionCall","src":"19001:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"19021:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18994:6:21"},"nodeType":"YulFunctionCall","src":"18994:30:21"},"nodeType":"YulExpressionStatement","src":"18994:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19044:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19055:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19040:3:21"},"nodeType":"YulFunctionCall","src":"19040:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"19060:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19033:6:21"},"nodeType":"YulFunctionCall","src":"19033:62:21"},"nodeType":"YulExpressionStatement","src":"19033:62:21"},{"nodeType":"YulAssignment","src":"19104:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19116:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19127:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19112:3:21"},"nodeType":"YulFunctionCall","src":"19112:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19104:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18931:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18945:4:21","type":""}],"src":"18780:356:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint32_t_uint32_t_uint32_t_uint16_t_bool_t_address_t_address__fromStack_reversed(headStart, value11, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 384)\n        let tail_1 := abi_encode_string(value0, add(headStart, 384))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_string(value2, tail_2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        let _1 := 0xffffffff\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n        mstore(add(headStart, 224), and(value7, _1))\n        mstore(add(headStart, 256), and(value8, 0xffff))\n        abi_encode_bool(value9, add(headStart, 288))\n        abi_encode_address(value10, add(headStart, 320))\n        abi_encode_address(value11, add(headStart, 352))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptrt_uint32t_uint32t_uint32t_uint16(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(calldataload(add(headStart, 32)), _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_string_calldata(add(headStart, calldataload(add(headStart, 32))), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        if gt(calldataload(add(headStart, 64)), _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_string_calldata(add(headStart, calldataload(add(headStart, 64))), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        if gt(calldataload(add(headStart, 96)), _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_string_calldata(add(headStart, calldataload(add(headStart, 96))), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n        value7 := abi_decode_uint32(add(headStart, 128))\n        value8 := abi_decode_uint32(add(headStart, 160))\n        value9 := abi_decode_uint32(add(headStart, 192))\n        value10 := abi_decode_uint16(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_03a0ef2274e5fa9c92bd6c8904f1025dd04b34d1da74eba1106c91ebdbd13a59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Already ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bff8fba7e8290554d856a3fb22093bf87bdf5e84742e561d9c5dea6562588f74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Project completed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cf1cbb480479ea4d7c3f4f3b5a2d1e356ab6d98c8dec1739a2a160b41897be8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"min 0.01 ether\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_b66f79849fb2a1aeae618e045c8144ee98af31f7d75c8241357798f6fb27a16b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Project already started\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a3a9eb15a1903ce0ba5279cfeb2e00d127b5a6f2993d14812bc6864e4dd646bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"No commitment\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"withdraw failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6ccad79e7aa285c9f3f2db83e30790c7046ceac0d7d86d7990286517708fb5ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Not author\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4762d97070854ffa537667d2f87773fc610015ed3ee39aef0aef6647d23f7004__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"not closed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 224)\n        let tail_1 := abi_encode_string(value0, add(headStart, 224))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_addresst_bytes32_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_contract$_IERC20MetadataUpgradeable_$883_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a3b6d4b23ae4bbd8dffd90f5160a835673157044abc6160caab696199469b553__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid start time\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f79adeb066186ecb6bfb5c8311500863e681b7aa46040b41ed874ebc28bd54f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid end time\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_268b2b3ef04afe4685fdbcff6cb683aa408f3edfff411f4ac3bbfee177e0bffa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Maximum duration exceeded\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint256_t_string_calldata_ptr_t_string_calldata_ptr_t_string_calldata_ptr_t_uint32_t_uint16__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint32_t_uint16__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 192)\n        let tail_1 := abi_encode_string_calldata(value1, value2, add(headStart, 192))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string_calldata(value3, value4, tail_1)\n        mstore(add(headStart, 96), sub(tail_2, headStart))\n        tail := abi_encode_string_calldata(value5, value6, tail_2)\n        mstore(add(headStart, 128), and(value7, 0xffffffff))\n        mstore(add(headStart, 160), and(value8, 0xffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100a75760003560e01c806360ae7c3b1161006457806360ae7c3b14610182578063715018a6146101a25780638da5cb5b146101b7578063bb89bf75146101df578063e90d4c06146101ff578063f2fde38b1461023757600080fd5b806306661abd146100ac578063107046bd146100d557806316509ee21461010d578063249411471461012257806344a9ae8c146101425780635702146914610162575b600080fd5b3480156100b857600080fd5b506100c260045481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100f56100f036600461185c565b610257565b6040516100cc9c9b9a999897969594939291906118bb565b61012061011b36600461185c565b610472565b005b34801561012e57600080fd5b5061012061013d36600461185c565b6108a6565b34801561014e57600080fd5b5061012061015d36600461185c565b610a48565b34801561016e57600080fd5b5061012061017d36600461185c565b610c1a565b34801561018e57600080fd5b5061012061019d36600461185c565b61108d565b3480156101ae57600080fd5b50610120611261565b3480156101c357600080fd5b506000546040516001600160a01b0390911681526020016100cc565b3480156101eb57600080fd5b506101206101fa366004611a02565b611275565b34801561020b57600080fd5b506100c261021a366004611af3565b600660209081526000928352604080842090915290825290205481565b34801561024357600080fd5b50610120610252366004611b23565b6116ab565b60056020526000908152604090208054819061027290611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461029e90611b47565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b50505050509080600101805461030090611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461032c90611b47565b80156103795780601f1061034e57610100808354040283529160200191610379565b820191906000526020600020905b81548152906001019060200180831161035c57829003601f168201915b50505050509080600201805461038e90611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546103ba90611b47565b80156104075780601f106103dc57610100808354040283529160200191610407565b820191906000526020600020905b8154815290600101906020018083116103ea57829003601f168201915b50505060038401546004850154600586015460068701546007909701549596929591945063ffffffff8082169450600160201b8204811693600160401b83049091169261ffff600160601b8404169260ff600160701b90910416916001600160a01b0390811691168c565b600081815260056020819052604090912001548190600160201b900463ffffffff164211156104bc5760405162461bcd60e51b81526004016104b390611b81565b60405180910390fd5b60008181526005602081905260409091200154600160701b900460ff16156104f65760405162461bcd60e51b81526004016104b390611ba8565b662386f26fc1000034101561053e5760405162461bcd60e51b815260206004820152600e60248201526d36b4b710181718189032ba3432b960911b60448201526064016104b3565b6000828152600560205260408082208151610180810190925280548290829061056690611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461059290611b47565b80156105df5780601f106105b4576101008083540402835291602001916105df565b820191906000526020600020905b8154815290600101906020018083116105c257829003601f168201915b505050505081526020016001820180546105f890611b47565b80601f016020809104026020016040519081016040528092919081815260200182805461062490611b47565b80156106715780601f1061064657610100808354040283529160200191610671565b820191906000526020600020905b81548152906001019060200180831161065457829003601f168201915b5050505050815260200160028201805461068a90611b47565b80601f01602080910402602001604051908101604052809291908181526020018280546106b690611b47565b80156107035780601f106106d857610100808354040283529160200191610703565b820191906000526020600020905b8154815290600101906020018083116106e657829003601f168201915b50505091835250506003820154602082015260048201546040820152600582015463ffffffff8082166060840152600160201b820481166080840152600160401b82041660a0830152600160601b810461ffff1660c0830152600160701b900460ff16151560e082015260068201546001600160a01b039081166101008301526007909201549091166101209091015290506000806107a134611724565b9150915081836060018181516107b79190611be9565b9052506080830180518291906107ce908390611be9565b9052506000858152600660209081526040808320338452909152812080543492906107fa908490611be9565b9091555050604051348152339086907f245cbccbc6875e4b0475a653568fd4f7c2dae5fb8929e33c0d66dc530ba11b009060200160405180910390a38260e0015163ffffffff1683606001511061089f5760016101208401526060830151608084015160405187927ff418560cae8df9d7d7fb63eca7a926821d509b9751b541b3aac4249c34bafa639261089692918252602082015260400190565b60405180910390a25b5050505050565b6108ae611764565b600081815260056020819052604090912001548190600160201b900463ffffffff164211156108ef5760405162461bcd60e51b81526004016104b390611b81565b60008181526005602081905260409091200154600160701b900460ff16156109295760405162461bcd60e51b81526004016104b390611ba8565b600082815260056020819052604090912001544263ffffffff909116116109925760405162461bcd60e51b815260206004820152601760248201527f50726f6a65637420616c7265616479207374617274656400000000000000000060448201526064016104b3565b6000828152600560205260408120906109ab828261180e565b6109b960018301600061180e565b6109c760028301600061180e565b5060006003820181905560048201556005810180546effffffffffffffffffffffffffffff191690556006810180546001600160a01b03199081169091556007909101805490911690556040518281527fe3805ed669490875ae87c5c8b1ad6ecca0e5e67305a833926d0d4317c4822fc09060200160405180910390a15050565b600081815260056020819052604090912001548190600160201b900463ffffffff16421115610a895760405162461bcd60e51b81526004016104b390611b81565b60008181526005602081905260409091200154600160701b900460ff1615610ac35760405162461bcd60e51b81526004016104b390611ba8565b6000828152600660209081526040808320338452909152812054839180610ae983611724565b600088815260056020526040812060030180549395509193508492610b0f908490611c02565b909155505060008681526005602052604081206004018054839290610b35908490611c02565b909155505060008681526006602090815260408083203380855292528083208390555185908381818185875af1925050503d8060008114610b92576040519150601f19603f3d011682016040523d82523d6000602084013e610b97565b606091505b5050905080610bda5760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b60448201526064016104b3565b604051848152339088907f7fd902d6e186354d1617b957fc4cb4a144f44a19cc5c4525cfb772d707c405c29060200160405180910390a350505050505050565b60008181526005602052604090206006015481906001600160a01b03163314610c725760405162461bcd60e51b815260206004820152600a6024820152692737ba1030baba3437b960b11b60448201526064016104b3565b600082815260056020819052604090912001548290600160201b900463ffffffff16421180610cba575060008181526005602081905260409091200154600160701b900460ff165b610cf35760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104b3565b60008381526005602052604080822081516101808101909252805482908290610d1b90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4790611b47565b8015610d945780601f10610d6957610100808354040283529160200191610d94565b820191906000526020600020905b815481529060010190602001808311610d7757829003601f168201915b50505050508152602001600182018054610dad90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd990611b47565b8015610e265780601f10610dfb57610100808354040283529160200191610e26565b820191906000526020600020905b815481529060010190602001808311610e0957829003601f168201915b50505050508152602001600282018054610e3f90611b47565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6b90611b47565b8015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b505050918352505060038201546020820152600480830154604080840191909152600584015463ffffffff8082166060860152600160201b820481166080860152600160401b82041660a0850152600160601b810461ffff1660c0850152600160701b900460ff16151560e084015260068401546001600160a01b0390811661010085015260079094015484166101209093019290925260025484518584015161014087015194516325b211eb60e11b81529697506000969290951694634b6423d694610f9494929391923092601b9291839160239101611c15565b6020604051808303816000875af1158015610fb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd79190611c6f565b60035460015460405163e343361560e01b81526001600160a01b038085166004830152918216602482015292935060009291169063e34336159060440160408051808303816000875af1158015611032573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110569190611c8c565b5060405190915086907fbc8073ff7d7bd2ab93612911916e7941431e9bae6df21f172a7f4ace4284b80490600090a2505050505050565b600081815260056020819052604090912001548190600160201b900463ffffffff164211806110d5575060008181526005602081905260409091200154600160701b900460ff165b61110e5760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104b3565b6000828152600660209081526040808320338452909152812054839161113382611724565b50600086815260056020526040812060030154919250908290611157906023611cba565b6111619190611cdc565b6002546000888152600560205260409081902060070154905163e486033960e01b81526001600160a01b039182166004820152929350169063e4860339906024016020604051808303816000875af11580156111c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e59190611c6f565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af1158015611234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112589190611cf3565b50505050505050565b611269611764565b61127360006117be565b565b61127d611764565b428463ffffffff1610156112c85760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642073746172742074696d6560701b60448201526064016104b3565b8363ffffffff168363ffffffff16116113165760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420656e642074696d6560801b60448201526064016104b3565b61132362093a8042611be9565b8363ffffffff1611156113785760405162461bcd60e51b815260206004820152601960248201527f4d6178696d756d206475726174696f6e2065786365656465640000000000000060448201526064016104b3565b6004805490600061138883611d15565b91905055506040518061018001604052808b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815291810191908990899081908401838280828437600092019190915250505090825250604080516020601f8c018190048102820181019092528a815291810191908b908b9081908401838280828437600081840152601f19601f82011690508083019250505050505050815260200160008152602001600081526020018563ffffffff1681526020018463ffffffff1681526020018363ffffffff1681526020018261ffff1681526020016000151581526020018c6001600160a01b0316815260200160006001600160a01b031681525060056000600454815260200190815260200160002060008201518160000190816114e59190611d93565b50602082015160018201906114fa9082611d93565b506040820151600282019061150f9082611d93565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160050160046101000a81548163ffffffff021916908363ffffffff16021790555060e08201518160050160086101000a81548163ffffffff021916908363ffffffff16021790555061010082015181600501600c6101000a81548161ffff021916908361ffff16021790555061012082015181600501600e6101000a81548160ff0219169083151502179055506101408201518160060160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101608201518160070160006101000a8154816001600160a01b0302191690836001600160a01b031602179055509050508a6001600160a01b03168363ffffffff168563ffffffff167f49230f399aeb93ae9a7a3d2ee455e764a5b042340225e7e2ec99dde6f7e9bf8d6004548e8e8e8e8e8e8c8c60405161169699989796959493929190611e7c565b60405180910390a45050505050505050505050565b6116b3611764565b6001600160a01b0381166117185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b3565b611721816117be565b50565b600080806014611735600286611fc9565b61173f9190611cba565b905060008261174f600287611fc9565b6117599190611c02565b959194509092505050565b6000546001600160a01b031633146112735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b50805461181a90611b47565b6000825580601f1061182a575050565b601f01602090049060005260206000209081019061172191905b808211156118585760008155600101611844565b5090565b60006020828403121561186e57600080fd5b5035919050565b6000815180845260005b8181101561189b5760208185018101518683018201520161187f565b506000602082860101526020601f19601f83011685010191505092915050565b610180815260006118d061018083018f611875565b82810360208401526118e2818f611875565b905082810360408401526118f6818e611875565b9150508a606083015289608083015263ffffffff808a1660a084015280891660c084015280881660e08401525061ffff861661010083015261193d61012083018615159052565b6001600160a01b0384166101408301526001600160a01b0383166101608301529d9c50505050505050505050505050565b6001600160a01b038116811461172157600080fd5b803561198e8161196e565b919050565b60008083601f8401126119a557600080fd5b50813567ffffffffffffffff8111156119bd57600080fd5b6020830191508360208285010111156119d557600080fd5b9250929050565b803563ffffffff8116811461198e57600080fd5b803561ffff8116811461198e57600080fd5b60008060008060008060008060008060006101008c8e031215611a2457600080fd5b611a2d8c611983565b9a5067ffffffffffffffff8060208e01351115611a4957600080fd5b611a598e60208f01358f01611993565b909b50995060408d0135811015611a6f57600080fd5b611a7f8e60408f01358f01611993565b909950975060608d0135811015611a9557600080fd5b50611aa68d60608e01358e01611993565b9096509450611ab760808d016119dc565b9350611ac560a08d016119dc565b9250611ad360c08d016119dc565b9150611ae160e08d016119f0565b90509295989b509295989b9093969950565b60008060408385031215611b0657600080fd5b823591506020830135611b188161196e565b809150509250929050565b600060208284031215611b3557600080fd5b8135611b408161196e565b9392505050565b600181811c90821680611b5b57607f821691505b602082108103611b7b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600d908201526c105b1c9958591e48195b991959609a1b604082015260600190565b602080825260119082015270141c9bda9958dd0818dbdb5c1b195d1959607a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611bfc57611bfc611bd3565b92915050565b81810381811115611bfc57611bfc611bd3565b60e081526000611c2860e083018a611875565b8281036020840152611c3a818a611875565b6001600160a01b0398891660408501526060840197909752505092909416608083015260a082015260c0019190915292915050565b600060208284031215611c8157600080fd5b8151611b408161196e565b60008060408385031215611c9f57600080fd5b8251611caa8161196e565b6020939093015192949293505050565b600082611cd757634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417611bfc57611bfc611bd3565b600060208284031215611d0557600080fd5b81518015158114611b4057600080fd5b600060018201611d2757611d27611bd3565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f821115611d8e57600081815260208120601f850160051c81016020861015611d6b5750805b601f850160051c820191505b81811015611d8a57828155600101611d77565b5050505b505050565b815167ffffffffffffffff811115611dad57611dad611d2e565b611dc181611dbb8454611b47565b84611d44565b602080601f831160018114611df65760008415611dde5750858301515b600019600386901b1c1916600185901b178555611d8a565b600085815260208120601f198616915b82811015611e2557888601518255948401946001909101908401611e06565b5085821015611e435787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208201526000611e9660c083018a8c611e53565b8281036040840152611ea981898b611e53565b90508281036060840152611ebe818789611e53565b91505063ffffffff8416608083015261ffff831660a08301529a9950505050505050505050565b600181815b80851115611f20578160001904821115611f0657611f06611bd3565b80851615611f1357918102915b93841c9390800290611eea565b509250929050565b600082611f3757506001611bfc565b81611f4457506000611bfc565b8160018114611f5a5760028114611f6457611f80565b6001915050611bfc565b60ff841115611f7557611f75611bd3565b50506001821b611bfc565b5060208310610133831016604e8410600b8410161715611fa3575081810a611bfc565b611fad8383611ee5565b8060001904821115611fc157611fc1611bd3565b029392505050565b6000611b408383611f2856fea2646970667358221220d08946b677167cc5ab6a9b9e8e5c29c23d4179a651c935fb92b0fd9335adc8d264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60AE7C3B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x60AE7C3B EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xBB89BF75 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0xE90D4C06 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x107046BD EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x16509EE2 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x24941147 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x44A9AE8C EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x57021469 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x17D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0xC1A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x1261 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x1275 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B23 JUMP JUMPDEST PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x272 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29E SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32C SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x379 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x379 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x38E SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3BA SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x407 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x407 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 POP PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP5 POP PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND SWAP4 PUSH1 0x1 PUSH1 0x40 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP3 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x60 SHL DUP5 DIV AND SWAP3 PUSH1 0xFF PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP13 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x36B4B710181718189032BA3432B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x180 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x566 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x592 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5DF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x5F8 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x624 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x671 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x646 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x671 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x654 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x68A SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B6 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x703 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x703 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SHL DUP2 DIV PUSH2 0xFFFF AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x7 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x7A1 CALLVALUE PUSH2 0x1724 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP4 PUSH1 0x60 ADD DUP2 DUP2 MLOAD PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x80 DUP4 ADD DUP1 MLOAD DUP3 SWAP2 SWAP1 PUSH2 0x7CE SWAP1 DUP4 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x7FA SWAP1 DUP5 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 DUP7 SWAP1 PUSH32 0x245CBCCBC6875E4B0475A653568FD4F7C2DAE5FB8929E33C0D66DC530BA11B00 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP3 PUSH1 0xE0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x60 ADD MLOAD LT PUSH2 0x89F JUMPI PUSH1 0x1 PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x40 MLOAD DUP8 SWAP3 PUSH32 0xF418560CAE8DF9D7D7FB63ECA7A926821D509B9751B541B3AAC4249C34BAFA63 SWAP3 PUSH2 0x896 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8AE PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND GT PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F6A65637420616C72656164792073746172746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x9AB DUP3 DUP3 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x9B9 PUSH1 0x1 DUP4 ADD PUSH1 0x0 PUSH2 0x180E JUMP JUMPDEST PUSH2 0x9C7 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x180E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x7 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xE3805ED669490875AE87C5C8B1AD6ECCA0E5E67305A833926D0D4317C4822FC0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B3 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP4 SWAP2 DUP1 PUSH2 0xAE9 DUP4 PUSH2 0x1724 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP DUP5 SWAP3 PUSH2 0xB0F SWAP1 DUP5 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB35 SWAP1 DUP5 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE MLOAD DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1DDA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 DUP9 SWAP1 PUSH32 0x7FD902D6E186354D1617B957FC4CB4A144F44A19CC5C4525CFB772D707C405C2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA1030BABA3437B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT DUP1 PUSH2 0xCBA JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD0818DB1BDCD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x180 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xD1B SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD47 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD69 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xDAD SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDD9 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE26 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDFB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE26 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE09 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xE3F SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE6B SWAP1 PUSH2 0x1B47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP1 DUP4 ADD SLOAD PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SHL DUP2 DIV PUSH2 0xFFFF AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x7 SWAP1 SWAP5 ADD SLOAD DUP5 AND PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 SLOAD DUP5 MLOAD DUP6 DUP5 ADD MLOAD PUSH2 0x140 DUP8 ADD MLOAD SWAP5 MLOAD PUSH4 0x25B211EB PUSH1 0xE1 SHL DUP2 MSTORE SWAP7 SWAP8 POP PUSH1 0x0 SWAP7 SWAP3 SWAP1 SWAP6 AND SWAP5 PUSH4 0x4B6423D6 SWAP5 PUSH2 0xF94 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 ADDRESS SWAP3 PUSH1 0x1B SWAP3 SWAP2 DUP4 SWAP2 PUSH1 0x23 SWAP2 ADD PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD7 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE3433615 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 AND SWAP1 PUSH4 0xE3433615 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1032 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1056 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP7 SWAP1 PUSH32 0xBC8073FF7D7BD2AB93612911916E7941431E9BAE6DF21F172A7F4ACE4284B804 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP GT DUP1 PUSH2 0x10D5 JUMPI POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDD0818DB1BDCD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP4 SWAP2 PUSH2 0x1133 DUP3 PUSH2 0x1724 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 PUSH2 0x1157 SWAP1 PUSH1 0x23 PUSH2 0x1CBA JUMP JUMPDEST PUSH2 0x1161 SWAP2 SWAP1 PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD SWAP1 MLOAD PUSH4 0xE4860339 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP AND SWAP1 PUSH4 0xE4860339 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E5 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1234 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1258 SWAP2 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1269 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x1273 PUSH1 0x0 PUSH2 0x17BE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x127D PUSH2 0x1764 JUMP JUMPDEST TIMESTAMP DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C69642073746172742074696D65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420656E642074696D65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1323 PUSH3 0x93A80 TIMESTAMP PUSH2 0x1BE9 JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1378 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D206475726174696F6E20657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1388 DUP4 PUSH2 0x1D15 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP11 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP9 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP11 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x14E5 SWAP2 SWAP1 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x14FA SWAP1 DUP3 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x150F SWAP1 DUP3 PUSH2 0x1D93 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND PUSH32 0x49230F399AEB93AE9A7A3D2EE455E764A5B042340225E7E2EC99DDE6F7E9BF8D PUSH1 0x4 SLOAD DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1696 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16B3 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1718 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH2 0x1721 DUP2 PUSH2 0x17BE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x14 PUSH2 0x1735 PUSH1 0x2 DUP7 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH2 0x174F PUSH1 0x2 DUP8 PUSH2 0x1FC9 JUMP JUMPDEST PUSH2 0x1759 SWAP2 SWAP1 PUSH2 0x1C02 JUMP JUMPDEST SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x181A SWAP1 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x182A JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1721 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1858 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1844 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x186E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x189B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x187F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18D0 PUSH2 0x180 DUP4 ADD DUP16 PUSH2 0x1875 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x18E2 DUP2 DUP16 PUSH2 0x1875 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x18F6 DUP2 DUP15 PUSH2 0x1875 JUMP JUMPDEST SWAP2 POP POP DUP11 PUSH1 0x60 DUP4 ADD MSTORE DUP10 PUSH1 0x80 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 DUP11 AND PUSH1 0xA0 DUP5 ADD MSTORE DUP1 DUP10 AND PUSH1 0xC0 DUP5 ADD MSTORE DUP1 DUP9 AND PUSH1 0xE0 DUP5 ADD MSTORE POP PUSH2 0xFFFF DUP7 AND PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x193D PUSH2 0x120 DUP4 ADD DUP7 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x160 DUP4 ADD MSTORE SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x198E DUP2 PUSH2 0x196E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x198E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x198E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x1A24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2D DUP13 PUSH2 0x1983 JUMP JUMPDEST SWAP11 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x20 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x1A49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A59 DUP15 PUSH1 0x20 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x1A6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A7F DUP15 PUSH1 0x40 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x1A95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA6 DUP14 PUSH1 0x60 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x1993 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH2 0x1AB7 PUSH1 0x80 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP4 POP PUSH2 0x1AC5 PUSH1 0xA0 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP3 POP PUSH2 0x1AD3 PUSH1 0xC0 DUP14 ADD PUSH2 0x19DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE1 PUSH1 0xE0 DUP14 ADD PUSH2 0x19F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B18 DUP2 PUSH2 0x196E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B40 DUP2 PUSH2 0x196E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E48195B991959 PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x141C9BDA9958DD0818DBDB5C1B195D1959 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1C28 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x1875 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1C3A DUP2 DUP11 PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP SWAP3 SWAP1 SWAP5 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1B40 DUP2 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x1CAA DUP2 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CD7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1BFC JUMPI PUSH2 0x1BFC PUSH2 0x1BD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D27 JUMPI PUSH2 0x1D27 PUSH2 0x1BD3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1D6B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D77 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DAD JUMPI PUSH2 0x1DAD PUSH2 0x1D2E JUMP JUMPDEST PUSH2 0x1DC1 DUP2 PUSH2 0x1DBB DUP5 SLOAD PUSH2 0x1B47 JUMP JUMPDEST DUP5 PUSH2 0x1D44 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DF6 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1DDE JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E25 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E06 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E43 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST DUP10 DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1E96 PUSH1 0xC0 DUP4 ADD DUP11 DUP13 PUSH2 0x1E53 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1EA9 DUP2 DUP10 DUP12 PUSH2 0x1E53 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1EBE DUP2 DUP8 DUP10 PUSH2 0x1E53 JUMP JUMPDEST SWAP2 POP POP PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xFFFF DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1F20 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F06 PUSH2 0x1BD3 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1F13 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1EEA JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F37 JUMPI POP PUSH1 0x1 PUSH2 0x1BFC JUMP JUMPDEST DUP2 PUSH2 0x1F44 JUMPI POP PUSH1 0x0 PUSH2 0x1BFC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1F5A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1F64 JUMPI PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1BFC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1F75 JUMPI PUSH2 0x1F75 PUSH2 0x1BD3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1BFC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1FA3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1BFC JUMP JUMPDEST PUSH2 0x1FAD DUP4 DUP4 PUSH2 0x1EE5 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1FC1 JUMPI PUSH2 0x1FC1 PUSH2 0x1BD3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B40 DUP4 DUP4 PUSH2 0x1F28 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP10 CHAINID 0xB6 PUSH24 0x167CC5AB6A9B9E8E5C29C23D4179A651C935FB92B0FD9335 0xAD 0xC8 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"467:5686:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1163:20;;;;;;;;;;;;;;;;;;;160:25:21;;;148:2;133:18;1163:20:14;;;;;;;;1187:43;;;;;;;;;;-1:-1:-1;1187:43:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;3920:541::-;;;;;;:::i;:::-;;:::i;:::-;;3700:217;;;;;;;;;;-1:-1:-1;3700:217:14;;;;;:::i;:::-;;:::i;4464:472::-;;;;;;;;;;-1:-1:-1;4464:472:14;;;;;:::i;:::-;;:::i;4939:547::-;;;;;;;;;;-1:-1:-1;4939:547:14;;;;;:::i;:::-;;:::i;5489:404::-;;;;;;;;;;-1:-1:-1;5489:404:14;;;;;:::i;:::-;;:::i;1831:101:6:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:6;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:6;;;2452:51:21;;2440:2;2425:18;1201:85:6;2306:203:21;2787:910:14;;;;;;;;;;-1:-1:-1;2787:910:14;;;;;:::i;:::-;;:::i;1234:66::-;;;;;;;;;;-1:-1:-1;1234:66:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2081:198:6;;;;;;;;;;-1:-1:-1;2081:198:6;;;;;:::i;:::-;;:::i;1187:43:14:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1187:43:14;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1187:43:14;;;;;-1:-1:-1;;;;1187:43:14;;;;;-1:-1:-1;;;1187:43:14;;;;;;;-1:-1:-1;;;1187:43:14;;;;;-1:-1:-1;;;1187:43:14;;;;;-1:-1:-1;;;;;1187:43:14;;;;;;:::o;3920:541::-;2163:13;;;;:8;:13;;;;;;;;:20;;:13;;-1:-1:-1;;;2163:20:14;;;;2144:15;:39;;2136:65;;;;-1:-1:-1;;;2136:65:14;;;;;;;:::i;:::-;;;;;;;;;2213:13;;;;:8;:13;;;;;;;;:23;;-1:-1:-1;;;2213:23:14;;;;:32;2205:62;;;;-1:-1:-1;;;2205:62:14;;;;;;;:::i;:::-;4024:10:::1;4011:9;:23;;4003:50;;;::::0;-1:-1:-1;;;4003:50:14;;6684:2:21;4003:50:14::1;::::0;::::1;6666:21:21::0;6723:2;6703:18;;;6696:30;-1:-1:-1;;;6742:18:21;;;6735:44;6796:18;;4003:50:14::1;6482:338:21::0;4003:50:14::1;4058:22;4083:13:::0;;;:8:::1;:13;::::0;;;;;4058:38;;::::1;::::0;::::1;::::0;;;;;;;4083:13;;4058:38:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;4058:38:14;;;-1:-1:-1;;4058:38:14::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;-1:-1:-1;;;4058:38:14;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4058:38:14;::::1;;::::0;;;;-1:-1:-1;;;4058:38:14;::::1;;;::::0;;;;-1:-1:-1;;;4058:38:14;::::1;;;;;::::0;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4058:38:14;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;;;4132:35:14::1;4157:9;4132:24;:35::i;:::-;4101:66;;;;4188:5;4172:7;:12;;:21;;;;;;;:::i;:::-;::::0;;-1:-1:-1;4197:17:14::1;::::0;::::1;:30:::0;;4218:9;;4197:17;:30:::1;::::0;4218:9;;4197:30:::1;:::i;:::-;::::0;;-1:-1:-1;4232:16:14::1;::::0;;;:11:::1;:16;::::0;;;;;;;4249:10:::1;4232:28:::0;;;;;;;:41;;4264:9:::1;::::0;4232:16;:41:::1;::::0;4264:9;;4232:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;4282:37:14::1;::::0;4309:9:::1;160:25:21::0;;4297:10:14::1;::::0;4292:3;;4282:37:::1;::::0;148:2:21;133:18;4282:37:14::1;;;;;;;4344:7;:14;;;4328:30;;:7;:12;;;:30;4324:134;;4385:4;4365:17;::::0;::::1;:24:::0;4421:12:::1;::::0;::::1;::::0;4435:17:::1;::::0;::::1;::::0;4399:54:::1;::::0;4416:3;;4399:54:::1;::::0;::::1;::::0;7261:25:21;;;7317:2;7302:18;;7295:34;7249:2;7234:18;;7087:248;4399:54:14::1;;;;;;;;4324:134;3999:462;;;3920:541:::0;;:::o;3700:217::-;1094:13:6;:11;:13::i;:::-;2163::14::1;::::0;;;:8:::1;:13;::::0;;;;;;;:20:::1;::::0;:13;;-1:-1:-1;;;2163:20:14;::::1;;;2144:15;:39;;2136:65;;;;-1:-1:-1::0;;;2136:65:14::1;;;;;;;:::i;:::-;2213:13;::::0;;;:8:::1;:13;::::0;;;;;;;:23:::1;::::0;-1:-1:-1;;;2213:23:14;::::1;;;:32;2205:62;;;;-1:-1:-1::0;;;2205:62:14::1;;;;;;;:::i;:::-;3791:13:::2;::::0;;;:8:::2;:13;::::0;;;;;;;:22:::2;::::0;3816:15:::2;3791:22;::::0;;::::2;:40;3783:76;;;::::0;-1:-1:-1;;;3783:76:14;;7542:2:21;3783:76:14::2;::::0;::::2;7524:21:21::0;7581:2;7561:18;;;7554:30;7620:25;7600:18;;;7593:53;7663:18;;3783:76:14::2;7340:347:21::0;3783:76:14::2;3870:13;::::0;;;:8:::2;:13;::::0;;;;;3863:20:::2;3870:13:::0;;3863:20:::2;:::i;:::-;;;::::0;::::2;;;:::i;:::-;;;::::0;::::2;;;:::i;:::-;-1:-1:-1::0;3863:20:14::2;;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;3863:20:14;;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;3863:20:14;;::::2;::::0;;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;3892:21:::2;::::0;160:25:21;;;3892:21:14::2;::::0;148:2:21;133:18;3892:21:14::2;;;;;;;1117:1:6::1;3700:217:14::0;:::o;4464:472::-;2163:13;;;;:8;:13;;;;;;;;:20;;:13;;-1:-1:-1;;;2163:20:14;;;;2144:15;:39;;2136:65;;;;-1:-1:-1;;;2136:65:14;;;;;;;:::i;:::-;2213:13;;;;:8;:13;;;;;;;;:23;;-1:-1:-1;;;2213:23:14;;;;:32;2205:62;;;;-1:-1:-1;;;2205:62:14;;;;;;;:::i;:::-;2511:1:::1;2479:16:::0;;;:11:::1;:16;::::0;;;;;;;2496:10:::1;4578:28:::0;;;;;;;;2479:16;;2511:1;4642:36:::2;4578:28:::0;4642:24:::2;:36::i;:::-;4682:13;::::0;;;:8:::2;:13;::::0;;;;:18:::2;;:27:::0;;4611:67;;-1:-1:-1;4611:67:14;;-1:-1:-1;4611:67:14;;4682:27:::2;::::0;4611:67;;4682:27:::2;:::i;:::-;::::0;;;-1:-1:-1;;4713:13:14::2;::::0;;;:8:::2;:13;::::0;;;;:23:::2;;:36:::0;;4740:9;;4713:13;:36:::2;::::0;4740:9;;4713:36:::2;:::i;:::-;::::0;;;-1:-1:-1;;4785:1:14::2;4754:16:::0;;;:11:::2;:16;::::0;;;;;;;4771:10:::2;4754:28:::0;;;;;;;;:32;;;4807:40;4831:10;;4785:1;4807:40;4785:1;4807:40;4831:10;4771;4807:40:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4791:56;;;4859:4;4851:32;;;::::0;-1:-1:-1;;;4851:32:14;;8579:2:21;4851:32:14::2;::::0;::::2;8561:21:21::0;8618:2;8598:18;;;8591:30;-1:-1:-1;;;8637:18:21;;;8630:45;8692:18;;4851:32:14::2;8377:339:21::0;4851:32:14::2;4893:39;::::0;160:25:21;;;4909:10:14::2;::::0;4904:3;;4893:39:::2;::::0;148:2:21;133:18;4893:39:14::2;;;;;;;4553:383;;;;2271:1:::1;4464:472:::0;;:::o;4939:547::-;1966:13;;;;:8;:13;;;;;:27;;;:13;;-1:-1:-1;;;;;1966:27:14;1952:10;:41;1944:64;;;;-1:-1:-1;;;1944:64:14;;8923:2:21;1944:64:14;;;8905:21:21;8962:2;8942:18;;;8935:30;-1:-1:-1;;;8981:18:21;;;8974:40;9031:18;;1944:64:14;8721:334:21;1944:64:14;2354:13:::1;::::0;;;:8:::1;:13;::::0;;;;;;;:20:::1;::::0;:13;;-1:-1:-1;;;2354:20:14;::::1;;;2336:15;:38;::::0;:65:::1;;-1:-1:-1::0;2378:13:14::1;::::0;;;:8:::1;:13;::::0;;;;;;;:23:::1;::::0;-1:-1:-1;;;2378:23:14;::::1;;;2336:65;2324:98;;;::::0;-1:-1:-1;;;2324:98:14;;9262:2:21;2324:98:14::1;::::0;::::1;9244:21:21::0;9301:2;9281:18;;;9274:30;-1:-1:-1;;;9320:18:21;;;9313:40;9370:18;;2324:98:14::1;9060:334:21::0;2324:98:14::1;5030:22:::2;5055:13:::0;;;:8:::2;:13;::::0;;;;;5030:38;;::::2;::::0;::::2;::::0;;;;;;;5055:13;;5030:38:::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;5030:38:14;;;-1:-1:-1;;5030:38:14::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;;;;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;;;;-1:-1:-1;;;5030:38:14;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;5030:38:14;::::2;;::::0;;;;-1:-1:-1;;;5030:38:14;::::2;;;::::0;;;;-1:-1:-1;;;5030:38:14;::::2;;;;;::::0;;;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;5030:38:14;;::::2;;::::0;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;;;;;;;5117:19:::2;::::0;5154:12;;5171:14;;::::2;::::0;5228:21:::2;::::0;::::2;::::0;5096:196;;-1:-1:-1;;;5096:196:14;;5154:12;;-1:-1:-1;;;5117:19:14;;;::::2;::::0;5096:53:::2;::::0;:196:::2;::::0;5154:12;;5171:14;;5198:4:::2;::::0;910:2:::2;::::0;5228:21;910:2;;1054::::2;::::0;5096:196:::2;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5342:18;::::0;;5394:16;5323:91:::2;::::0;-1:-1:-1;;;5323:91:14;;-1:-1:-1;;;;;10689:15:21;;;5323:91:14::2;::::0;::::2;10671:34:21::0;5394:16:14;;::::2;10721:18:21::0;;;10714:43;5073:219:14;;-1:-1:-1;5298:19:14::2;::::0;5342:18;::::2;::::0;5323:49:::2;::::0;10606:18:21;;5323:91:14::2;::::0;::::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5461:21:14::2;::::0;5297:117;;-1:-1:-1;5478:3:14;;5461:21:::2;::::0;;;::::2;5026:460;;;2012:1:::1;4939:547:::0;;:::o;5489:404::-;2354:13;;;;:8;:13;;;;;;;;:20;;:13;;-1:-1:-1;;;2354:20:14;;;;2336:15;:38;;:65;;-1:-1:-1;2378:13:14;;;;:8;:13;;;;;;;;:23;;-1:-1:-1;;;2378:23:14;;;;2336:65;2324:98;;;;-1:-1:-1;;;2324:98:14;;9262:2:21;2324:98:14;;;9244:21:21;9301:2;9281:18;;;9274:30;-1:-1:-1;;;9320:18:21;;;9313:40;9370:18;;2324:98:14;9060:334:21;2324:98:14;2511:1:::1;2479:16:::0;;;:11:::1;:16;::::0;;;;;;;2496:10:::1;5604:28:::0;;;;;;;;2479:16;;5654:36:::2;5604:28:::0;5654:24:::2;:36::i;:::-;-1:-1:-1::0;5695:19:14::2;5737:13:::0;;;:8:::2;:13;::::0;;;;:18:::2;;::::0;5637:53;;-1:-1:-1;5695:19:14;5637:53;;5718:37:::2;::::0;1054:2:::2;5718:37;:::i;:::-;5717:47;;;;:::i;:::-;5792:19;::::0;::::2;5824:13:::0;;;:8:::2;:13;::::0;;;;;;:26:::2;;::::0;5771:80;;-1:-1:-1;;;5771:80:14;;-1:-1:-1;;;;;5824:26:14;;::::2;5771:80;::::0;::::2;2452:51:21::0;5695:69:14;;-1:-1:-1;5792:19:14::2;::::0;5771:52:::2;::::0;2425:18:21;;5771:80:14::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:118;::::0;-1:-1:-1;;;5771:118:14;;5865:10:::2;5771:118;::::0;::::2;11943:51:21::0;12010:18;;;12003:34;;;-1:-1:-1;;;;;5771:93:14;;;::::2;::::0;::::2;::::0;11916:18:21;;5771:118:14::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5579:314;;;2426:1:::1;5489:404:::0;;:::o;1831:101:6:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2787:910:14:-;1094:13:6;:11;:13::i;:::-;3044:15:14::1;3031:9;:28;;;;3023:59;;;::::0;-1:-1:-1;;;3023:59:14;;12532:2:21;3023:59:14::1;::::0;::::1;12514:21:21::0;12571:2;12551:18;;;12544:30;-1:-1:-1;;;12590:18:21;;;12583:48;12648:18;;3023:59:14::1;12330:342:21::0;3023:59:14::1;3104:9;3094:19;;:7;:19;;;3086:48;;;::::0;-1:-1:-1;;;3086:48:14;;12879:2:21;3086:48:14::1;::::0;::::1;12861:21:21::0;12918:2;12898:18;;;12891:30;-1:-1:-1;;;12937:18:21;;;12930:46;12993:18;;3086:48:14::1;12677:340:21::0;3086:48:14::1;3161:30;1100:6;3161:15;:30;:::i;:::-;3150:7;:41;;;;3138:89;;;::::0;-1:-1:-1;;;3138:89:14;;13224:2:21;3138:89:14::1;::::0;::::1;13206:21:21::0;13263:2;13243:18;;;13236:30;13302:27;13282:18;;;13275:55;13347:18;;3138:89:14::1;13022:349:21::0;3138:89:14::1;3232:5;:7:::0;;;:5:::1;:7;::::0;::::1;:::i;:::-;;;;;;3262:282;;;;;;;;3281:5;;3262:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;3262:282:14;;;-1:-1:-1;3262:282:14::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;3324:12;;;;;;3262:282;::::1;3324:12:::0;;;;3262:282;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;;3262:282:14;;;-1:-1:-1;3262:282:14::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;3299:7;;;;;;3262:282;::::1;3299:7:::0;;;;3262:282;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3347:1;3262:282;;;;3364:1;3262:282;;;;3380:9;3262:282;;;;;;3402:7;3262:282;;;;;;3422:7;3262:282;;;;;;3445:10;3262:282;;;;;;3471:5;3262:282;;;;;;3496:14;-1:-1:-1::0;;;;;3262:282:14::1;;;;;3537:1;-1:-1:-1::0;;;;;3262:282:14::1;;;::::0;3244:8:::1;:15;3253:5;;3244:15;;;;;;;;;;;:300;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3244:300:14::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;3244:300:14::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3244:300:14::1;;;;;-1:-1:-1::0;;;;;3244:300:14::1;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3244:300:14::1;;;;;-1:-1:-1::0;;;;;3244:300:14::1;;;;;;;;;3675:14;-1:-1:-1::0;;;;;3554:139:14::1;3636:7;3554:139;;3622:9;3554:139;;;3573:5;;3583;;3593:7;;3605:12;;3648:7;3660:10;3554:139;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2787:910:::0;;;;;;;;;;;:::o;2081:198:6:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:6;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:6;;17201:2:21;2161:73:6::1;::::0;::::1;17183:21:21::0;17240:2;17220:18;;;17213:30;17279:34;17259:18;;;17252:62;-1:-1:-1;;;17330:18:21;;;17323:36;17376:19;;2161:73:6::1;16999:402:21::0;2161:73:6::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;5896:255:14:-;5968:14;;;6052:2;6029:19;1157:1;6029:6;:19;:::i;:::-;6028:26;;;;:::i;:::-;6007:47;-1:-1:-1;6064:15:14;6106:9;6083:19;1157:1;6083:6;:19;:::i;:::-;6082:33;;;;:::i;:::-;6064:51;6136:10;;-1:-1:-1;5896:255:14;;-1:-1:-1;;;5896:255:14:o;1359:130:6:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:6;719:10:12;1422:23:6;1414:68;;;;-1:-1:-1;;;1414:68:6;;18982:2:21;1414:68:6;;;18964:21:21;;;19001:18;;;18994:30;19060:34;19040:18;;;19033:62;19112:18;;1414:68:6;18780:356:21;2433:187:6;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:6;;;-1:-1:-1;;;;;;2541:17:6;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:180:21:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:21;;196:180;-1:-1:-1;196:180:21:o;381:423::-;423:3;461:5;455:12;488:6;483:3;476:19;513:1;523:162;537:6;534:1;531:13;523:162;;;599:4;655:13;;;651:22;;645:29;627:11;;;623:20;;616:59;552:12;523:162;;;527:3;730:1;723:4;714:6;709:3;705:16;701:27;694:38;793:4;786:2;782:7;777:2;769:6;765:15;761:29;756:3;752:39;748:50;741:57;;;381:423;;;;:::o;1014:1287::-;1499:3;1488:9;1481:22;1462:4;1526:46;1567:3;1556:9;1552:19;1544:6;1526:46;:::i;:::-;1620:9;1612:6;1608:22;1603:2;1592:9;1588:18;1581:50;1654:33;1680:6;1672;1654:33;:::i;:::-;1640:47;;1735:9;1727:6;1723:22;1718:2;1707:9;1703:18;1696:50;1763:33;1789:6;1781;1763:33;:::i;:::-;1755:41;;;1832:6;1827:2;1816:9;1812:18;1805:34;1876:6;1870:3;1859:9;1855:19;1848:35;1902:10;1961:2;1953:6;1949:15;1943:3;1932:9;1928:19;1921:44;2014:2;2006:6;2002:15;1996:3;1985:9;1981:19;1974:44;2067:2;2059:6;2055:15;2049:3;2038:9;2034:19;2027:44;;2120:6;2112;2108:19;2102:3;2091:9;2087:19;2080:48;2137:44;2176:3;2165:9;2161:19;2153:6;879:13;872:21;860:34;;809:91;2137:44;-1:-1:-1;;;;;971:31:21;;2233:3;2218:19;;959:44;-1:-1:-1;;;;;971:31:21;;2290:3;2275:19;;959:44;1014:1287;;;;;;;;;;;;;;;:::o;2514:131::-;-1:-1:-1;;;;;2589:31:21;;2579:42;;2569:70;;2635:1;2632;2625:12;2650:134;2718:20;;2747:31;2718:20;2747:31;:::i;:::-;2650:134;;;:::o;2789:348::-;2841:8;2851:6;2905:3;2898:4;2890:6;2886:17;2882:27;2872:55;;2923:1;2920;2913:12;2872:55;-1:-1:-1;2946:20:21;;2989:18;2978:30;;2975:50;;;3021:1;3018;3011:12;2975:50;3058:4;3050:6;3046:17;3034:29;;3110:3;3103:4;3094:6;3086;3082:19;3078:30;3075:39;3072:59;;;3127:1;3124;3117:12;3072:59;2789:348;;;;;:::o;3142:163::-;3209:20;;3269:10;3258:22;;3248:33;;3238:61;;3295:1;3292;3285:12;3310:159;3377:20;;3437:6;3426:18;;3416:29;;3406:57;;3459:1;3456;3449:12;3474:1358;3628:6;3636;3644;3652;3660;3668;3676;3684;3692;3700;3708:7;3762:3;3750:9;3741:7;3737:23;3733:33;3730:53;;;3779:1;3776;3769:12;3730:53;3802:29;3821:9;3802:29;:::i;:::-;3792:39;;3850:18;3917:2;3911;3900:9;3896:18;3883:32;3880:40;3877:60;;;3933:1;3930;3923:12;3877:60;3972:85;4049:7;4042:2;4031:9;4027:18;4014:32;4003:9;3999:48;3972:85;:::i;:::-;4076:8;;-1:-1:-1;4103:8:21;-1:-1:-1;4154:2:21;4139:18;;4126:32;4123:40;-1:-1:-1;4120:60:21;;;4176:1;4173;4166:12;4120:60;4215:85;4292:7;4285:2;4274:9;4270:18;4257:32;4246:9;4242:48;4215:85;:::i;:::-;4319:8;;-1:-1:-1;4346:8:21;-1:-1:-1;4397:2:21;4382:18;;4369:32;4366:40;-1:-1:-1;4363:60:21;;;4419:1;4416;4409:12;4363:60;;4458:85;4535:7;4528:2;4517:9;4513:18;4500:32;4489:9;4485:48;4458:85;:::i;:::-;4562:8;;-1:-1:-1;4589:8:21;-1:-1:-1;4616:38:21;4649:3;4634:19;;4616:38;:::i;:::-;4606:48;;4673:38;4706:3;4695:9;4691:19;4673:38;:::i;:::-;4663:48;;4730:38;4763:3;4752:9;4748:19;4730:38;:::i;:::-;4720:48;;4788:38;4821:3;4810:9;4806:19;4788:38;:::i;:::-;4777:49;;3474:1358;;;;;;;;;;;;;;:::o;4837:315::-;4905:6;4913;4966:2;4954:9;4945:7;4941:23;4937:32;4934:52;;;4982:1;4979;4972:12;4934:52;5018:9;5005:23;4995:33;;5078:2;5067:9;5063:18;5050:32;5091:31;5116:5;5091:31;:::i;:::-;5141:5;5131:15;;;4837:315;;;;;:::o;5157:247::-;5216:6;5269:2;5257:9;5248:7;5244:23;5240:32;5237:52;;;5285:1;5282;5275:12;5237:52;5324:9;5311:23;5343:31;5368:5;5343:31;:::i;:::-;5393:5;5157:247;-1:-1:-1;;;5157:247:21:o;5409:380::-;5488:1;5484:12;;;;5531;;;5552:61;;5606:4;5598:6;5594:17;5584:27;;5552:61;5659:2;5651:6;5648:14;5628:18;5625:38;5622:161;;5705:10;5700:3;5696:20;5693:1;5686:31;5740:4;5737:1;5730:15;5768:4;5765:1;5758:15;5622:161;;5409:380;;;:::o;5794:337::-;5996:2;5978:21;;;6035:2;6015:18;;;6008:30;-1:-1:-1;;;6069:2:21;6054:18;;6047:43;6122:2;6107:18;;5794:337::o;6136:341::-;6338:2;6320:21;;;6377:2;6357:18;;;6350:30;-1:-1:-1;;;6411:2:21;6396:18;;6389:47;6468:2;6453:18;;6136:341::o;6825:127::-;6886:10;6881:3;6877:20;6874:1;6867:31;6917:4;6914:1;6907:15;6941:4;6938:1;6931:15;6957:125;7022:9;;;7043:10;;;7040:36;;;7056:18;;:::i;:::-;6957:125;;;;:::o;8034:128::-;8101:9;;;8122:11;;;8119:37;;;8136:18;;:::i;9399:799::-;9736:3;9725:9;9718:22;9699:4;9763:46;9804:3;9793:9;9789:19;9781:6;9763:46;:::i;:::-;9857:9;9849:6;9845:22;9840:2;9829:9;9825:18;9818:50;9885:33;9911:6;9903;9885:33;:::i;:::-;-1:-1:-1;;;;;9992:15:21;;;9987:2;9972:18;;9965:43;10039:2;10024:18;;10017:34;;;;-1:-1:-1;;10088:15:21;;;;10082:3;10067:19;;10060:44;9945:3;10120:19;;10113:35;10179:3;10164:19;10157:35;;;;9877:41;9399:799;-1:-1:-1;;9399:799:21:o;10203:251::-;10273:6;10326:2;10314:9;10305:7;10301:23;10297:32;10294:52;;;10342:1;10339;10332:12;10294:52;10374:9;10368:16;10393:31;10418:5;10393:31;:::i;10768:312::-;10847:6;10855;10908:2;10896:9;10887:7;10883:23;10879:32;10876:52;;;10924:1;10921;10914:12;10876:52;10956:9;10950:16;10975:31;11000:5;10975:31;:::i;:::-;11070:2;11055:18;;;;11049:25;11025:5;;11049:25;;-1:-1:-1;;;10768:312:21:o;11085:217::-;11125:1;11151;11141:132;;11195:10;11190:3;11186:20;11183:1;11176:31;11230:4;11227:1;11220:15;11258:4;11255:1;11248:15;11141:132;-1:-1:-1;11287:9:21;;11085:217::o;11307:168::-;11380:9;;;11411;;11428:15;;;11422:22;;11408:37;11398:71;;11449:18;;:::i;12048:277::-;12115:6;12168:2;12156:9;12147:7;12143:23;12139:32;12136:52;;;12184:1;12181;12174:12;12136:52;12216:9;12210:16;12269:5;12262:13;12255:21;12248:5;12245:32;12235:60;;12291:1;12288;12281:12;13376:135;13415:3;13436:17;;;13433:43;;13456:18;;:::i;:::-;-1:-1:-1;13503:1:21;13492:13;;13376:135::o;13516:127::-;13577:10;13572:3;13568:20;13565:1;13558:31;13608:4;13605:1;13598:15;13632:4;13629:1;13622:15;13774:545;13876:2;13871:3;13868:11;13865:448;;;13912:1;13937:5;13933:2;13926:17;13982:4;13978:2;13968:19;14052:2;14040:10;14036:19;14033:1;14029:27;14023:4;14019:38;14088:4;14076:10;14073:20;14070:47;;;-1:-1:-1;14111:4:21;14070:47;14166:2;14161:3;14157:12;14154:1;14150:20;14144:4;14140:31;14130:41;;14221:82;14239:2;14232:5;14229:13;14221:82;;;14284:17;;;14265:1;14254:13;14221:82;;;14225:3;;;13865:448;13774:545;;;:::o;14495:1352::-;14621:3;14615:10;14648:18;14640:6;14637:30;14634:56;;;14670:18;;:::i;:::-;14699:97;14789:6;14749:38;14781:4;14775:11;14749:38;:::i;:::-;14743:4;14699:97;:::i;:::-;14851:4;;14915:2;14904:14;;14932:1;14927:663;;;;15634:1;15651:6;15648:89;;;-1:-1:-1;15703:19:21;;;15697:26;15648:89;-1:-1:-1;;14452:1:21;14448:11;;;14444:24;14440:29;14430:40;14476:1;14472:11;;;14427:57;15750:81;;14897:944;;14927:663;13721:1;13714:14;;;13758:4;13745:18;;-1:-1:-1;;14963:20:21;;;15081:236;15095:7;15092:1;15089:14;15081:236;;;15184:19;;;15178:26;15163:42;;15276:27;;;;15244:1;15232:14;;;;15111:19;;15081:236;;;15085:3;15345:6;15336:7;15333:19;15330:201;;;15406:19;;;15400:26;-1:-1:-1;;15489:1:21;15485:14;;;15501:3;15481:24;15477:37;15473:42;15458:58;15443:74;;15330:201;-1:-1:-1;;;;;15577:1:21;15561:14;;;15557:22;15544:36;;-1:-1:-1;14495:1352:21:o;15852:267::-;15941:6;15936:3;15929:19;15993:6;15986:5;15979:4;15974:3;15970:14;15957:43;-1:-1:-1;16045:1:21;16020:16;;;16038:4;16016:27;;;16009:38;;;;16101:2;16080:15;;;-1:-1:-1;;16076:29:21;16067:39;;;16063:50;;15852:267::o;16124:870::-;16479:6;16468:9;16461:25;16522:3;16517:2;16506:9;16502:18;16495:31;16442:4;16549:63;16607:3;16596:9;16592:19;16584:6;16576;16549:63;:::i;:::-;16660:9;16652:6;16648:22;16643:2;16632:9;16628:18;16621:50;16694;16737:6;16729;16721;16694:50;:::i;:::-;16680:64;;16792:9;16784:6;16780:22;16775:2;16764:9;16760:18;16753:50;16820;16863:6;16855;16847;16820:50;:::i;:::-;16812:58;;;16919:10;16911:6;16907:23;16901:3;16890:9;16886:19;16879:52;16980:6;16972;16968:19;16962:3;16951:9;16947:19;16940:48;16124:870;;;;;;;;;;;;:::o;17406:422::-;17495:1;17538:5;17495:1;17552:270;17573:7;17563:8;17560:21;17552:270;;;17632:4;17628:1;17624:6;17620:17;17614:4;17611:27;17608:53;;;17641:18;;:::i;:::-;17691:7;17681:8;17677:22;17674:55;;;17711:16;;;;17674:55;17790:22;;;;17750:15;;;;17552:270;;;17556:3;17406:422;;;;;:::o;17833:806::-;17882:5;17912:8;17902:80;;-1:-1:-1;17953:1:21;17967:5;;17902:80;18001:4;17991:76;;-1:-1:-1;18038:1:21;18052:5;;17991:76;18083:4;18101:1;18096:59;;;;18169:1;18164:130;;;;18076:218;;18096:59;18126:1;18117:10;;18140:5;;;18164:130;18201:3;18191:8;18188:17;18185:43;;;18208:18;;:::i;:::-;-1:-1:-1;;18264:1:21;18250:16;;18279:5;;18076:218;;18378:2;18368:8;18365:16;18359:3;18353:4;18350:13;18346:36;18340:2;18330:8;18327:16;18322:2;18316:4;18313:12;18309:35;18306:77;18303:159;;;-1:-1:-1;18415:19:21;;;18447:5;;18303:159;18494:34;18519:8;18513:4;18494:34;:::i;:::-;18564:6;18560:1;18556:6;18552:19;18543:7;18540:32;18537:58;;;18575:18;;:::i;:::-;18613:20;;17833:806;-1:-1:-1;;;17833:806:21:o;18644:131::-;18704:5;18733:36;18760:8;18754:4;18733:36;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"1640600","executionCost":"infinite","totalCost":"infinite"},"external":{"cancelProject(uint256)":"infinite","claimProjectTokens(uint256)":"infinite","commitOnProject(uint256)":"infinite","commitments(uint256,address)":"2693","count()":"2285","createProject(address,string,string,string,uint32,uint32,uint32,uint16)":"infinite","owner()":"2345","projects(uint256)":"infinite","renounceOwnership()":"infinite","transferOwnership(address)":"infinite","validateProject(uint256)":"infinite","withdrawOnProject(uint256)":"infinite"},"internal":{"computeValueAndLiquidity(uint256)":"infinite"}},"methodIdentifiers":{"cancelProject(uint256)":"24941147","claimProjectTokens(uint256)":"60ae7c3b","commitOnProject(uint256)":"16509ee2","commitments(uint256,address)":"e90d4c06","count()":"06661abd","createProject(address,string,string,string,uint32,uint32,uint32,uint16)":"bb89bf75","owner()":"8da5cb5b","projects(uint256)":"107046bd","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","validateProject(uint256)":"57021469","withdrawOnProject(uint256)":"44a9ae8c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wethTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolFactoryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Committed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProjectCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fund\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"ProjectCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"startsAt\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"endsAt\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"target\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minInvest\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProjectValidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"claimProjectTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"commitOnProject\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"_startsAt\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endsAt\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_target\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_minInvest\",\"type\":\"uint16\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startsAt\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endsAt\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"target\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"minInvest\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"authorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"validateProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawOnProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Projects.sol\":\"Projects\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Projects.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\n\\nimport { Initializable } from '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport { Ownable } from '@openzeppelin/contracts/access/Ownable.sol';\\n\\nimport { IProjectTokenFactory } from './tokens/interfaces/IProjectTokenFactory.sol';\\nimport { ITokensPoolFactory } from './pools/interfaces/ITokensPoolFactory.sol';\\n\\ncontract Projects is Ownable {\\n\\tstruct Project {\\n\\t\\tstring name;\\n\\t\\tstring description;\\n\\t\\tstring symbol;\\n\\t\\tuint256 fund;\\n\\t\\tuint256 liquidity;\\n\\t\\tuint32 startsAt;\\n\\t\\tuint32 endsAt;\\n\\t\\tuint32 target;\\n\\t\\tuint16 minInvest;\\n\\t\\tbool completed;\\n\\t\\taddress authorAddress;\\n\\t\\taddress tokenAddress;\\n\\t}\\n\\n\\taddress internal wethTokenAddress;\\n\\n\\taddress internal tokenFactoryAddress;\\n\\taddress internal poolFactoryAddress;\\n\\n\\tuint256 private constant FSOCIETY_SUPPLY = 27;\\n\\tuint256 private constant AUTHOR_SUPPLY = 27;\\n\\tuint256 private constant LIQUIDITY_SUPPLY = 30;\\n\\tuint256 private constant INVESTORS_SUPPLY = 35;\\n\\n\\tuint256 private constant MAX_DURATION = 604800; // 1 week\\n\\n\\tuint256 private constant PRECISION = 2;\\n\\n\\n\\tuint256 public count;\\n\\n\\tmapping(uint256 => Project) public projects;\\n\\n\\tmapping(uint256 => mapping(address => uint256)) public commitments;\\n\\n\\tevent ProjectCreated(\\n\\t\\tuint256 id,\\n\\t\\tstring name,\\n\\t\\tstring symbol,\\n\\t\\tstring description,\\n\\t\\tuint32 indexed startsAt,\\n\\t\\tuint32 indexed endsAt,\\n\\t\\tuint32 target,\\n\\t\\tuint16 minInvest,\\n\\t\\taddress indexed author\\n\\t);\\n\\n\\tevent ProjectCancelled(uint256 id);\\n\\n\\tevent Committed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent Withdrawed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent Claimed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent ProjectCompleted(uint256 indexed id, uint fund, uint liquidity);\\n\\n\\tevent ProjectValidated(uint256 indexed id);\\n\\n\\tmodifier onlyAuthor(uint256 _id) {\\n\\t\\trequire(msg.sender == projects[_id].authorAddress, 'Not author');\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier crowdfundingOpened(uint256 _id) {\\n\\t\\t//require(block.timestamp >= projects[_id].startsAt, 'not started');\\n\\t\\trequire(block.timestamp <= projects[_id].endsAt, 'Already ended');\\n\\t\\trequire(projects[_id].completed == false, 'Project completed');\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier crowdfundingClosed(uint256 _id) {\\n\\t\\trequire(\\n\\t\\t\\tblock.timestamp > projects[_id].endsAt || projects[_id].completed,\\n\\t\\t\\t'not closed'\\n\\t\\t);\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier isCommited(uint256 _id) {\\n\\t\\trequire(commitments[_id][msg.sender] >= 0, 'No commitment');\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(\\n\\t\\taddress _wethTokenAddress,\\n\\t\\taddress _tokenFactoryAddress, \\n\\t\\taddress _poolFactoryAddress\\n\\t) {\\n\\t\\twethTokenAddress = _wethTokenAddress;\\n\\t\\ttokenFactoryAddress = _tokenFactoryAddress;\\n\\t\\tpoolFactoryAddress = _poolFactoryAddress;\\n\\t}\\n\\n\\tfunction createProject(\\n\\t\\taddress _authorAddress,\\n\\t\\tstring calldata _name,\\n\\t\\tstring calldata _symbol,\\n\\t\\tstring calldata _description,\\n\\t\\tuint32 _startsAt,\\n\\t\\tuint32 _endsAt,\\n\\t\\tuint32 _target,\\n\\t\\tuint16 _minInvest\\n\\t) external onlyOwner {\\n\\t\\trequire(_startsAt >= block.timestamp, 'Invalid start time');\\n\\t\\trequire(_endsAt > _startsAt, 'Invalid end time');\\n\\t\\trequire(\\n\\t\\t\\t_endsAt <= block.timestamp + MAX_DURATION,\\n\\t\\t\\t'Maximum duration exceeded'\\n\\t\\t);\\n\\n\\t\\tcount++;\\n\\n\\t\\tprojects[count] = Project({\\n\\t\\t\\tname: _name,\\n\\t\\t\\tsymbol: _symbol,\\n\\t\\t\\tdescription: _description,\\n\\t\\t\\tfund: 0,\\n\\t\\t\\tliquidity: 0,\\n\\t\\t\\tstartsAt: _startsAt,\\n\\t\\t\\tendsAt: _endsAt,\\n\\t\\t\\ttarget: _target,\\n\\t\\t\\tminInvest: _minInvest,\\n\\t\\t\\tcompleted: false,\\n\\t\\t\\tauthorAddress: _authorAddress,\\n\\t\\t\\ttokenAddress: address(0)\\n\\t\\t});\\n\\n\\t\\temit ProjectCreated(\\n\\t\\t\\tcount,\\n\\t\\t\\t_name,\\n\\t\\t\\t_symbol,\\n\\t\\t\\t_description,\\n\\t\\t\\t_startsAt,\\n\\t\\t\\t_endsAt,\\n\\t\\t\\t_target,\\n\\t\\t\\t_minInvest,\\n\\t\\t\\t_authorAddress\\n\\t\\t);\\n\\t}\\n\\n\\tfunction cancelProject(uint256 _id) external onlyOwner crowdfundingOpened(_id) {\\n\\t\\trequire(projects[_id].startsAt > block.timestamp, 'Project already started');\\n\\t\\tdelete projects[_id];\\n\\t\\temit ProjectCancelled(_id);\\n\\t}\\n\\n\\tfunction commitOnProject(uint256 _id) external payable crowdfundingOpened(_id) {\\n\\t\\trequire(msg.value >= 0.01 ether, 'min 0.01 ether');\\n\\n\\t\\tProject memory project = projects[_id];\\n\\n\\t\\t(uint value, uint liquidity) = computeValueAndLiquidity(msg.value);\\n\\n\\t\\tproject.fund += value;\\n\\t\\tproject.liquidity += liquidity;\\n\\n\\t\\tcommitments[_id][msg.sender] += msg.value;\\n\\t\\temit Committed(_id, msg.sender, msg.value);\\n\\n\\t\\tif (project.fund >= project.target) {\\n\\t\\t\\tproject.completed = true;\\n\\t\\t\\temit ProjectCompleted(_id, project.fund, project.liquidity);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction withdrawOnProject(uint256 _id) external crowdfundingOpened(_id) isCommited(_id) {\\n\\t\\tuint256 commitment = commitments[_id][msg.sender];\\n\\n\\t\\t(uint value, uint liquidity) = computeValueAndLiquidity(commitment);\\n\\t\\tprojects[_id].fund -= value;\\n\\t\\tprojects[_id].liquidity -= liquidity;\\n\\n\\t\\tcommitments[_id][msg.sender] = 0;\\n\\n\\t\\t(bool sent, ) = msg.sender.call{ value: commitment }('');\\n\\t\\trequire(sent, 'withdraw failed');\\n\\n\\t\\temit Withdrawed(_id, msg.sender, commitment);\\n\\t}\\n\\n\\tfunction validateProject(uint256 _id) external onlyAuthor(_id) crowdfundingClosed(_id) {\\n\\t\\tProject memory project = projects[_id];\\n\\n\\t\\taddress tokenAddress = IProjectTokenFactory(tokenFactoryAddress).createToken(\\n\\t\\t\\tproject.name,\\n\\t\\t\\tproject.symbol,\\n\\t\\t\\taddress(this),\\n\\t\\t\\tFSOCIETY_SUPPLY,\\n\\t\\t\\tproject.authorAddress,\\n\\t\\t\\tAUTHOR_SUPPLY,\\n\\t\\t\\tINVESTORS_SUPPLY\\n\\t\\t);\\n\\n\\t\\t(address poolAddress, ) = ITokensPoolFactory(poolFactoryAddress).createPool(\\n\\t\\t\\ttokenAddress,\\n\\t\\t\\twethTokenAddress\\n\\t\\t);\\n\\n\\t\\t// TODO: add pool liquidity here \\n\\n\\t\\temit ProjectValidated(_id);\\n\\t}\\n\\n\\tfunction claimProjectTokens(uint256 _id) external crowdfundingClosed(_id) isCommited(_id) {\\n\\t\\tuint256 commitment = commitments[_id][msg.sender];\\n\\n\\t\\t(uint value, ) = computeValueAndLiquidity(commitment);\\n\\n\\t\\tuint256 tokenAmount = (INVESTORS_SUPPLY / projects[_id].fund) * value;\\n\\t\\t\\n\\t\\tIProjectTokenFactory(tokenFactoryAddress)\\n\\t\\t\\t.tokens(projects[_id].tokenAddress)\\n\\t\\t\\t.transfer(msg.sender, tokenAmount);\\n\\t}\\n\\n\\tfunction computeValueAndLiquidity(uint256 _value) private pure returns (uint256 amount, uint256 liquidity) {\\n\\t\\tuint256 _liquidity = (_value ** PRECISION) / 20; // 5%\\n\\t\\tuint256 _amount = (_value ** PRECISION) - liquidity;\\n\\t\\treturn (_amount, _liquidity);\\n\\t}\\n}\\n\",\"keccak256\":\"0x3a3a5924bc7d4134dfcad14a815f9adc02ed6d83f63e20ab4c66d137af38c2f7\",\"license\":\"MIT\"},\"contracts/pools/interfaces/ITokensPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface ITokensPool {\\n\\n}\\n\",\"keccak256\":\"0x7ac72d3ff0503a826a4212e471c74c4dae24afd341e8e3a838cea1b775a5f376\",\"license\":\"MIT\"},\"contracts/pools/interfaces/ITokensPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { ITokensPool } from './ITokensPool.sol';\\n\\ninterface ITokensPoolFactory {\\n    \\n    function createPool(\\n        address _token1,\\n        address _token2\\n    ) external returns (address poolAddress, bytes32 poolHash);\\n\\n    function getPoolByTokensPair(address _token1, address _token2) external view returns (ITokensPool);\\n\\n    function getPoolByHash(bytes32 _hash) external view returns (ITokensPool);\\n\\n    function getTokenPools(address _token) external view returns (address[] memory);\\n\\n}\\n\",\"keccak256\":\"0x2f4d87912043eaeb26ed509c678c2d69e46b63b8de92e553f46e8dd826fcd846\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IProjectTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { IERC20MetadataUpgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol';\\n\\ninterface IProjectTokenFactory {\\n    \\n    function tokens(address tokenAddress) external returns (IERC20MetadataUpgradeable);\\n\\n    function createToken(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsocietyAddress,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        uint256 _otherSupply\\n    ) external returns (address);\\n    \\n}\\n\",\"keccak256\":\"0xa878d9f6ec956830d7918773396406c2804119b6b924fa15ecee86cab720cf71\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1217,"contract":"contracts/Projects.sol:Projects","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2471,"contract":"contracts/Projects.sol:Projects","label":"wethTokenAddress","offset":0,"slot":"1","type":"t_address"},{"astId":2473,"contract":"contracts/Projects.sol:Projects","label":"tokenFactoryAddress","offset":0,"slot":"2","type":"t_address"},{"astId":2475,"contract":"contracts/Projects.sol:Projects","label":"poolFactoryAddress","offset":0,"slot":"3","type":"t_address"},{"astId":2495,"contract":"contracts/Projects.sol:Projects","label":"count","offset":0,"slot":"4","type":"t_uint256"},{"astId":2500,"contract":"contracts/Projects.sol:Projects","label":"projects","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(Project)2469_storage)"},{"astId":2506,"contract":"contracts/Projects.sol:Projects","label":"commitments","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_struct(Project)2469_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Projects.Project)","numberOfBytes":"32","value":"t_struct(Project)2469_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Project)2469_storage":{"encoding":"inplace","label":"struct Projects.Project","members":[{"astId":2446,"contract":"contracts/Projects.sol:Projects","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2448,"contract":"contracts/Projects.sol:Projects","label":"description","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2450,"contract":"contracts/Projects.sol:Projects","label":"symbol","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2452,"contract":"contracts/Projects.sol:Projects","label":"fund","offset":0,"slot":"3","type":"t_uint256"},{"astId":2454,"contract":"contracts/Projects.sol:Projects","label":"liquidity","offset":0,"slot":"4","type":"t_uint256"},{"astId":2456,"contract":"contracts/Projects.sol:Projects","label":"startsAt","offset":0,"slot":"5","type":"t_uint32"},{"astId":2458,"contract":"contracts/Projects.sol:Projects","label":"endsAt","offset":4,"slot":"5","type":"t_uint32"},{"astId":2460,"contract":"contracts/Projects.sol:Projects","label":"target","offset":8,"slot":"5","type":"t_uint32"},{"astId":2462,"contract":"contracts/Projects.sol:Projects","label":"minInvest","offset":12,"slot":"5","type":"t_uint16"},{"astId":2464,"contract":"contracts/Projects.sol:Projects","label":"completed","offset":14,"slot":"5","type":"t_bool"},{"astId":2466,"contract":"contracts/Projects.sol:Projects","label":"authorAddress","offset":0,"slot":"6","type":"t_address"},{"astId":2468,"contract":"contracts/Projects.sol:Projects","label":"tokenAddress","offset":0,"slot":"7","type":"t_address"}],"numberOfBytes":"256"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/pools/interfaces/ITokensPool.sol":{"ITokensPool":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pools/interfaces/ITokensPool.sol\":\"ITokensPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/pools/interfaces/ITokensPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface ITokensPool {\\n\\n}\\n\",\"keccak256\":\"0x7ac72d3ff0503a826a4212e471c74c4dae24afd341e8e3a838cea1b775a5f376\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/pools/interfaces/ITokensPoolFactory.sol":{"ITokensPoolFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_token1","type":"address"},{"internalType":"address","name":"_token2","type":"address"}],"name":"createPool","outputs":[{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"bytes32","name":"poolHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_hash","type":"bytes32"}],"name":"getPoolByHash","outputs":[{"internalType":"contract ITokensPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token1","type":"address"},{"internalType":"address","name":"_token2","type":"address"}],"name":"getPoolByTokensPair","outputs":[{"internalType":"contract ITokensPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"name":"getTokenPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createPool(address,address)":"e3433615","getPoolByHash(bytes32)":"9c272001","getPoolByTokensPair(address,address)":"f6b81850","getTokenPools(address)":"d75a2d72"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token2\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"poolHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"getPoolByHash\",\"outputs\":[{\"internalType\":\"contract ITokensPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token2\",\"type\":\"address\"}],\"name\":\"getPoolByTokensPair\",\"outputs\":[{\"internalType\":\"contract ITokensPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pools/interfaces/ITokensPoolFactory.sol\":\"ITokensPoolFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/pools/interfaces/ITokensPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface ITokensPool {\\n\\n}\\n\",\"keccak256\":\"0x7ac72d3ff0503a826a4212e471c74c4dae24afd341e8e3a838cea1b775a5f376\",\"license\":\"MIT\"},\"contracts/pools/interfaces/ITokensPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { ITokensPool } from './ITokensPool.sol';\\n\\ninterface ITokensPoolFactory {\\n    \\n    function createPool(\\n        address _token1,\\n        address _token2\\n    ) external returns (address poolAddress, bytes32 poolHash);\\n\\n    function getPoolByTokensPair(address _token1, address _token2) external view returns (ITokensPool);\\n\\n    function getPoolByHash(bytes32 _hash) external view returns (ITokensPool);\\n\\n    function getTokenPools(address _token) external view returns (address[] memory);\\n\\n}\\n\",\"keccak256\":\"0x2f4d87912043eaeb26ed509c678c2d69e46b63b8de92e553f46e8dd826fcd846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/test/WETHToken.sol":{"WETHToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1447":{"entryPoint":null,"id":1447,"parameterSlots":2,"returnSlots":0},"@_3150":{"entryPoint":null,"id":3150,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1987":{"entryPoint":null,"id":1987,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1976":{"entryPoint":385,"id":1976,"parameterSlots":3,"returnSlots":0},"@_mint_1805":{"entryPoint":153,"id":1805,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":758,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":472,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":554,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":412,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":390,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3501:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:21"},"nodeType":"YulFunctionCall","src":"66:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:21"},"nodeType":"YulFunctionCall","src":"56:31:21"},"nodeType":"YulExpressionStatement","src":"56:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:21"},"nodeType":"YulFunctionCall","src":"96:15:21"},"nodeType":"YulExpressionStatement","src":"96:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:21"},"nodeType":"YulFunctionCall","src":"120:15:21"},"nodeType":"YulExpressionStatement","src":"120:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:21"},{"body":{"nodeType":"YulBlock","src":"201:325:21","statements":[{"nodeType":"YulAssignment","src":"211:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:21"},"nodeType":"YulFunctionCall","src":"221:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:21"},"nodeType":"YulFunctionCall","src":"268:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:21","statements":[{"nodeType":"YulAssignment","src":"321:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:21"},"nodeType":"YulFunctionCall","src":"331:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:21"},"nodeType":"YulFunctionCall","src":"292:26:21"},"nodeType":"YulIf","src":"289:61:21"},{"body":{"nodeType":"YulBlock","src":"409:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:21"},"nodeType":"YulFunctionCall","src":"433:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:21"},"nodeType":"YulFunctionCall","src":"423:31:21"},"nodeType":"YulExpressionStatement","src":"423:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:21"},"nodeType":"YulFunctionCall","src":"467:15:21"},"nodeType":"YulExpressionStatement","src":"467:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:21"},"nodeType":"YulFunctionCall","src":"495:15:21"},"nodeType":"YulExpressionStatement","src":"495:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:21"},"nodeType":"YulFunctionCall","src":"385:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:21"},"nodeType":"YulFunctionCall","src":"362:38:21"},"nodeType":"YulIf","src":"359:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:21","type":""}],"src":"146:380:21"},{"body":{"nodeType":"YulBlock","src":"587:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:21"},"nodeType":"YulFunctionCall","src":"597:14:21"},"nodeType":"YulExpressionStatement","src":"597:14:21"},{"nodeType":"YulAssignment","src":"620:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:21"},"nodeType":"YulFunctionCall","src":"628:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:21"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:21","type":""}],"src":"531:121:21"},{"body":{"nodeType":"YulBlock","src":"738:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:21"},"nodeType":"YulFunctionCall","src":"809:17:21"},"nodeType":"YulExpressionStatement","src":"809:17:21"},{"nodeType":"YulVariableDeclaration","src":"839:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:21"},"nodeType":"YulFunctionCall","src":"851:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:21"},"nodeType":"YulFunctionCall","src":"919:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:21"},"nodeType":"YulFunctionCall","src":"912:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:21"},"nodeType":"YulFunctionCall","src":"902:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:21","statements":[{"nodeType":"YulAssignment","src":"979:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:21"},"nodeType":"YulFunctionCall","src":"956:20:21"},"nodeType":"YulIf","src":"953:47:21"},{"nodeType":"YulVariableDeclaration","src":"1013:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:21"},"nodeType":"YulFunctionCall","src":"1040:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:21"},"nodeType":"YulFunctionCall","src":"1033:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:21"},"nodeType":"YulFunctionCall","src":"1023:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:21"},"nodeType":"YulFunctionCall","src":"1167:17:21"},"nodeType":"YulExpressionStatement","src":"1167:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:21"},"nodeType":"YulFunctionCall","src":"1112:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:21","statements":[{"nodeType":"YulAssignment","src":"1128:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:21"},"nodeType":"YulFunctionCall","src":"1137:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:21","statements":[]},"src":"1104:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:21"},"nodeType":"YulFunctionCall","src":"751:11:21"},"nodeType":"YulIf","src":"748:448:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:21","type":""}],"src":"657:545:21"},{"body":{"nodeType":"YulBlock","src":"1292:81:21","statements":[{"nodeType":"YulAssignment","src":"1302:65:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:21"},"nodeType":"YulFunctionCall","src":"1331:11:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:21"},"nodeType":"YulFunctionCall","src":"1344:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:21"},"nodeType":"YulFunctionCall","src":"1327:24:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:21"},"nodeType":"YulFunctionCall","src":"1323:29:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:21"},"nodeType":"YulFunctionCall","src":"1313:40:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:21"},"nodeType":"YulFunctionCall","src":"1355:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:21"},"nodeType":"YulFunctionCall","src":"1310:57:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:21","type":""}],"src":"1207:166:21"},{"body":{"nodeType":"YulBlock","src":"1474:1256:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:21"},"nodeType":"YulFunctionCall","src":"1498:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:21"},"nodeType":"YulFunctionCall","src":"1553:18:21"},"nodeType":"YulExpressionStatement","src":"1553:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:21","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:21"},"nodeType":"YulFunctionCall","src":"1535:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:21"},"nodeType":"YulFunctionCall","src":"1531:18:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:21"},"nodeType":"YulFunctionCall","src":"1520:30:21"},"nodeType":"YulIf","src":"1517:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:21"},"nodeType":"YulFunctionCall","src":"1658:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:21"},"nodeType":"YulFunctionCall","src":"1632:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:21"},"nodeType":"YulFunctionCall","src":"1582:97:21"},"nodeType":"YulExpressionStatement","src":"1582:97:21"},{"nodeType":"YulVariableDeclaration","src":"1688:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:21","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:21"},"nodeType":"YulFunctionCall","src":"1858:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:21"},"nodeType":"YulFunctionCall","src":"1846:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:21"},"nodeType":"YulFunctionCall","src":"1893:35:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:21"},"nodeType":"YulFunctionCall","src":"2067:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:21"},"nodeType":"YulFunctionCall","src":"2061:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:21"},"nodeType":"YulFunctionCall","src":"2046:42:21"},"nodeType":"YulExpressionStatement","src":"2046:42:21"},{"nodeType":"YulAssignment","src":"2105:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:21"},"nodeType":"YulFunctionCall","src":"2115:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:21"}]},{"nodeType":"YulAssignment","src":"2146:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:21"},"nodeType":"YulFunctionCall","src":"2159:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:21"},"nodeType":"YulFunctionCall","src":"1972:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:21","statements":[{"nodeType":"YulAssignment","src":"1989:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:21"},"nodeType":"YulFunctionCall","src":"1994:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:21","statements":[]},"src":"1964:236:21"},{"body":{"nodeType":"YulBlock","src":"2248:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:21"},"nodeType":"YulFunctionCall","src":"2289:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:21"},"nodeType":"YulFunctionCall","src":"2283:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:21"},"nodeType":"YulFunctionCall","src":"2368:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:21"},"nodeType":"YulFunctionCall","src":"2364:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:21"},"nodeType":"YulFunctionCall","src":"2390:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:21"},"nodeType":"YulFunctionCall","src":"2360:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:21"},"nodeType":"YulFunctionCall","src":"2356:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:21"},"nodeType":"YulFunctionCall","src":"2341:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:21"},"nodeType":"YulFunctionCall","src":"2326:74:21"},"nodeType":"YulExpressionStatement","src":"2326:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:21"},"nodeType":"YulFunctionCall","src":"2216:19:21"},"nodeType":"YulIf","src":"2213:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:21"},"nodeType":"YulFunctionCall","src":"2444:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:21"},"nodeType":"YulFunctionCall","src":"2440:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:21"},"nodeType":"YulFunctionCall","src":"2427:36:21"},"nodeType":"YulExpressionStatement","src":"2427:36:21"}]},"nodeType":"YulCase","src":"1810:663:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:21","statements":[{"nodeType":"YulAssignment","src":"2571:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:21"},"nodeType":"YulFunctionCall","src":"2586:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:21"},"nodeType":"YulFunctionCall","src":"2580:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:21"},"nodeType":"YulIf","src":"2531:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:21"},"nodeType":"YulFunctionCall","src":"2646:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:21"},"nodeType":"YulFunctionCall","src":"2633:81:21"},"nodeType":"YulExpressionStatement","src":"2633:81:21"}]},"nodeType":"YulCase","src":"2482:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:21"},"nodeType":"YulFunctionCall","src":"1787:14:21"},"nodeType":"YulSwitch","src":"1780:944:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:21","type":""}],"src":"1378:1352:21"},{"body":{"nodeType":"YulBlock","src":"2909:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2926:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2937:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2919:6:21"},"nodeType":"YulFunctionCall","src":"2919:21:21"},"nodeType":"YulExpressionStatement","src":"2919:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2960:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2971:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2956:3:21"},"nodeType":"YulFunctionCall","src":"2956:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"2976:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2949:6:21"},"nodeType":"YulFunctionCall","src":"2949:30:21"},"nodeType":"YulExpressionStatement","src":"2949:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2999:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3010:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2995:3:21"},"nodeType":"YulFunctionCall","src":"2995:18:21"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"3015:33:21","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2988:6:21"},"nodeType":"YulFunctionCall","src":"2988:61:21"},"nodeType":"YulExpressionStatement","src":"2988:61:21"},{"nodeType":"YulAssignment","src":"3058:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3070:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3081:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3066:3:21"},"nodeType":"YulFunctionCall","src":"3066:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3058:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2886:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2900:4:21","type":""}],"src":"2735:355:21"},{"body":{"nodeType":"YulBlock","src":"3143:174:21","statements":[{"nodeType":"YulAssignment","src":"3153:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3164:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"3167:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3160:3:21"},"nodeType":"YulFunctionCall","src":"3160:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3153:3:21"}]},{"body":{"nodeType":"YulBlock","src":"3200:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3221:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3228:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3233:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3224:3:21"},"nodeType":"YulFunctionCall","src":"3224:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3214:6:21"},"nodeType":"YulFunctionCall","src":"3214:31:21"},"nodeType":"YulExpressionStatement","src":"3214:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3265:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3268:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3258:6:21"},"nodeType":"YulFunctionCall","src":"3258:15:21"},"nodeType":"YulExpressionStatement","src":"3258:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3293:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3296:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3286:6:21"},"nodeType":"YulFunctionCall","src":"3286:15:21"},"nodeType":"YulExpressionStatement","src":"3286:15:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3184:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"3187:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3181:2:21"},"nodeType":"YulFunctionCall","src":"3181:10:21"},"nodeType":"YulIf","src":"3178:133:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3126:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"3129:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3135:3:21","type":""}],"src":"3095:222:21"},{"body":{"nodeType":"YulBlock","src":"3423:76:21","statements":[{"nodeType":"YulAssignment","src":"3433:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3445:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3456:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3441:3:21"},"nodeType":"YulFunctionCall","src":"3441:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3433:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3475:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"3486:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3468:6:21"},"nodeType":"YulFunctionCall","src":"3468:25:21"},"nodeType":"YulExpressionStatement","src":"3468:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3392:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3403:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3414:4:21","type":""}],"src":"3322:177:21"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600d81526020016c2bb930b83832b21022aa2422a960991b815250604051806040016040528060048152602001630ae8aa8960e31b81525081600390816200006691906200022a565b5060046200007582826200022a565b5050506200009333683635c9adc5dea000006200009960201b60201c565b6200031e565b6001600160a01b038216620000f45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001089190620002f6565b90915550506001600160a01b0382166000908152602081905260408120805483929062000137908490620002f6565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001b157607f821691505b602082108103620001d257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018157600081815260208120601f850160051c81016020861015620002015750805b601f850160051c820191505b8181101562000222578281556001016200020d565b505050505050565b81516001600160401b0381111562000246576200024662000186565b6200025e816200025784546200019c565b84620001d8565b602080601f8311600181146200029657600084156200027d5750858301515b600019600386901b1c1916600185901b17855562000222565b600085815260208120601f198616915b82811015620002c757888601518255948401946001909101908401620002a6565b5085821015620002e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200031857634e487b7160e01b600052601160045260246000fd5b92915050565b61087c806200032e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c6565b60405180910390f35b6100df6100da366004610730565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075a565b61024c565b604051601281526020016100c3565b6100df610131366004610730565b610270565b6100f3610144366004610796565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610730565b6102a1565b6100df610188366004610730565b610321565b6100f361019b3660046107b8565b61032f565b6060600380546101af906107eb565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107eb565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d9190610825565b61035a565b6060600480546101af906107eb565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066d908490610825565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b991815260200190565b60405180910390a36104f2565b600060208083528351808285015260005b818110156106f3578581018301518582016040015282016106d7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072b57600080fd5b919050565b6000806040838503121561074357600080fd5b61074c83610714565b946020939093013593505050565b60008060006060848603121561076f57600080fd5b61077884610714565b925061078660208501610714565b9150604084013590509250925092565b6000602082840312156107a857600080fd5b6107b182610714565b9392505050565b600080604083850312156107cb57600080fd5b6107d483610714565b91506107e260208401610714565b90509250929050565b600181811c908216806107ff57607f821691505b60208210810361081f57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220648507c9dcf81594420dcf3d05d25cfe1b59f02b5259834e4e37c21e0696fe6364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x2BB930B83832B21022AA2422A9 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xAE8AA89 PUSH1 0xE3 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x66 SWAP2 SWAP1 PUSH3 0x22A JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x75 DUP3 DUP3 PUSH3 0x22A JUMP JUMPDEST POP POP POP PUSH3 0x93 CALLER PUSH9 0x3635C9ADC5DEA00000 PUSH3 0x99 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x31E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x108 SWAP2 SWAP1 PUSH3 0x2F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x137 SWAP1 DUP5 SWAP1 PUSH3 0x2F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1B1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x181 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x201 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x222 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x20D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x246 JUMPI PUSH3 0x246 PUSH3 0x186 JUMP JUMPDEST PUSH3 0x25E DUP2 PUSH3 0x257 DUP5 SLOAD PUSH3 0x19C JUMP JUMPDEST DUP5 PUSH3 0x1D8 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x296 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x27D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x222 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2C7 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2A6 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2E6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x318 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x87C DUP1 PUSH3 0x32E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66D SWAP1 DUP5 SWAP1 PUSH2 0x825 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74C DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x778 DUP5 PUSH2 0x714 JUMP JUMPDEST SWAP3 POP PUSH2 0x786 PUSH1 0x20 DUP6 ADD PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D4 DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E2 PUSH1 0x20 DUP5 ADD PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x81F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x8507C9DCF8 ISZERO SWAP5 TIMESTAMP 0xD 0xCF RETURNDATASIZE SDIV 0xD2 0x5C INVALID SHL MSIZE CREATE 0x2B MSTORE MSIZE DUP4 0x4E 0x4E CALLDATACOPY 0xC2 0x1E MOD SWAP7 INVALID PUSH4 0x64736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"114:127:17:-:0;;;148:91;;;;;;;;;;1978:113:8;;;;;;;;;;;;;-1:-1:-1;;;1978:113:8;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:8;;;2052:5;2044;:13;;;;;;:::i;:::-;-1:-1:-1;2067:7:8;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;203:29:17::1;209:10;221;203:5;;;:29;;:::i;:::-;114:127:::0;;8402:389:8;-1:-1:-1;;;;;8485:21:8;;8477:65;;;;-1:-1:-1;;;8477:65:8;;2937:2:21;8477:65:8;;;2919:21:21;2976:2;2956:18;;;2949:30;3015:33;2995:18;;;2988:61;3066:18;;8477:65:8;;;;;;;;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:8;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:8;;3468:25:21;;;-1:-1:-1;;;;;8688:37:8;;;8705:1;;8688:37;;3456:2:21;3441:18;8688:37:8;;;;;;;8402:389;;:::o;11786:121::-;;;;:::o;14:127:21:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:21;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:21;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:21;;;2580:26;2531:89;-1:-1:-1;;1335:1:21;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:21;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:21;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:21;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:21:o;3095:222::-;3160:9;;;3181:10;;;3178:133;;;3233:10;3228:3;3224:20;3221:1;3214:31;3268:4;3265:1;3258:15;3296:4;3293:1;3286:15;3178:133;3095:222;;;;:::o;3322:177::-;114:127:17;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1987":{"entryPoint":null,"id":1987,"parameterSlots":3,"returnSlots":0},"@_approve_1922":{"entryPoint":858,"id":1922,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1976":{"entryPoint":null,"id":1976,"parameterSlots":3,"returnSlots":0},"@_msgSender_2398":{"entryPoint":null,"id":2398,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1965":{"entryPoint":1150,"id":1965,"parameterSlots":3,"returnSlots":0},"@_transfer_1749":{"entryPoint":1272,"id":1749,"parameterSlots":3,"returnSlots":0},"@allowance_1544":{"entryPoint":815,"id":1544,"parameterSlots":2,"returnSlots":1},"@approve_1569":{"entryPoint":562,"id":1569,"parameterSlots":2,"returnSlots":1},"@balanceOf_1501":{"entryPoint":null,"id":1501,"parameterSlots":1,"returnSlots":1},"@decimals_1477":{"entryPoint":null,"id":1477,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_1672":{"entryPoint":673,"id":1672,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_1631":{"entryPoint":624,"id":1631,"parameterSlots":2,"returnSlots":1},"@name_1457":{"entryPoint":416,"id":1457,"parameterSlots":0,"returnSlots":1},"@symbol_1467":{"entryPoint":658,"id":1467,"parameterSlots":0,"returnSlots":1},"@totalSupply_1487":{"entryPoint":null,"id":1487,"parameterSlots":0,"returnSlots":1},"@transferFrom_1602":{"entryPoint":588,"id":1602,"parameterSlots":3,"returnSlots":1},"@transfer_1526":{"entryPoint":801,"id":1526,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1812,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1976,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1882,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1840,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2085,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2027,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:21","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:21"},"nodeType":"YulFunctionCall","src":"166:21:21"},"nodeType":"YulExpressionStatement","src":"166:21:21"},{"nodeType":"YulVariableDeclaration","src":"196:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:21"},"nodeType":"YulFunctionCall","src":"210:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:21"},"nodeType":"YulFunctionCall","src":"239:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:21"},"nodeType":"YulFunctionCall","src":"232:34:21"},"nodeType":"YulExpressionStatement","src":"232:34:21"},{"nodeType":"YulVariableDeclaration","src":"275:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:21"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:21"},"nodeType":"YulFunctionCall","src":"369:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:21"},"nodeType":"YulFunctionCall","src":"365:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:21"},"nodeType":"YulFunctionCall","src":"403:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:21"},"nodeType":"YulFunctionCall","src":"399:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:21"},"nodeType":"YulFunctionCall","src":"393:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:21"},"nodeType":"YulFunctionCall","src":"358:66:21"},"nodeType":"YulExpressionStatement","src":"358:66:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:21"},"nodeType":"YulFunctionCall","src":"302:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:21","statements":[{"nodeType":"YulAssignment","src":"318:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:21"},"nodeType":"YulFunctionCall","src":"323:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:21","statements":[]},"src":"294:140:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:21"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:21"},"nodeType":"YulFunctionCall","src":"454:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:21"},"nodeType":"YulFunctionCall","src":"450:31:21"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:21"},"nodeType":"YulFunctionCall","src":"443:42:21"},"nodeType":"YulExpressionStatement","src":"443:42:21"},{"nodeType":"YulAssignment","src":"494:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:21"},"nodeType":"YulFunctionCall","src":"525:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:21"},"nodeType":"YulFunctionCall","src":"542:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:21"},"nodeType":"YulFunctionCall","src":"521:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:21"},"nodeType":"YulFunctionCall","src":"506:45:21"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:21"},"nodeType":"YulFunctionCall","src":"502:54:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:21","type":""}],"src":"14:548:21"},{"body":{"nodeType":"YulBlock","src":"616:124:21","statements":[{"nodeType":"YulAssignment","src":"626:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:21"},"nodeType":"YulFunctionCall","src":"635:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:21"}]},{"body":{"nodeType":"YulBlock","src":"718:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:21"},"nodeType":"YulFunctionCall","src":"720:12:21"},"nodeType":"YulExpressionStatement","src":"720:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:21"},"nodeType":"YulFunctionCall","src":"699:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:21"},"nodeType":"YulFunctionCall","src":"695:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:21"},"nodeType":"YulFunctionCall","src":"684:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:21"},"nodeType":"YulFunctionCall","src":"674:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:21"},"nodeType":"YulFunctionCall","src":"667:50:21"},"nodeType":"YulIf","src":"664:70:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:21","type":""}],"src":"567:173:21"},{"body":{"nodeType":"YulBlock","src":"832:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:21"},"nodeType":"YulFunctionCall","src":"880:12:21"},"nodeType":"YulExpressionStatement","src":"880:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:21"},"nodeType":"YulFunctionCall","src":"849:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:21"},"nodeType":"YulFunctionCall","src":"845:32:21"},"nodeType":"YulIf","src":"842:52:21"},{"nodeType":"YulAssignment","src":"903:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:21"},"nodeType":"YulFunctionCall","src":"913:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:21"}]},{"nodeType":"YulAssignment","src":"951:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:21"},"nodeType":"YulFunctionCall","src":"974:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:21"},"nodeType":"YulFunctionCall","src":"961:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:21","type":""}],"src":"745:254:21"},{"body":{"nodeType":"YulBlock","src":"1099:92:21","statements":[{"nodeType":"YulAssignment","src":"1109:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:21"},"nodeType":"YulFunctionCall","src":"1117:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:21"},"nodeType":"YulFunctionCall","src":"1169:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:21"},"nodeType":"YulFunctionCall","src":"1162:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:21"},"nodeType":"YulFunctionCall","src":"1144:41:21"},"nodeType":"YulExpressionStatement","src":"1144:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:21","type":""}],"src":"1004:187:21"},{"body":{"nodeType":"YulBlock","src":"1297:76:21","statements":[{"nodeType":"YulAssignment","src":"1307:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:21"},"nodeType":"YulFunctionCall","src":"1315:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:21"},"nodeType":"YulFunctionCall","src":"1342:25:21"},"nodeType":"YulExpressionStatement","src":"1342:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:21","type":""}],"src":"1196:177:21"},{"body":{"nodeType":"YulBlock","src":"1482:224:21","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:21"},"nodeType":"YulFunctionCall","src":"1530:12:21"},"nodeType":"YulExpressionStatement","src":"1530:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:21"},"nodeType":"YulFunctionCall","src":"1499:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:21"},"nodeType":"YulFunctionCall","src":"1495:32:21"},"nodeType":"YulIf","src":"1492:52:21"},{"nodeType":"YulAssignment","src":"1553:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:21"},"nodeType":"YulFunctionCall","src":"1563:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:21"}]},{"nodeType":"YulAssignment","src":"1601:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:21"},"nodeType":"YulFunctionCall","src":"1630:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:21"},"nodeType":"YulFunctionCall","src":"1611:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:21"}]},{"nodeType":"YulAssignment","src":"1658:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:21"},"nodeType":"YulFunctionCall","src":"1681:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:21"},"nodeType":"YulFunctionCall","src":"1668:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:21","type":""}],"src":"1378:328:21"},{"body":{"nodeType":"YulBlock","src":"1808:87:21","statements":[{"nodeType":"YulAssignment","src":"1818:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:21"},"nodeType":"YulFunctionCall","src":"1826:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:21"},"nodeType":"YulFunctionCall","src":"1871:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:21"},"nodeType":"YulFunctionCall","src":"1853:36:21"},"nodeType":"YulExpressionStatement","src":"1853:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:21","type":""}],"src":"1711:184:21"},{"body":{"nodeType":"YulBlock","src":"1970:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:21"},"nodeType":"YulFunctionCall","src":"2018:12:21"},"nodeType":"YulExpressionStatement","src":"2018:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:21"},"nodeType":"YulFunctionCall","src":"1987:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:21"},"nodeType":"YulFunctionCall","src":"1983:32:21"},"nodeType":"YulIf","src":"1980:52:21"},{"nodeType":"YulAssignment","src":"2041:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:21"},"nodeType":"YulFunctionCall","src":"2051:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:21","type":""}],"src":"1900:186:21"},{"body":{"nodeType":"YulBlock","src":"2178:173:21","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:21"},"nodeType":"YulFunctionCall","src":"2226:12:21"},"nodeType":"YulExpressionStatement","src":"2226:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:21"},"nodeType":"YulFunctionCall","src":"2195:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:21"},"nodeType":"YulFunctionCall","src":"2191:32:21"},"nodeType":"YulIf","src":"2188:52:21"},{"nodeType":"YulAssignment","src":"2249:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:21"},"nodeType":"YulFunctionCall","src":"2259:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:21"}]},{"nodeType":"YulAssignment","src":"2297:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:21"},"nodeType":"YulFunctionCall","src":"2326:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:21"},"nodeType":"YulFunctionCall","src":"2307:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:21","type":""}],"src":"2091:260:21"},{"body":{"nodeType":"YulBlock","src":"2411:325:21","statements":[{"nodeType":"YulAssignment","src":"2421:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:21"},"nodeType":"YulFunctionCall","src":"2431:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:21"},"nodeType":"YulFunctionCall","src":"2478:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:21","statements":[{"nodeType":"YulAssignment","src":"2531:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:21"},"nodeType":"YulFunctionCall","src":"2541:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:21"},"nodeType":"YulFunctionCall","src":"2502:26:21"},"nodeType":"YulIf","src":"2499:61:21"},{"body":{"nodeType":"YulBlock","src":"2619:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:21"},"nodeType":"YulFunctionCall","src":"2643:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:21"},"nodeType":"YulFunctionCall","src":"2633:31:21"},"nodeType":"YulExpressionStatement","src":"2633:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:21"},"nodeType":"YulFunctionCall","src":"2677:15:21"},"nodeType":"YulExpressionStatement","src":"2677:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:21"},"nodeType":"YulFunctionCall","src":"2705:15:21"},"nodeType":"YulExpressionStatement","src":"2705:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:21"},"nodeType":"YulFunctionCall","src":"2595:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:21"},"nodeType":"YulFunctionCall","src":"2572:38:21"},"nodeType":"YulIf","src":"2569:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:21","type":""}],"src":"2356:380:21"},{"body":{"nodeType":"YulBlock","src":"2789:174:21","statements":[{"nodeType":"YulAssignment","src":"2799:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:21"},"nodeType":"YulFunctionCall","src":"2806:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:21"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:21"},"nodeType":"YulFunctionCall","src":"2870:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:21"},"nodeType":"YulFunctionCall","src":"2860:31:21"},"nodeType":"YulExpressionStatement","src":"2860:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:21"},"nodeType":"YulFunctionCall","src":"2904:15:21"},"nodeType":"YulExpressionStatement","src":"2904:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:21"},"nodeType":"YulFunctionCall","src":"2932:15:21"},"nodeType":"YulExpressionStatement","src":"2932:15:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:21"},"nodeType":"YulFunctionCall","src":"2827:10:21"},"nodeType":"YulIf","src":"2824:133:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:21","type":""}],"src":"2741:222:21"},{"body":{"nodeType":"YulBlock","src":"3142:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:21"},"nodeType":"YulFunctionCall","src":"3152:21:21"},"nodeType":"YulExpressionStatement","src":"3152:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:21"},"nodeType":"YulFunctionCall","src":"3189:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:21"},"nodeType":"YulFunctionCall","src":"3182:30:21"},"nodeType":"YulExpressionStatement","src":"3182:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:21"},"nodeType":"YulFunctionCall","src":"3228:18:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:21"},"nodeType":"YulFunctionCall","src":"3221:62:21"},"nodeType":"YulExpressionStatement","src":"3221:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:21"},"nodeType":"YulFunctionCall","src":"3299:18:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:21"},"nodeType":"YulFunctionCall","src":"3292:35:21"},"nodeType":"YulExpressionStatement","src":"3292:35:21"},{"nodeType":"YulAssignment","src":"3336:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:21"},"nodeType":"YulFunctionCall","src":"3344:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:21","type":""}],"src":"2968:401:21"},{"body":{"nodeType":"YulBlock","src":"3548:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:21"},"nodeType":"YulFunctionCall","src":"3558:21:21"},"nodeType":"YulExpressionStatement","src":"3558:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:21"},"nodeType":"YulFunctionCall","src":"3595:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:21"},"nodeType":"YulFunctionCall","src":"3588:30:21"},"nodeType":"YulExpressionStatement","src":"3588:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:21"},"nodeType":"YulFunctionCall","src":"3634:18:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:21"},"nodeType":"YulFunctionCall","src":"3627:62:21"},"nodeType":"YulExpressionStatement","src":"3627:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:21"},"nodeType":"YulFunctionCall","src":"3705:18:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:21"},"nodeType":"YulFunctionCall","src":"3698:34:21"},"nodeType":"YulExpressionStatement","src":"3698:34:21"},{"nodeType":"YulAssignment","src":"3741:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:21"},"nodeType":"YulFunctionCall","src":"3749:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:21","type":""}],"src":"3374:400:21"},{"body":{"nodeType":"YulBlock","src":"3953:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:21"},"nodeType":"YulFunctionCall","src":"3963:21:21"},"nodeType":"YulExpressionStatement","src":"3963:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:21"},"nodeType":"YulFunctionCall","src":"4000:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:21"},"nodeType":"YulFunctionCall","src":"3993:30:21"},"nodeType":"YulExpressionStatement","src":"3993:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:21"},"nodeType":"YulFunctionCall","src":"4039:18:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:21"},"nodeType":"YulFunctionCall","src":"4032:62:21"},"nodeType":"YulExpressionStatement","src":"4032:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:21"},"nodeType":"YulFunctionCall","src":"4110:18:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:21"},"nodeType":"YulFunctionCall","src":"4103:32:21"},"nodeType":"YulExpressionStatement","src":"4103:32:21"},{"nodeType":"YulAssignment","src":"4144:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:21"},"nodeType":"YulFunctionCall","src":"4152:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:21","type":""}],"src":"3779:398:21"},{"body":{"nodeType":"YulBlock","src":"4356:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:21"},"nodeType":"YulFunctionCall","src":"4366:21:21"},"nodeType":"YulExpressionStatement","src":"4366:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:21"},"nodeType":"YulFunctionCall","src":"4403:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:21"},"nodeType":"YulFunctionCall","src":"4396:30:21"},"nodeType":"YulExpressionStatement","src":"4396:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:21"},"nodeType":"YulFunctionCall","src":"4442:18:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:21"},"nodeType":"YulFunctionCall","src":"4435:59:21"},"nodeType":"YulExpressionStatement","src":"4435:59:21"},{"nodeType":"YulAssignment","src":"4503:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:21"},"nodeType":"YulFunctionCall","src":"4511:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:21","type":""}],"src":"4182:353:21"},{"body":{"nodeType":"YulBlock","src":"4714:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:21"},"nodeType":"YulFunctionCall","src":"4724:21:21"},"nodeType":"YulExpressionStatement","src":"4724:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:21"},"nodeType":"YulFunctionCall","src":"4761:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:21"},"nodeType":"YulFunctionCall","src":"4754:30:21"},"nodeType":"YulExpressionStatement","src":"4754:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:21"},"nodeType":"YulFunctionCall","src":"4800:18:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:21"},"nodeType":"YulFunctionCall","src":"4793:62:21"},"nodeType":"YulExpressionStatement","src":"4793:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:21"},"nodeType":"YulFunctionCall","src":"4871:18:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:21"},"nodeType":"YulFunctionCall","src":"4864:35:21"},"nodeType":"YulExpressionStatement","src":"4864:35:21"},{"nodeType":"YulAssignment","src":"4908:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:21"},"nodeType":"YulFunctionCall","src":"4916:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:21","type":""}],"src":"4540:401:21"},{"body":{"nodeType":"YulBlock","src":"5120:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:21"},"nodeType":"YulFunctionCall","src":"5130:21:21"},"nodeType":"YulExpressionStatement","src":"5130:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:21"},"nodeType":"YulFunctionCall","src":"5167:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:21"},"nodeType":"YulFunctionCall","src":"5160:30:21"},"nodeType":"YulExpressionStatement","src":"5160:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:21"},"nodeType":"YulFunctionCall","src":"5206:18:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:21"},"nodeType":"YulFunctionCall","src":"5199:62:21"},"nodeType":"YulExpressionStatement","src":"5199:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:21"},"nodeType":"YulFunctionCall","src":"5277:18:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:21"},"nodeType":"YulFunctionCall","src":"5270:33:21"},"nodeType":"YulExpressionStatement","src":"5270:33:21"},{"nodeType":"YulAssignment","src":"5312:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:21"},"nodeType":"YulFunctionCall","src":"5320:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:21","type":""}],"src":"4946:399:21"},{"body":{"nodeType":"YulBlock","src":"5524:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:21"},"nodeType":"YulFunctionCall","src":"5534:21:21"},"nodeType":"YulExpressionStatement","src":"5534:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:21"},"nodeType":"YulFunctionCall","src":"5571:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:21"},"nodeType":"YulFunctionCall","src":"5564:30:21"},"nodeType":"YulExpressionStatement","src":"5564:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:21"},"nodeType":"YulFunctionCall","src":"5610:18:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:21"},"nodeType":"YulFunctionCall","src":"5603:62:21"},"nodeType":"YulExpressionStatement","src":"5603:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:21"},"nodeType":"YulFunctionCall","src":"5681:18:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:21"},"nodeType":"YulFunctionCall","src":"5674:36:21"},"nodeType":"YulExpressionStatement","src":"5674:36:21"},{"nodeType":"YulAssignment","src":"5719:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:21"},"nodeType":"YulFunctionCall","src":"5727:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:21","type":""}],"src":"5350:402:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c6565b60405180910390f35b6100df6100da366004610730565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075a565b61024c565b604051601281526020016100c3565b6100df610131366004610730565b610270565b6100f3610144366004610796565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610730565b6102a1565b6100df610188366004610730565b610321565b6100f361019b3660046107b8565b61032f565b6060600380546101af906107eb565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107eb565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d9190610825565b61035a565b6060600480546101af906107eb565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066d908490610825565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b991815260200190565b60405180910390a36104f2565b600060208083528351808285015260005b818110156106f3578581018301518582016040015282016106d7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461072b57600080fd5b919050565b6000806040838503121561074357600080fd5b61074c83610714565b946020939093013593505050565b60008060006060848603121561076f57600080fd5b61077884610714565b925061078660208501610714565b9150604084013590509250925092565b6000602082840312156107a857600080fd5b6107b182610714565b9392505050565b600080604083850312156107cb57600080fd5b6107d483610714565b91506107e260208401610714565b90509250929050565b600181811c908216806107ff57607f821691505b60208210810361081f57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220648507c9dcf81594420dcf3d05d25cfe1b59f02b5259834e4e37c21e0696fe6364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x825 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7EB JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66D SWAP1 DUP5 SWAP1 PUSH2 0x825 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D7 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74C DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x778 DUP5 PUSH2 0x714 JUMP JUMPDEST SWAP3 POP PUSH2 0x786 PUSH1 0x20 DUP6 ADD PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D4 DUP4 PUSH2 0x714 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E2 PUSH1 0x20 DUP5 ADD PUSH2 0x714 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x81F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x8507C9DCF8 ISZERO SWAP5 TIMESTAMP 0xD 0xCF RETURNDATASIZE SDIV 0xD2 0x5C INVALID SHL MSIZE CREATE 0x2B MSTORE MSIZE DUP4 0x4E 0x4E CALLDATACOPY 0xC2 0x1E MOD SWAP7 INVALID PUSH4 0x64736F6C PUSH4 0x43000811 STOP CALLER ","sourceMap":"114:127:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:21;;1162:22;1144:41;;1132:2;1117:18;4433:197:8;1004:187:21;3244:106:8;3331:12;;3244:106;;;1342:25:21;;;1330:2;1315:18;3244:106:8;1196:177:21;5192:286:8;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1853:36:21;;1841:2;1826:18;3093:91:8;1711:184:21;5873:234:8;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:8;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:12;4570:32:8;719:10:12;4586:7:8;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:12;5375:38:8;5391:4;719:10:12;5406:6:8;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:8;;5192:286;-1:-1:-1;;;;5192:286:8:o;5873:234::-;5961:4;719:10:12;6015:64:8;719:10:12;6031:7:8;6068:10;6040:25;719:10:12;6031:7:8;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:12;6687:4:8;6768:25;719:10:12;6785:7:8;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:8;;3170:2:21;6803:85:8;;;3152:21:21;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:21;;;3292:35;3344:19;;6803:85:8;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:12;3862:28:8;719:10:12;3879:2:8;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:8;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10110:370::-;-1:-1:-1;;;;;10241:19:8;;10233:68;;;;-1:-1:-1;;;10233:68:8;;3576:2:21;10233:68:8;;;3558:21:21;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:21;;;3698:34;3749:19;;10233:68:8;3374:400:21;10233:68:8;-1:-1:-1;;;;;10319:21:8;;10311:68;;;;-1:-1:-1;;;10311:68:8;;3981:2:21;10311:68:8;;;3963:21:21;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:21;;;4103:32;4152:19;;10311:68:8;3779:398:21;10311:68:8;-1:-1:-1;;;;;10390:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1342:25:21;;;10441:32:8;;1315:18:21;10441:32:8;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:8;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:8;;4384:2:21;11010:68:8;;;4366:21:21;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11010:68:8;4182:353:21;11010:68:8;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:8;;7593:68;;;;-1:-1:-1;;;7593:68:8;;4742:2:21;7593:68:8;;;4724:21:21;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:21;;;4864:35;4916:19;;7593:68:8;4540:401:21;7593:68:8;-1:-1:-1;;;;;7679:16:8;;7671:64;;;;-1:-1:-1;;;7671:64:8;;5148:2:21;7671:64:8;;;5130:21:21;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:21;;;5270:33;5320:19;;7671:64:8;4946:399:21;7671:64:8;-1:-1:-1;;;;;7817:15:8;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:8;;5552:2:21;7842:72:8;;;5534:21:21;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:21;;;5674:36;5727:19;;7842:72:8;5350:402:21;7842:72:8;-1:-1:-1;;;;;7948:15:8;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:8;8054:4;-1:-1:-1;;;;;8045:26:8;;8064:6;8045:26;;;;1342:25:21;;1330:2;1315:18;;1196:177;8045:26:8;;;;;;;;8082:37;11786:121;14:548:21;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:21;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:21:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:21:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"gasEstimates":{"creation":{"codeDepositCost":"434400","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24628","balanceOf(address)":"2562","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/WETHToken.sol\":\"WETHToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/test/WETHToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\n\\ncontract WETHToken is ERC20 {\\n    constructor() ERC20('Wrapped ETHER', 'WETH') {\\n        _mint(msg.sender, 1000 ether);\\n    }\\n}\",\"keccak256\":\"0x332df045be74d2ec69a868f93538b5d153f29024da9c3b3aa082f66e233585c4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1418,"contract":"contracts/test/WETHToken.sol:WETHToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1424,"contract":"contracts/test/WETHToken.sol:WETHToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1426,"contract":"contracts/test/WETHToken.sol:WETHToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1428,"contract":"contracts/test/WETHToken.sol:WETHToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1430,"contract":"contracts/test/WETHToken.sol:WETHToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/tokens/ProjectTokenERC20.sol":{"ProjectTokenERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_fsociety","type":"address"},{"internalType":"uint256","name":"_fsocietySupply","type":"uint256"},{"internalType":"address","name":"_author","type":"address"},{"internalType":"uint256","name":"_authorSupply","type":"uint256"},{"internalType":"address","name":"_other","type":"address"},{"internalType":"uint256","name":"_otherSupply","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610ddd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b411461016a578063a238d31114610172578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610980565b60405180910390f35b6100ea6100e53660046109ea565b610252565b60405190151581526020016100ce565b6035545b6040519081526020016100ce565b6100ea61011a366004610a14565b61026c565b604051601281526020016100ce565b6100ea61013c3660046109ea565b610290565b6100fe61014f366004610a50565b6001600160a01b031660009081526033602052604090205490565b6100c16102b2565b610185610180366004610b15565b6102c1565b005b6100ea6101953660046109ea565b6103e7565b6100ea6101a83660046109ea565b610462565b6100fe6101bb366004610bc8565b610470565b6060603680546101cf90610bfb565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610bfb565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b60003361026081858561049b565b60019150505b92915050565b60003361027a8582856105bf565b610285858585610639565b506001949350505050565b6000336102608185856102a38383610470565b6102ad9190610c35565b61049b565b6060603780546101cf90610bfb565b600054610100900460ff16158080156102e15750600054600160ff909116105b806102fb5750303b1580156102fb575060005460ff166001145b6103635760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610386576000805461ff0019166101001790555b61039689898989898989896107e4565b80156103dc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b600033816103f58286610470565b9050838110156104555760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161035a565b610285828686840361049b565b600033610260818585610639565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166104fd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161035a565b6001600160a01b03821661055e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161035a565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105cb8484610470565b9050600019811461063357818110156106265760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161035a565b610633848484840361049b565b50505050565b6001600160a01b03831661069d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161035a565b6001600160a01b0382166106ff5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161035a565b6001600160a01b038316600090815260336020526040902054818110156107775760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161035a565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107d79086815260200190565b60405180910390a3610633565b600054610100900460ff1661080b5760405162461bcd60e51b815260040161035a90610c56565b6108158888610832565b610823868686868686610872565b5050505050505050565b505050565b600054610100900460ff166108595760405162461bcd60e51b815260040161035a90610c56565b60366108658382610ce7565b50603761082d8282610ce7565b600054610100900460ff166108995760405162461bcd60e51b815260040161035a90610c56565b6108a386866108bf565b6108ad84846108bf565b6108b782826108bf565b505050505050565b6001600160a01b0382166109155760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161035a565b80603560008282546109279190610c35565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156109ad57858101830151858201604001528201610991565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109e557600080fd5b919050565b600080604083850312156109fd57600080fd5b610a06836109ce565b946020939093013593505050565b600080600060608486031215610a2957600080fd5b610a32846109ce565b9250610a40602085016109ce565b9150604084013590509250925092565b600060208284031215610a6257600080fd5b610a6b826109ce565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a9957600080fd5b813567ffffffffffffffff80821115610ab457610ab4610a72565b604051601f8301601f19908116603f01168101908282118183101715610adc57610adc610a72565b81604052838152866020858801011115610af557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080610100898b031215610b3257600080fd5b883567ffffffffffffffff80821115610b4a57600080fd5b610b568c838d01610a88565b995060208b0135915080821115610b6c57600080fd5b50610b798b828c01610a88565b975050610b8860408a016109ce565b955060608901359450610b9d60808a016109ce565b935060a08901359250610bb260c08a016109ce565b915060e089013590509295985092959890939650565b60008060408385031215610bdb57600080fd5b610be4836109ce565b9150610bf2602084016109ce565b90509250929050565b600181811c90821680610c0f57607f821691505b602082108103610c2f57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026657634e487b7160e01b600052601160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f82111561082d57600081815260208120601f850160051c81016020861015610cc85750805b601f850160051c820191505b818110156108b757828155600101610cd4565b815167ffffffffffffffff811115610d0157610d01610a72565b610d1581610d0f8454610bfb565b84610ca1565b602080601f831160018114610d4a5760008415610d325750858301515b600019600386901b1c1916600185901b1785556108b7565b600085815260208120601f198616915b82811015610d7957888601518255948401946001909101908401610d5a565b5085821015610d975787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220adecc981f9a06c521af1817f233c7a66a8db41805e5342eceabb46be10491c3a64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDDD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xA238D311 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0xBFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0xBFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x248 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x248 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27A DUP6 DUP3 DUP6 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x285 DUP6 DUP6 DUP6 PUSH2 0x639 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x2A3 DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x2E1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x2FB JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x396 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x7E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x3F5 DUP3 DUP7 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH2 0x285 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x49B JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB DUP5 DUP5 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x633 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35A JUMP JUMPDEST PUSH2 0x633 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x49B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7D7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x815 DUP9 DUP9 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x823 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x872 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x36 PUSH2 0x865 DUP4 DUP3 PUSH2 0xCE7 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x82D DUP3 DUP3 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x8A3 DUP7 DUP7 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x8AD DUP5 DUP5 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x8B7 DUP3 DUP3 PUSH2 0x8BF JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35A JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x927 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9AD JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x991 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA06 DUP4 PUSH2 0x9CE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA32 DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP3 POP PUSH2 0xA40 PUSH1 0x20 DUP6 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6B DUP3 PUSH2 0x9CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAB4 JUMPI PUSH2 0xAB4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xADC JUMPI PUSH2 0xADC PUSH2 0xA72 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xB32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB56 DUP13 DUP4 DUP14 ADD PUSH2 0xA88 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xB6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB79 DUP12 DUP3 DUP13 ADD PUSH2 0xA88 JUMP JUMPDEST SWAP8 POP POP PUSH2 0xB88 PUSH1 0x40 DUP11 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH2 0xB9D PUSH1 0x80 DUP11 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH2 0xBB2 PUSH1 0xC0 DUP11 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE4 DUP4 PUSH2 0x9CE JUMP JUMPDEST SWAP2 POP PUSH2 0xBF2 PUSH1 0x20 DUP5 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC0F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC2F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xCC8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B7 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCD4 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD01 PUSH2 0xA72 JUMP JUMPDEST PUSH2 0xD15 DUP2 PUSH2 0xD0F DUP5 SLOAD PUSH2 0xBFB JUMP JUMPDEST DUP5 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD4A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xD32 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD79 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xD5A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xD97 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xEC 0xC9 DUP2 0xF9 LOG0 PUSH13 0x521AF1817F233C7A66A8DB4180 0x5E MSTORE8 TIMESTAMP 0xEC 0xEA 0xBB CHAINID 0xBE LT 0x49 SHR GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"262:1664:18:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__ERC20_init_unchained_233":{"entryPoint":2098,"id":233,"parameterSlots":2,"returnSlots":0},"@__ProjectTokenERC20_init_3231":{"entryPoint":2020,"id":3231,"parameterSlots":8,"returnSlots":0},"@__ProjectTokenERC20_init_unchained_3264":{"entryPoint":2162,"id":3264,"parameterSlots":6,"returnSlots":0},"@_afterTokenTransfer_774":{"entryPoint":null,"id":774,"parameterSlots":3,"returnSlots":0},"@_approve_709":{"entryPoint":1179,"id":709,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_763":{"entryPoint":2093,"id":763,"parameterSlots":3,"returnSlots":0},"@_mint_592":{"entryPoint":2239,"id":592,"parameterSlots":2,"returnSlots":0},"@_msgSender_1194":{"entryPoint":null,"id":1194,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_752":{"entryPoint":1471,"id":752,"parameterSlots":3,"returnSlots":0},"@_transfer_535":{"entryPoint":1593,"id":535,"parameterSlots":3,"returnSlots":0},"@allowance_330":{"entryPoint":1136,"id":330,"parameterSlots":2,"returnSlots":1},"@approve_355":{"entryPoint":594,"id":355,"parameterSlots":2,"returnSlots":1},"@balanceOf_287":{"entryPoint":null,"id":287,"parameterSlots":1,"returnSlots":1},"@decimals_263":{"entryPoint":null,"id":263,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_458":{"entryPoint":999,"id":458,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_417":{"entryPoint":656,"id":417,"parameterSlots":2,"returnSlots":1},"@initialize_3194":{"entryPoint":705,"id":3194,"parameterSlots":8,"returnSlots":0},"@isContract_901":{"entryPoint":null,"id":901,"parameterSlots":1,"returnSlots":1},"@name_243":{"entryPoint":448,"id":243,"parameterSlots":0,"returnSlots":1},"@symbol_253":{"entryPoint":690,"id":253,"parameterSlots":0,"returnSlots":1},"@totalSupply_273":{"entryPoint":null,"id":273,"parameterSlots":0,"returnSlots":1},"@transferFrom_388":{"entryPoint":620,"id":388,"parameterSlots":3,"returnSlots":1},"@transfer_312":{"entryPoint":1122,"id":312,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2510,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":2696,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2640,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3016,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2580,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2538,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_addresst_uint256t_addresst_uint256":{"entryPoint":2837,"id":null,"parameterSlots":2,"returnSlots":8},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3158,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3125,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":3233,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":3303,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3067,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":2674,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11179:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:21","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:21","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:21","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:21"},"nodeType":"YulFunctionCall","src":"166:21:21"},"nodeType":"YulExpressionStatement","src":"166:21:21"},{"nodeType":"YulVariableDeclaration","src":"196:27:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:21"},"nodeType":"YulFunctionCall","src":"210:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:21"},"nodeType":"YulFunctionCall","src":"239:18:21"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:21"},"nodeType":"YulFunctionCall","src":"232:34:21"},"nodeType":"YulExpressionStatement","src":"232:34:21"},{"nodeType":"YulVariableDeclaration","src":"275:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:21","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:21"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:21"},"nodeType":"YulFunctionCall","src":"369:17:21"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:21"},"nodeType":"YulFunctionCall","src":"365:26:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:21"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:21"},"nodeType":"YulFunctionCall","src":"403:14:21"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:21"},"nodeType":"YulFunctionCall","src":"399:23:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:21"},"nodeType":"YulFunctionCall","src":"393:30:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:21"},"nodeType":"YulFunctionCall","src":"358:66:21"},"nodeType":"YulExpressionStatement","src":"358:66:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:21"},"nodeType":"YulFunctionCall","src":"302:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:21","statements":[{"nodeType":"YulAssignment","src":"318:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:21"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:21"},"nodeType":"YulFunctionCall","src":"323:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:21","statements":[]},"src":"294:140:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:21"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:21"},"nodeType":"YulFunctionCall","src":"454:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:21"},"nodeType":"YulFunctionCall","src":"450:31:21"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:21"},"nodeType":"YulFunctionCall","src":"443:42:21"},"nodeType":"YulExpressionStatement","src":"443:42:21"},{"nodeType":"YulAssignment","src":"494:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:21"},"nodeType":"YulFunctionCall","src":"525:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:21"},"nodeType":"YulFunctionCall","src":"542:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:21"},"nodeType":"YulFunctionCall","src":"521:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:21"},"nodeType":"YulFunctionCall","src":"506:45:21"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:21"},"nodeType":"YulFunctionCall","src":"502:54:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:21","type":""}],"src":"14:548:21"},{"body":{"nodeType":"YulBlock","src":"616:124:21","statements":[{"nodeType":"YulAssignment","src":"626:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:21"},"nodeType":"YulFunctionCall","src":"635:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:21"}]},{"body":{"nodeType":"YulBlock","src":"718:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:21"},"nodeType":"YulFunctionCall","src":"720:12:21"},"nodeType":"YulExpressionStatement","src":"720:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:21"},"nodeType":"YulFunctionCall","src":"699:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:21"},"nodeType":"YulFunctionCall","src":"695:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:21"},"nodeType":"YulFunctionCall","src":"684:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:21"},"nodeType":"YulFunctionCall","src":"674:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:21"},"nodeType":"YulFunctionCall","src":"667:50:21"},"nodeType":"YulIf","src":"664:70:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:21","type":""}],"src":"567:173:21"},{"body":{"nodeType":"YulBlock","src":"832:167:21","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:21"},"nodeType":"YulFunctionCall","src":"880:12:21"},"nodeType":"YulExpressionStatement","src":"880:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:21"},"nodeType":"YulFunctionCall","src":"849:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:21"},"nodeType":"YulFunctionCall","src":"845:32:21"},"nodeType":"YulIf","src":"842:52:21"},{"nodeType":"YulAssignment","src":"903:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:21"},"nodeType":"YulFunctionCall","src":"913:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:21"}]},{"nodeType":"YulAssignment","src":"951:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:21"},"nodeType":"YulFunctionCall","src":"974:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:21"},"nodeType":"YulFunctionCall","src":"961:32:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:21","type":""}],"src":"745:254:21"},{"body":{"nodeType":"YulBlock","src":"1099:92:21","statements":[{"nodeType":"YulAssignment","src":"1109:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:21"},"nodeType":"YulFunctionCall","src":"1117:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:21"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:21"},"nodeType":"YulFunctionCall","src":"1169:14:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:21"},"nodeType":"YulFunctionCall","src":"1162:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:21"},"nodeType":"YulFunctionCall","src":"1144:41:21"},"nodeType":"YulExpressionStatement","src":"1144:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:21","type":""}],"src":"1004:187:21"},{"body":{"nodeType":"YulBlock","src":"1297:76:21","statements":[{"nodeType":"YulAssignment","src":"1307:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:21"},"nodeType":"YulFunctionCall","src":"1315:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:21"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:21"},"nodeType":"YulFunctionCall","src":"1342:25:21"},"nodeType":"YulExpressionStatement","src":"1342:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:21","type":""}],"src":"1196:177:21"},{"body":{"nodeType":"YulBlock","src":"1482:224:21","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:21"},"nodeType":"YulFunctionCall","src":"1530:12:21"},"nodeType":"YulExpressionStatement","src":"1530:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:21"},"nodeType":"YulFunctionCall","src":"1499:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:21"},"nodeType":"YulFunctionCall","src":"1495:32:21"},"nodeType":"YulIf","src":"1492:52:21"},{"nodeType":"YulAssignment","src":"1553:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:21"},"nodeType":"YulFunctionCall","src":"1563:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:21"}]},{"nodeType":"YulAssignment","src":"1601:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:21"},"nodeType":"YulFunctionCall","src":"1630:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:21"},"nodeType":"YulFunctionCall","src":"1611:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:21"}]},{"nodeType":"YulAssignment","src":"1658:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:21"},"nodeType":"YulFunctionCall","src":"1681:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:21"},"nodeType":"YulFunctionCall","src":"1668:32:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:21","type":""}],"src":"1378:328:21"},{"body":{"nodeType":"YulBlock","src":"1808:87:21","statements":[{"nodeType":"YulAssignment","src":"1818:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:21"},"nodeType":"YulFunctionCall","src":"1826:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:21"},"nodeType":"YulFunctionCall","src":"1871:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:21"},"nodeType":"YulFunctionCall","src":"1853:36:21"},"nodeType":"YulExpressionStatement","src":"1853:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:21","type":""}],"src":"1711:184:21"},{"body":{"nodeType":"YulBlock","src":"1970:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:21"},"nodeType":"YulFunctionCall","src":"2018:12:21"},"nodeType":"YulExpressionStatement","src":"2018:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:21"},"nodeType":"YulFunctionCall","src":"1987:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:21"},"nodeType":"YulFunctionCall","src":"1983:32:21"},"nodeType":"YulIf","src":"1980:52:21"},{"nodeType":"YulAssignment","src":"2041:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:21"},"nodeType":"YulFunctionCall","src":"2051:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:21","type":""}],"src":"1900:186:21"},{"body":{"nodeType":"YulBlock","src":"2123:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2140:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2147:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2152:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2143:3:21"},"nodeType":"YulFunctionCall","src":"2143:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2133:6:21"},"nodeType":"YulFunctionCall","src":"2133:31:21"},"nodeType":"YulExpressionStatement","src":"2133:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2180:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2183:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2173:6:21"},"nodeType":"YulFunctionCall","src":"2173:15:21"},"nodeType":"YulExpressionStatement","src":"2173:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2204:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2207:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2197:6:21"},"nodeType":"YulFunctionCall","src":"2197:15:21"},"nodeType":"YulExpressionStatement","src":"2197:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2091:127:21"},{"body":{"nodeType":"YulBlock","src":"2276:666:21","statements":[{"body":{"nodeType":"YulBlock","src":"2325:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2334:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2337:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2327:6:21"},"nodeType":"YulFunctionCall","src":"2327:12:21"},"nodeType":"YulExpressionStatement","src":"2327:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2304:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2312:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2300:3:21"},"nodeType":"YulFunctionCall","src":"2300:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2319:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2296:3:21"},"nodeType":"YulFunctionCall","src":"2296:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2289:6:21"},"nodeType":"YulFunctionCall","src":"2289:35:21"},"nodeType":"YulIf","src":"2286:55:21"},{"nodeType":"YulVariableDeclaration","src":"2350:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2373:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2360:12:21"},"nodeType":"YulFunctionCall","src":"2360:20:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2354:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2389:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2399:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2393:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2440:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2442:16:21"},"nodeType":"YulFunctionCall","src":"2442:18:21"},"nodeType":"YulExpressionStatement","src":"2442:18:21"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2432:2:21"},{"name":"_2","nodeType":"YulIdentifier","src":"2436:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2429:2:21"},"nodeType":"YulFunctionCall","src":"2429:10:21"},"nodeType":"YulIf","src":"2426:36:21"},{"nodeType":"YulVariableDeclaration","src":"2471:17:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2485:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2481:3:21"},"nodeType":"YulFunctionCall","src":"2481:7:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2475:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2497:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2517:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2511:5:21"},"nodeType":"YulFunctionCall","src":"2511:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2501:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2529:71:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2551:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2575:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"2579:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2571:3:21"},"nodeType":"YulFunctionCall","src":"2571:13:21"},{"name":"_3","nodeType":"YulIdentifier","src":"2586:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2567:3:21"},"nodeType":"YulFunctionCall","src":"2567:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"2591:2:21","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2563:3:21"},"nodeType":"YulFunctionCall","src":"2563:31:21"},{"name":"_3","nodeType":"YulIdentifier","src":"2596:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2559:3:21"},"nodeType":"YulFunctionCall","src":"2559:40:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:21"},"nodeType":"YulFunctionCall","src":"2547:53:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2533:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2659:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2661:16:21"},"nodeType":"YulFunctionCall","src":"2661:18:21"},"nodeType":"YulExpressionStatement","src":"2661:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2618:10:21"},{"name":"_2","nodeType":"YulIdentifier","src":"2630:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2615:2:21"},"nodeType":"YulFunctionCall","src":"2615:18:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2638:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2650:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2635:2:21"},"nodeType":"YulFunctionCall","src":"2635:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2612:2:21"},"nodeType":"YulFunctionCall","src":"2612:46:21"},"nodeType":"YulIf","src":"2609:72:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2697:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2701:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2690:6:21"},"nodeType":"YulFunctionCall","src":"2690:22:21"},"nodeType":"YulExpressionStatement","src":"2690:22:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2728:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2736:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2721:6:21"},"nodeType":"YulFunctionCall","src":"2721:18:21"},"nodeType":"YulExpressionStatement","src":"2721:18:21"},{"body":{"nodeType":"YulBlock","src":"2787:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2796:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2799:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2789:6:21"},"nodeType":"YulFunctionCall","src":"2789:12:21"},"nodeType":"YulExpressionStatement","src":"2789:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2762:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2770:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2758:3:21"},"nodeType":"YulFunctionCall","src":"2758:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"2775:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2754:3:21"},"nodeType":"YulFunctionCall","src":"2754:26:21"},{"name":"end","nodeType":"YulIdentifier","src":"2782:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2751:2:21"},"nodeType":"YulFunctionCall","src":"2751:35:21"},"nodeType":"YulIf","src":"2748:55:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2829:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2837:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2825:3:21"},"nodeType":"YulFunctionCall","src":"2825:17:21"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2848:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2856:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2844:3:21"},"nodeType":"YulFunctionCall","src":"2844:17:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2863:2:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2812:12:21"},"nodeType":"YulFunctionCall","src":"2812:54:21"},"nodeType":"YulExpressionStatement","src":"2812:54:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2890:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2898:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2886:3:21"},"nodeType":"YulFunctionCall","src":"2886:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"2903:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2882:3:21"},"nodeType":"YulFunctionCall","src":"2882:26:21"},{"kind":"number","nodeType":"YulLiteral","src":"2910:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2875:6:21"},"nodeType":"YulFunctionCall","src":"2875:37:21"},"nodeType":"YulExpressionStatement","src":"2875:37:21"},{"nodeType":"YulAssignment","src":"2921:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2930:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2921:5:21"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2250:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2258:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2266:5:21","type":""}],"src":"2223:719:21"},{"body":{"nodeType":"YulBlock","src":"3156:765:21","statements":[{"body":{"nodeType":"YulBlock","src":"3203:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3212:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3215:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3205:6:21"},"nodeType":"YulFunctionCall","src":"3205:12:21"},"nodeType":"YulExpressionStatement","src":"3205:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3177:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3186:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3173:3:21"},"nodeType":"YulFunctionCall","src":"3173:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3198:3:21","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3169:3:21"},"nodeType":"YulFunctionCall","src":"3169:33:21"},"nodeType":"YulIf","src":"3166:53:21"},{"nodeType":"YulVariableDeclaration","src":"3228:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3255:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3242:12:21"},"nodeType":"YulFunctionCall","src":"3242:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3232:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3274:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3284:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3278:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3329:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3338:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3341:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3331:6:21"},"nodeType":"YulFunctionCall","src":"3331:12:21"},"nodeType":"YulExpressionStatement","src":"3331:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3317:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3325:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3314:2:21"},"nodeType":"YulFunctionCall","src":"3314:14:21"},"nodeType":"YulIf","src":"3311:34:21"},{"nodeType":"YulAssignment","src":"3354:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3386:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3397:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3382:3:21"},"nodeType":"YulFunctionCall","src":"3382:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3406:7:21"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3364:17:21"},"nodeType":"YulFunctionCall","src":"3364:50:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3354:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"3423:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3467:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:21"},"nodeType":"YulFunctionCall","src":"3452:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3439:12:21"},"nodeType":"YulFunctionCall","src":"3439:32:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3427:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3500:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3509:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3512:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3502:6:21"},"nodeType":"YulFunctionCall","src":"3502:12:21"},"nodeType":"YulExpressionStatement","src":"3502:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3486:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3496:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3483:2:21"},"nodeType":"YulFunctionCall","src":"3483:16:21"},"nodeType":"YulIf","src":"3480:36:21"},{"nodeType":"YulAssignment","src":"3525:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3557:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3568:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3553:3:21"},"nodeType":"YulFunctionCall","src":"3553:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3579:7:21"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"3535:17:21"},"nodeType":"YulFunctionCall","src":"3535:52:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3525:6:21"}]},{"nodeType":"YulAssignment","src":"3596:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3629:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3640:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3625:3:21"},"nodeType":"YulFunctionCall","src":"3625:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3606:18:21"},"nodeType":"YulFunctionCall","src":"3606:38:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3596:6:21"}]},{"nodeType":"YulAssignment","src":"3653:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3680:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3691:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3676:3:21"},"nodeType":"YulFunctionCall","src":"3676:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3663:12:21"},"nodeType":"YulFunctionCall","src":"3663:32:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3653:6:21"}]},{"nodeType":"YulAssignment","src":"3704:49:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3737:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3748:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3733:3:21"},"nodeType":"YulFunctionCall","src":"3733:19:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3714:18:21"},"nodeType":"YulFunctionCall","src":"3714:39:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3704:6:21"}]},{"nodeType":"YulAssignment","src":"3762:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3789:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3800:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3785:3:21"},"nodeType":"YulFunctionCall","src":"3785:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3772:12:21"},"nodeType":"YulFunctionCall","src":"3772:33:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3762:6:21"}]},{"nodeType":"YulAssignment","src":"3814:49:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3847:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3858:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3843:3:21"},"nodeType":"YulFunctionCall","src":"3843:19:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3824:18:21"},"nodeType":"YulFunctionCall","src":"3824:39:21"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3814:6:21"}]},{"nodeType":"YulAssignment","src":"3872:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3899:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3910:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3895:3:21"},"nodeType":"YulFunctionCall","src":"3895:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3882:12:21"},"nodeType":"YulFunctionCall","src":"3882:33:21"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"3872:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_addresst_uint256t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3066:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3077:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3089:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3097:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3105:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3113:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3121:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3129:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3137:6:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3145:6:21","type":""}],"src":"2947:974:21"},{"body":{"nodeType":"YulBlock","src":"4013:173:21","statements":[{"body":{"nodeType":"YulBlock","src":"4059:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4068:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4071:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4061:6:21"},"nodeType":"YulFunctionCall","src":"4061:12:21"},"nodeType":"YulExpressionStatement","src":"4061:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4034:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4030:3:21"},"nodeType":"YulFunctionCall","src":"4030:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4055:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4026:3:21"},"nodeType":"YulFunctionCall","src":"4026:32:21"},"nodeType":"YulIf","src":"4023:52:21"},{"nodeType":"YulAssignment","src":"4084:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4113:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4094:18:21"},"nodeType":"YulFunctionCall","src":"4094:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4084:6:21"}]},{"nodeType":"YulAssignment","src":"4132:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4165:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4176:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4161:3:21"},"nodeType":"YulFunctionCall","src":"4161:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4142:18:21"},"nodeType":"YulFunctionCall","src":"4142:38:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4132:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3971:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3982:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3994:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4002:6:21","type":""}],"src":"3926:260:21"},{"body":{"nodeType":"YulBlock","src":"4246:325:21","statements":[{"nodeType":"YulAssignment","src":"4256:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4270:1:21","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"4273:4:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4266:3:21"},"nodeType":"YulFunctionCall","src":"4266:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4256:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"4287:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4317:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"4323:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4313:3:21"},"nodeType":"YulFunctionCall","src":"4313:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4291:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4364:31:21","statements":[{"nodeType":"YulAssignment","src":"4366:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4380:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4388:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4376:3:21"},"nodeType":"YulFunctionCall","src":"4376:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4366:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4344:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4337:6:21"},"nodeType":"YulFunctionCall","src":"4337:26:21"},"nodeType":"YulIf","src":"4334:61:21"},{"body":{"nodeType":"YulBlock","src":"4454:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4475:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4482:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4487:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4478:3:21"},"nodeType":"YulFunctionCall","src":"4478:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4468:6:21"},"nodeType":"YulFunctionCall","src":"4468:31:21"},"nodeType":"YulExpressionStatement","src":"4468:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4519:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4522:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4512:6:21"},"nodeType":"YulFunctionCall","src":"4512:15:21"},"nodeType":"YulExpressionStatement","src":"4512:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4547:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4550:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4540:6:21"},"nodeType":"YulFunctionCall","src":"4540:15:21"},"nodeType":"YulExpressionStatement","src":"4540:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4410:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4433:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4441:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4430:2:21"},"nodeType":"YulFunctionCall","src":"4430:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4407:2:21"},"nodeType":"YulFunctionCall","src":"4407:38:21"},"nodeType":"YulIf","src":"4404:161:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4226:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4235:6:21","type":""}],"src":"4191:380:21"},{"body":{"nodeType":"YulBlock","src":"4624:174:21","statements":[{"nodeType":"YulAssignment","src":"4634:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4645:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"4648:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4641:3:21"},"nodeType":"YulFunctionCall","src":"4641:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4634:3:21"}]},{"body":{"nodeType":"YulBlock","src":"4681:111:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4702:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4709:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4714:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4705:3:21"},"nodeType":"YulFunctionCall","src":"4705:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4695:6:21"},"nodeType":"YulFunctionCall","src":"4695:31:21"},"nodeType":"YulExpressionStatement","src":"4695:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4746:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4749:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4739:6:21"},"nodeType":"YulFunctionCall","src":"4739:15:21"},"nodeType":"YulExpressionStatement","src":"4739:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4774:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4777:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4767:6:21"},"nodeType":"YulFunctionCall","src":"4767:15:21"},"nodeType":"YulExpressionStatement","src":"4767:15:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4665:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"4668:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4662:2:21"},"nodeType":"YulFunctionCall","src":"4662:10:21"},"nodeType":"YulIf","src":"4659:133:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4607:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"4610:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4616:3:21","type":""}],"src":"4576:222:21"},{"body":{"nodeType":"YulBlock","src":"4977:236:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4994:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5005:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4987:6:21"},"nodeType":"YulFunctionCall","src":"4987:21:21"},"nodeType":"YulExpressionStatement","src":"4987:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5028:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5039:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5024:3:21"},"nodeType":"YulFunctionCall","src":"5024:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5044:2:21","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5017:6:21"},"nodeType":"YulFunctionCall","src":"5017:30:21"},"nodeType":"YulExpressionStatement","src":"5017:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5067:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5078:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5063:3:21"},"nodeType":"YulFunctionCall","src":"5063:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"5083:34:21","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5056:6:21"},"nodeType":"YulFunctionCall","src":"5056:62:21"},"nodeType":"YulExpressionStatement","src":"5056:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5138:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5149:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5134:3:21"},"nodeType":"YulFunctionCall","src":"5134:18:21"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"5154:16:21","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5127:6:21"},"nodeType":"YulFunctionCall","src":"5127:44:21"},"nodeType":"YulExpressionStatement","src":"5127:44:21"},{"nodeType":"YulAssignment","src":"5180:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5192:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5203:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5188:3:21"},"nodeType":"YulFunctionCall","src":"5188:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5180:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4954:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4968:4:21","type":""}],"src":"4803:410:21"},{"body":{"nodeType":"YulBlock","src":"5325:87:21","statements":[{"nodeType":"YulAssignment","src":"5335:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5347:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5358:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5343:3:21"},"nodeType":"YulFunctionCall","src":"5343:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5335:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5377:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5392:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5400:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5388:3:21"},"nodeType":"YulFunctionCall","src":"5388:17:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5370:6:21"},"nodeType":"YulFunctionCall","src":"5370:36:21"},"nodeType":"YulExpressionStatement","src":"5370:36:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5294:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5305:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5316:4:21","type":""}],"src":"5218:194:21"},{"body":{"nodeType":"YulBlock","src":"5591:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5608:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5619:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5601:6:21"},"nodeType":"YulFunctionCall","src":"5601:21:21"},"nodeType":"YulExpressionStatement","src":"5601:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5642:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5653:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5638:3:21"},"nodeType":"YulFunctionCall","src":"5638:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5658:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5631:6:21"},"nodeType":"YulFunctionCall","src":"5631:30:21"},"nodeType":"YulExpressionStatement","src":"5631:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5681:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5692:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5677:3:21"},"nodeType":"YulFunctionCall","src":"5677:18:21"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"5697:34:21","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5670:6:21"},"nodeType":"YulFunctionCall","src":"5670:62:21"},"nodeType":"YulExpressionStatement","src":"5670:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5752:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5763:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5748:3:21"},"nodeType":"YulFunctionCall","src":"5748:18:21"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"5768:7:21","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5741:6:21"},"nodeType":"YulFunctionCall","src":"5741:35:21"},"nodeType":"YulExpressionStatement","src":"5741:35:21"},{"nodeType":"YulAssignment","src":"5785:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5797:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5808:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5793:3:21"},"nodeType":"YulFunctionCall","src":"5793:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5785:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5568:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5582:4:21","type":""}],"src":"5417:401:21"},{"body":{"nodeType":"YulBlock","src":"5997:226:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6014:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6025:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6007:6:21"},"nodeType":"YulFunctionCall","src":"6007:21:21"},"nodeType":"YulExpressionStatement","src":"6007:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6048:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6059:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6044:3:21"},"nodeType":"YulFunctionCall","src":"6044:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6064:2:21","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6037:6:21"},"nodeType":"YulFunctionCall","src":"6037:30:21"},"nodeType":"YulExpressionStatement","src":"6037:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6087:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6098:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6083:3:21"},"nodeType":"YulFunctionCall","src":"6083:18:21"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"6103:34:21","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6076:6:21"},"nodeType":"YulFunctionCall","src":"6076:62:21"},"nodeType":"YulExpressionStatement","src":"6076:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6158:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6169:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6154:3:21"},"nodeType":"YulFunctionCall","src":"6154:18:21"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"6174:6:21","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6147:6:21"},"nodeType":"YulFunctionCall","src":"6147:34:21"},"nodeType":"YulExpressionStatement","src":"6147:34:21"},{"nodeType":"YulAssignment","src":"6190:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6202:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6213:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6198:3:21"},"nodeType":"YulFunctionCall","src":"6198:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6190:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5974:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5988:4:21","type":""}],"src":"5823:400:21"},{"body":{"nodeType":"YulBlock","src":"6402:224:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6419:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6430:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6412:6:21"},"nodeType":"YulFunctionCall","src":"6412:21:21"},"nodeType":"YulExpressionStatement","src":"6412:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6453:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6464:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6449:3:21"},"nodeType":"YulFunctionCall","src":"6449:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6469:2:21","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6442:6:21"},"nodeType":"YulFunctionCall","src":"6442:30:21"},"nodeType":"YulExpressionStatement","src":"6442:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6492:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6503:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6488:3:21"},"nodeType":"YulFunctionCall","src":"6488:18:21"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"6508:34:21","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6481:6:21"},"nodeType":"YulFunctionCall","src":"6481:62:21"},"nodeType":"YulExpressionStatement","src":"6481:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6563:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6574:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6559:3:21"},"nodeType":"YulFunctionCall","src":"6559:18:21"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"6579:4:21","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6552:6:21"},"nodeType":"YulFunctionCall","src":"6552:32:21"},"nodeType":"YulExpressionStatement","src":"6552:32:21"},{"nodeType":"YulAssignment","src":"6593:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6605:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6616:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6601:3:21"},"nodeType":"YulFunctionCall","src":"6601:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6593:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6379:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6393:4:21","type":""}],"src":"6228:398:21"},{"body":{"nodeType":"YulBlock","src":"6805:179:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6822:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6833:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6815:6:21"},"nodeType":"YulFunctionCall","src":"6815:21:21"},"nodeType":"YulExpressionStatement","src":"6815:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6856:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6867:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6852:3:21"},"nodeType":"YulFunctionCall","src":"6852:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"6872:2:21","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6845:6:21"},"nodeType":"YulFunctionCall","src":"6845:30:21"},"nodeType":"YulExpressionStatement","src":"6845:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6895:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6906:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6891:3:21"},"nodeType":"YulFunctionCall","src":"6891:18:21"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"6911:31:21","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6884:6:21"},"nodeType":"YulFunctionCall","src":"6884:59:21"},"nodeType":"YulExpressionStatement","src":"6884:59:21"},{"nodeType":"YulAssignment","src":"6952:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6964:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6975:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6960:3:21"},"nodeType":"YulFunctionCall","src":"6960:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6952:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6782:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6796:4:21","type":""}],"src":"6631:353:21"},{"body":{"nodeType":"YulBlock","src":"7163:227:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7180:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7191:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7173:6:21"},"nodeType":"YulFunctionCall","src":"7173:21:21"},"nodeType":"YulExpressionStatement","src":"7173:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7214:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7225:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7210:3:21"},"nodeType":"YulFunctionCall","src":"7210:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7230:2:21","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7203:6:21"},"nodeType":"YulFunctionCall","src":"7203:30:21"},"nodeType":"YulExpressionStatement","src":"7203:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7253:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7264:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7249:3:21"},"nodeType":"YulFunctionCall","src":"7249:18:21"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"7269:34:21","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7242:6:21"},"nodeType":"YulFunctionCall","src":"7242:62:21"},"nodeType":"YulExpressionStatement","src":"7242:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7324:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7335:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7320:3:21"},"nodeType":"YulFunctionCall","src":"7320:18:21"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"7340:7:21","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7313:6:21"},"nodeType":"YulFunctionCall","src":"7313:35:21"},"nodeType":"YulExpressionStatement","src":"7313:35:21"},{"nodeType":"YulAssignment","src":"7357:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7369:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7380:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7365:3:21"},"nodeType":"YulFunctionCall","src":"7365:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7357:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7140:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7154:4:21","type":""}],"src":"6989:401:21"},{"body":{"nodeType":"YulBlock","src":"7569:225:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7586:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7597:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7579:6:21"},"nodeType":"YulFunctionCall","src":"7579:21:21"},"nodeType":"YulExpressionStatement","src":"7579:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7620:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7631:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7616:3:21"},"nodeType":"YulFunctionCall","src":"7616:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"7636:2:21","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7609:6:21"},"nodeType":"YulFunctionCall","src":"7609:30:21"},"nodeType":"YulExpressionStatement","src":"7609:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7659:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7670:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7655:3:21"},"nodeType":"YulFunctionCall","src":"7655:18:21"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"7675:34:21","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7648:6:21"},"nodeType":"YulFunctionCall","src":"7648:62:21"},"nodeType":"YulExpressionStatement","src":"7648:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7730:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7741:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7726:3:21"},"nodeType":"YulFunctionCall","src":"7726:18:21"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"7746:5:21","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7719:6:21"},"nodeType":"YulFunctionCall","src":"7719:33:21"},"nodeType":"YulExpressionStatement","src":"7719:33:21"},{"nodeType":"YulAssignment","src":"7761:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7773:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7784:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7769:3:21"},"nodeType":"YulFunctionCall","src":"7769:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7761:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7546:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7560:4:21","type":""}],"src":"7395:399:21"},{"body":{"nodeType":"YulBlock","src":"7973:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7990:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8001:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7983:6:21"},"nodeType":"YulFunctionCall","src":"7983:21:21"},"nodeType":"YulExpressionStatement","src":"7983:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8024:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8035:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8020:3:21"},"nodeType":"YulFunctionCall","src":"8020:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8040:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8013:6:21"},"nodeType":"YulFunctionCall","src":"8013:30:21"},"nodeType":"YulExpressionStatement","src":"8013:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8063:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8074:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8059:3:21"},"nodeType":"YulFunctionCall","src":"8059:18:21"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"8079:34:21","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8052:6:21"},"nodeType":"YulFunctionCall","src":"8052:62:21"},"nodeType":"YulExpressionStatement","src":"8052:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8134:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8145:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8130:3:21"},"nodeType":"YulFunctionCall","src":"8130:18:21"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"8150:8:21","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8123:6:21"},"nodeType":"YulFunctionCall","src":"8123:36:21"},"nodeType":"YulExpressionStatement","src":"8123:36:21"},{"nodeType":"YulAssignment","src":"8168:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8180:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8191:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8176:3:21"},"nodeType":"YulFunctionCall","src":"8176:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8168:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7950:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7964:4:21","type":""}],"src":"7799:402:21"},{"body":{"nodeType":"YulBlock","src":"8380:233:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8397:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8408:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8390:6:21"},"nodeType":"YulFunctionCall","src":"8390:21:21"},"nodeType":"YulExpressionStatement","src":"8390:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8431:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8442:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:21"},"nodeType":"YulFunctionCall","src":"8427:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"8447:2:21","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8420:6:21"},"nodeType":"YulFunctionCall","src":"8420:30:21"},"nodeType":"YulExpressionStatement","src":"8420:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8470:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8481:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8466:3:21"},"nodeType":"YulFunctionCall","src":"8466:18:21"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"8486:34:21","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8459:6:21"},"nodeType":"YulFunctionCall","src":"8459:62:21"},"nodeType":"YulExpressionStatement","src":"8459:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8541:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8552:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8537:3:21"},"nodeType":"YulFunctionCall","src":"8537:18:21"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"8557:13:21","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8530:6:21"},"nodeType":"YulFunctionCall","src":"8530:41:21"},"nodeType":"YulExpressionStatement","src":"8530:41:21"},{"nodeType":"YulAssignment","src":"8580:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8592:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8603:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8588:3:21"},"nodeType":"YulFunctionCall","src":"8588:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8580:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8357:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8371:4:21","type":""}],"src":"8206:407:21"},{"body":{"nodeType":"YulBlock","src":"8674:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8691:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8694:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8684:6:21"},"nodeType":"YulFunctionCall","src":"8684:14:21"},"nodeType":"YulExpressionStatement","src":"8684:14:21"},{"nodeType":"YulAssignment","src":"8707:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8725:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8728:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8715:9:21"},"nodeType":"YulFunctionCall","src":"8715:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8707:4:21"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8657:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8665:4:21","type":""}],"src":"8618:121:21"},{"body":{"nodeType":"YulBlock","src":"8825:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"8858:425:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8872:11:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8882:1:21","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8876:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8903:2:21"},{"name":"array","nodeType":"YulIdentifier","src":"8907:5:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8896:6:21"},"nodeType":"YulFunctionCall","src":"8896:17:21"},"nodeType":"YulExpressionStatement","src":"8896:17:21"},{"nodeType":"YulVariableDeclaration","src":"8926:31:21","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8948:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"8952:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8938:9:21"},"nodeType":"YulFunctionCall","src":"8938:19:21"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"8930:4:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8970:57:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8993:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9003:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9010:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"9022:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9006:3:21"},"nodeType":"YulFunctionCall","src":"9006:19:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8999:3:21"},"nodeType":"YulFunctionCall","src":"8999:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8989:3:21"},"nodeType":"YulFunctionCall","src":"8989:38:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8974:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9064:23:21","statements":[{"nodeType":"YulAssignment","src":"9066:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"9081:4:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9066:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9046:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"9058:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9043:2:21"},"nodeType":"YulFunctionCall","src":"9043:20:21"},"nodeType":"YulIf","src":"9040:47:21"},{"nodeType":"YulVariableDeclaration","src":"9100:41:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9114:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9124:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"9131:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9136:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9127:3:21"},"nodeType":"YulFunctionCall","src":"9127:12:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9120:3:21"},"nodeType":"YulFunctionCall","src":"9120:20:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9110:3:21"},"nodeType":"YulFunctionCall","src":"9110:31:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9104:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9154:24:21","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"9167:11:21"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"9158:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9252:21:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9261:5:21"},{"name":"_1","nodeType":"YulIdentifier","src":"9268:2:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9254:6:21"},"nodeType":"YulFunctionCall","src":"9254:17:21"},"nodeType":"YulExpressionStatement","src":"9254:17:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9202:5:21"},{"name":"_2","nodeType":"YulIdentifier","src":"9209:2:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9199:2:21"},"nodeType":"YulFunctionCall","src":"9199:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9213:26:21","statements":[{"nodeType":"YulAssignment","src":"9215:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9228:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"9235:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9224:3:21"},"nodeType":"YulFunctionCall","src":"9224:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"9215:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"9195:3:21","statements":[]},"src":"9191:82:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8841:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8846:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8838:2:21"},"nodeType":"YulFunctionCall","src":"8838:11:21"},"nodeType":"YulIf","src":"8835:448:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8797:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"8804:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8809:10:21","type":""}],"src":"8744:545:21"},{"body":{"nodeType":"YulBlock","src":"9379:81:21","statements":[{"nodeType":"YulAssignment","src":"9389:65:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9404:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9422:1:21","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"9425:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9418:3:21"},"nodeType":"YulFunctionCall","src":"9418:11:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9435:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9431:3:21"},"nodeType":"YulFunctionCall","src":"9431:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9414:3:21"},"nodeType":"YulFunctionCall","src":"9414:24:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9410:3:21"},"nodeType":"YulFunctionCall","src":"9410:29:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9400:3:21"},"nodeType":"YulFunctionCall","src":"9400:40:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9446:1:21","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"9449:3:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9442:3:21"},"nodeType":"YulFunctionCall","src":"9442:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9397:2:21"},"nodeType":"YulFunctionCall","src":"9397:57:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"9389:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9356:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"9362:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"9370:4:21","type":""}],"src":"9294:166:21"},{"body":{"nodeType":"YulBlock","src":"9561:1256:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9571:24:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9591:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9585:5:21"},"nodeType":"YulFunctionCall","src":"9585:10:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9575:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9638:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9640:16:21"},"nodeType":"YulFunctionCall","src":"9640:18:21"},"nodeType":"YulExpressionStatement","src":"9640:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9610:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9618:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9607:2:21"},"nodeType":"YulFunctionCall","src":"9607:30:21"},"nodeType":"YulIf","src":"9604:56:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9713:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9751:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9745:5:21"},"nodeType":"YulFunctionCall","src":"9745:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9719:25:21"},"nodeType":"YulFunctionCall","src":"9719:38:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"9759:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"9669:43:21"},"nodeType":"YulFunctionCall","src":"9669:97:21"},"nodeType":"YulExpressionStatement","src":"9669:97:21"},{"nodeType":"YulVariableDeclaration","src":"9775:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9792:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"9779:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9802:23:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9821:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"9806:11:21","type":""}]},{"nodeType":"YulAssignment","src":"9834:24:21","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9847:11:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9834:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9904:656:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9918:35:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9937:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9949:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9945:3:21"},"nodeType":"YulFunctionCall","src":"9945:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9933:3:21"},"nodeType":"YulFunctionCall","src":"9933:20:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9922:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9966:49:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10010:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"9980:29:21"},"nodeType":"YulFunctionCall","src":"9980:35:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9970:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10028:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10037:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10032:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10115:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10140:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10158:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10163:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10154:3:21"},"nodeType":"YulFunctionCall","src":"10154:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10148:5:21"},"nodeType":"YulFunctionCall","src":"10148:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10133:6:21"},"nodeType":"YulFunctionCall","src":"10133:42:21"},"nodeType":"YulExpressionStatement","src":"10133:42:21"},{"nodeType":"YulAssignment","src":"10192:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10206:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10214:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10202:3:21"},"nodeType":"YulFunctionCall","src":"10202:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10192:6:21"}]},{"nodeType":"YulAssignment","src":"10233:40:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10250:9:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10261:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10246:3:21"},"nodeType":"YulFunctionCall","src":"10246:27:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10233:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10062:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"10065:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10059:2:21"},"nodeType":"YulFunctionCall","src":"10059:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10074:28:21","statements":[{"nodeType":"YulAssignment","src":"10076:24:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10085:1:21"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10088:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10081:3:21"},"nodeType":"YulFunctionCall","src":"10081:19:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10076:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"10055:3:21","statements":[]},"src":"10051:236:21"},{"body":{"nodeType":"YulBlock","src":"10335:166:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10353:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10380:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10385:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10376:3:21"},"nodeType":"YulFunctionCall","src":"10376:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10370:5:21"},"nodeType":"YulFunctionCall","src":"10370:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"10357:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10420:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10432:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10459:1:21","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"10462:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10455:3:21"},"nodeType":"YulFunctionCall","src":"10455:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"10471:3:21","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10451:3:21"},"nodeType":"YulFunctionCall","src":"10451:24:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10481:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10477:3:21"},"nodeType":"YulFunctionCall","src":"10477:6:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10447:3:21"},"nodeType":"YulFunctionCall","src":"10447:37:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10443:3:21"},"nodeType":"YulFunctionCall","src":"10443:42:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10428:3:21"},"nodeType":"YulFunctionCall","src":"10428:58:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10413:6:21"},"nodeType":"YulFunctionCall","src":"10413:74:21"},"nodeType":"YulExpressionStatement","src":"10413:74:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"10306:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"10315:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10303:2:21"},"nodeType":"YulFunctionCall","src":"10303:19:21"},"nodeType":"YulIf","src":"10300:201:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10521:4:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10535:1:21","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"10538:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10531:3:21"},"nodeType":"YulFunctionCall","src":"10531:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"10547:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10527:3:21"},"nodeType":"YulFunctionCall","src":"10527:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10514:6:21"},"nodeType":"YulFunctionCall","src":"10514:36:21"},"nodeType":"YulExpressionStatement","src":"10514:36:21"}]},"nodeType":"YulCase","src":"9897:663:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9902:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10577:234:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10591:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"10604:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10595:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10640:67:21","statements":[{"nodeType":"YulAssignment","src":"10658:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10677:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10682:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10673:3:21"},"nodeType":"YulFunctionCall","src":"10673:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10667:5:21"},"nodeType":"YulFunctionCall","src":"10667:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10658:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10621:6:21"},"nodeType":"YulIf","src":"10618:89:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10727:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10786:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"10793:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"10733:52:21"},"nodeType":"YulFunctionCall","src":"10733:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10720:6:21"},"nodeType":"YulFunctionCall","src":"10720:81:21"},"nodeType":"YulExpressionStatement","src":"10720:81:21"}]},"nodeType":"YulCase","src":"10569:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9877:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9885:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9874:2:21"},"nodeType":"YulFunctionCall","src":"9874:14:21"},"nodeType":"YulSwitch","src":"9867:944:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9546:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"9552:3:21","type":""}],"src":"9465:1352:21"},{"body":{"nodeType":"YulBlock","src":"10996:181:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11013:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11024:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11006:6:21"},"nodeType":"YulFunctionCall","src":"11006:21:21"},"nodeType":"YulExpressionStatement","src":"11006:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11047:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11058:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11043:3:21"},"nodeType":"YulFunctionCall","src":"11043:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"11063:2:21","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11036:6:21"},"nodeType":"YulFunctionCall","src":"11036:30:21"},"nodeType":"YulExpressionStatement","src":"11036:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11086:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11097:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11082:3:21"},"nodeType":"YulFunctionCall","src":"11082:18:21"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"11102:33:21","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11075:6:21"},"nodeType":"YulFunctionCall","src":"11075:61:21"},"nodeType":"YulExpressionStatement","src":"11075:61:21"},{"nodeType":"YulAssignment","src":"11145:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11157:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11168:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11153:3:21"},"nodeType":"YulFunctionCall","src":"11153:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11145:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10973:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10987:4:21","type":""}],"src":"10822:355:21"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_addresst_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := abi_decode_address(add(headStart, 192))\n        value7 := calldataload(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b411461016a578063a238d31114610172578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610980565b60405180910390f35b6100ea6100e53660046109ea565b610252565b60405190151581526020016100ce565b6035545b6040519081526020016100ce565b6100ea61011a366004610a14565b61026c565b604051601281526020016100ce565b6100ea61013c3660046109ea565b610290565b6100fe61014f366004610a50565b6001600160a01b031660009081526033602052604090205490565b6100c16102b2565b610185610180366004610b15565b6102c1565b005b6100ea6101953660046109ea565b6103e7565b6100ea6101a83660046109ea565b610462565b6100fe6101bb366004610bc8565b610470565b6060603680546101cf90610bfb565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610bfb565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b60003361026081858561049b565b60019150505b92915050565b60003361027a8582856105bf565b610285858585610639565b506001949350505050565b6000336102608185856102a38383610470565b6102ad9190610c35565b61049b565b6060603780546101cf90610bfb565b600054610100900460ff16158080156102e15750600054600160ff909116105b806102fb5750303b1580156102fb575060005460ff166001145b6103635760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610386576000805461ff0019166101001790555b61039689898989898989896107e4565b80156103dc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b600033816103f58286610470565b9050838110156104555760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161035a565b610285828686840361049b565b600033610260818585610639565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166104fd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161035a565b6001600160a01b03821661055e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161035a565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105cb8484610470565b9050600019811461063357818110156106265760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161035a565b610633848484840361049b565b50505050565b6001600160a01b03831661069d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161035a565b6001600160a01b0382166106ff5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161035a565b6001600160a01b038316600090815260336020526040902054818110156107775760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161035a565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107d79086815260200190565b60405180910390a3610633565b600054610100900460ff1661080b5760405162461bcd60e51b815260040161035a90610c56565b6108158888610832565b610823868686868686610872565b5050505050505050565b505050565b600054610100900460ff166108595760405162461bcd60e51b815260040161035a90610c56565b60366108658382610ce7565b50603761082d8282610ce7565b600054610100900460ff166108995760405162461bcd60e51b815260040161035a90610c56565b6108a386866108bf565b6108ad84846108bf565b6108b782826108bf565b505050505050565b6001600160a01b0382166109155760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161035a565b80603560008282546109279190610c35565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156109ad57858101830151858201604001528201610991565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109e557600080fd5b919050565b600080604083850312156109fd57600080fd5b610a06836109ce565b946020939093013593505050565b600080600060608486031215610a2957600080fd5b610a32846109ce565b9250610a40602085016109ce565b9150604084013590509250925092565b600060208284031215610a6257600080fd5b610a6b826109ce565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a9957600080fd5b813567ffffffffffffffff80821115610ab457610ab4610a72565b604051601f8301601f19908116603f01168101908282118183101715610adc57610adc610a72565b81604052838152866020858801011115610af557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080610100898b031215610b3257600080fd5b883567ffffffffffffffff80821115610b4a57600080fd5b610b568c838d01610a88565b995060208b0135915080821115610b6c57600080fd5b50610b798b828c01610a88565b975050610b8860408a016109ce565b955060608901359450610b9d60808a016109ce565b935060a08901359250610bb260c08a016109ce565b915060e089013590509295985092959890939650565b60008060408385031215610bdb57600080fd5b610be4836109ce565b9150610bf2602084016109ce565b90509250929050565b600181811c90821680610c0f57607f821691505b602082108103610c2f57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026657634e487b7160e01b600052601160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f82111561082d57600081815260208120601f850160051c81016020861015610cc85750805b601f850160051c820191505b818110156108b757828155600101610cd4565b815167ffffffffffffffff811115610d0157610d01610a72565b610d1581610d0f8454610bfb565b84610ca1565b602080601f831160018114610d4a5760008415610d325750858301515b600019600386901b1c1916600185901b1785556108b7565b600085815260208120601f198616915b82811015610d7957888601518255948401946001909101908401610d5a565b5085821015610d975787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220adecc981f9a06c521af1817f233c7a66a8db41805e5342eceabb46be10491c3a64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xA238D311 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0xBFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0xBFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x248 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x248 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27A DUP6 DUP3 DUP6 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x285 DUP6 DUP6 DUP6 PUSH2 0x639 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x2A3 DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x2E1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x2FB JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x396 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x7E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x3F5 DUP3 DUP7 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH2 0x285 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x49B JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB DUP5 DUP5 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x633 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35A JUMP JUMPDEST PUSH2 0x633 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x49B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7D7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x815 DUP9 DUP9 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x823 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x872 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x36 PUSH2 0x865 DUP4 DUP3 PUSH2 0xCE7 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x82D DUP3 DUP3 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x8A3 DUP7 DUP7 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x8AD DUP5 DUP5 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x8B7 DUP3 DUP3 PUSH2 0x8BF JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35A JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x927 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9AD JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x991 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA06 DUP4 PUSH2 0x9CE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA32 DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP3 POP PUSH2 0xA40 PUSH1 0x20 DUP6 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6B DUP3 PUSH2 0x9CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAB4 JUMPI PUSH2 0xAB4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xADC JUMPI PUSH2 0xADC PUSH2 0xA72 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xB32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB56 DUP13 DUP4 DUP14 ADD PUSH2 0xA88 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xB6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB79 DUP12 DUP3 DUP13 ADD PUSH2 0xA88 JUMP JUMPDEST SWAP8 POP POP PUSH2 0xB88 PUSH1 0x40 DUP11 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH2 0xB9D PUSH1 0x80 DUP11 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH2 0xBB2 PUSH1 0xC0 DUP11 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE4 DUP4 PUSH2 0x9CE JUMP JUMPDEST SWAP2 POP PUSH2 0xBF2 PUSH1 0x20 DUP5 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC0F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC2F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xCC8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B7 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCD4 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD01 PUSH2 0xA72 JUMP JUMPDEST PUSH2 0xD15 DUP2 PUSH2 0xD0F DUP5 SLOAD PUSH2 0xBFB JUMP JUMPDEST DUP5 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD4A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xD32 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD79 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xD5A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xD97 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xEC 0xC9 DUP2 0xF9 LOG0 PUSH13 0x521AF1817F233C7A66A8DB4180 0x5E MSTORE8 TIMESTAMP 0xEC 0xEA 0xBB CHAINID 0xBE LT 0x49 SHR GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"262:1664:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4768:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:21;;1162:22;1144:41;;1132:2;1117:18;4768:197:1;1004:187:21;3579:106:1;3666:12;;3579:106;;;1342:25:21;;;1330:2;1315:18;3579:106:1;1196:177:21;5527:286:1;;;;;;:::i;:::-;;:::i;3428:91::-;;;3510:2;1853:36:21;;1841:2;1826:18;3428:91:1;1711:184:21;6208:234:1;;;;;;:::i;:::-;;:::i;3743:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3843:18:1;3817:7;3843:18;;;:9;:18;;;;;;;3743:125;2702:102;;;:::i;330:417:18:-;;;;;;:::i;:::-;;:::i;:::-;;6929:427:1;;;;;;:::i;:::-;;:::i;4064:189::-;;;;;;:::i;:::-;;:::i;4311:149::-;;;;;;:::i;:::-;;:::i;2491:98::-;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;929:10:5;4905:32:1;929:10:5;4921:7:1;4930:6;4905:8;:32::i;:::-;4954:4;4947:11;;;4768:197;;;;;:::o;5527:286::-;5654:4;929:10:5;5710:38:1;5726:4;929:10:5;5741:6:1;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;-1:-1:-1;5802:4:1;;5527:286;-1:-1:-1;;;;5527:286:1:o;6208:234::-;6296:4;929:10:5;6350:64:1;929:10:5;6366:7:1;6403:10;6375:25;929:10:5;6366:7:1;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;2702:102::-;2758:13;2790:7;2783:14;;;;;:::i;330:417:18:-;3268:19:0;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:0;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:0;1476:19:4;:23;;;3376:66:0;;-1:-1:-1;3425:12:0;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:0;;5005:2:21;3314:201:0;;;4987:21:21;5044:2;5024:18;;;5017:30;5083:34;5063:18;;;5056:62;-1:-1:-1;;;5134:18:21;;;5127:44;5188:19;;3314:201:0;;;;;;;;;3525:12;:16;;-1:-1:-1;;3525:16:0;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:0;;;;;3551:65;626:114:18::1;651:5;658:7;667:9;678:15;695:7;704:13;719:6;727:12;626:24;:114::i;:::-;3640:14:0::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:0;;;3710:14;;-1:-1:-1;1853:36:21;;3710:14:0;;1841:2:21;1826:18;3710:14:0;;;;;;;3636:99;3258:483;330:417:18;;;;;;;;:::o;6929:427:1:-;7022:4;929:10:5;7022:4:1;7103:25;929:10:5;7120:7:1;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;-1:-1:-1;;;7138:85:1;;5619:2:21;7138:85:1;;;5601:21:21;5658:2;5638:18;;;5631:30;5697:34;5677:18;;;5670:62;-1:-1:-1;;;5748:18:21;;;5741:35;5793:19;;7138:85:1;5417:401:21;7138:85:1;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;4064:189::-;4143:4;929:10:5;4197:28:1;929:10:5;4214:2:1;4218:6;4197:9;:28::i;4311:149::-;-1:-1:-1;;;;;4426:18:1;;;4400:7;4426:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4311:149::o;10841:370::-;-1:-1:-1;;;;;10972:19:1;;10964:68;;;;-1:-1:-1;;;10964:68:1;;6025:2:21;10964:68:1;;;6007:21:21;6064:2;6044:18;;;6037:30;6103:34;6083:18;;;6076:62;-1:-1:-1;;;6154:18:21;;;6147:34;6198:19;;10964:68:1;5823:400:21;10964:68:1;-1:-1:-1;;;;;11050:21:1;;11042:68;;;;-1:-1:-1;;;11042:68:1;;6430:2:21;11042:68:1;;;6412:21:21;6469:2;6449:18;;;6442:30;6508:34;6488:18;;;6481:62;-1:-1:-1;;;6559:18:21;;;6552:32;6601:19;;11042:68:1;6228:398:21;11042:68:1;-1:-1:-1;;;;;11121:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11172:32;;1342:25:21;;;11172:32:1;;1315:18:21;11172:32:1;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;-1:-1:-1;;11688:16:1;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;-1:-1:-1;;;11741:68:1;;6833:2:21;11741:68:1;;;6815:21:21;6872:2;6852:18;;;6845:30;6911:31;6891:18;;;6884:59;6960:18;;11741:68:1;6631:353:21;11741:68:1;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11612:321;11492:441;;;:::o;7810:818::-;-1:-1:-1;;;;;7936:18:1;;7928:68;;;;-1:-1:-1;;;7928:68:1;;7191:2:21;7928:68:1;;;7173:21:21;7230:2;7210:18;;;7203:30;7269:34;7249:18;;;7242:62;-1:-1:-1;;;7320:18:21;;;7313:35;7365:19;;7928:68:1;6989:401:21;7928:68:1;-1:-1:-1;;;;;8014:16:1;;8006:64;;;;-1:-1:-1;;;8006:64:1;;7597:2:21;8006:64:1;;;7579:21:21;7636:2;7616:18;;;7609:30;7675:34;7655:18;;;7648:62;-1:-1:-1;;;7726:18:21;;;7719:33;7769:19;;8006:64:1;7395:399:21;8006:64:1;-1:-1:-1;;;;;8152:15:1;;8130:19;8152:15;;;:9;:15;;;;;;8185:21;;;;8177:72;;;;-1:-1:-1;;;8177:72:1;;8001:2:21;8177:72:1;;;7983:21:21;8040:2;8020:18;;;8013:30;8079:34;8059:18;;;8052:62;-1:-1:-1;;;8130:18:21;;;8123:36;8176:19;;8177:72:1;7799:402:21;8177:72:1;-1:-1:-1;;;;;8283:15:1;;;;;;;:9;:15;;;;;;8301:20;;;8283:38;;8498:13;;;;;;;;;;:23;;;;;;8547:26;;;;;;8315:6;1342:25:21;;1330:2;1315:18;;1196:177;8547:26:1;;;;;;;;8584:37;12517:121;1073:472:18;5363:13:0;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:0;;;;;;;:::i;:::-;1382:38:18::1;1405:5;1412:7;1382:22;:38::i;:::-;1430:108;1465:9;1476:15;1493:7;1502:13;1517:6;1525:12;1430:34;:108::i;:::-;1073:472:::0;;;;;;;;:::o;12517:121:1:-;;;;:::o;2267:159::-;5363:13:0;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:0;;;;;;;:::i;:::-;2379:5:1::1;:13;2387:5:::0;2379;:13:::1;:::i;:::-;-1:-1:-1::0;2402:7:1::1;:17;2412:7:::0;2402;:17:::1;:::i;1551:373:18:-:0;5363:13:0;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:0;;;;;;;:::i;:::-;1808:33:18::1;1814:9;1825:15;1808:5;:33::i;:::-;1851:29;1857:7;1866:13;1851:5;:29::i;:::-;1890:27;1896:6;1904:12;1890:5;:27::i;:::-;1551:373:::0;;;;;;:::o;8904:535:1:-;-1:-1:-1;;;;;8987:21:1;;8979:65;;;;-1:-1:-1;;;8979:65:1;;11024:2:21;8979:65:1;;;11006:21:21;11063:2;11043:18;;;11036:30;11102:33;11082:18;;;11075:61;11153:18;;8979:65:1;10822:355:21;8979:65:1;9131:6;9115:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9283:18:1;;;;;;:9;:18;;;;;;;;:28;;;;;;9336:37;1342:25:21;;;9336:37:1;;1315:18:21;9336:37:1;;;;;;;8904:535;;:::o;14:548:21:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:21;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:21:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:21:o;2091:127::-;2152:10;2147:3;2143:20;2140:1;2133:31;2183:4;2180:1;2173:15;2207:4;2204:1;2197:15;2223:719;2266:5;2319:3;2312:4;2304:6;2300:17;2296:27;2286:55;;2337:1;2334;2327:12;2286:55;2373:6;2360:20;2399:18;2436:2;2432;2429:10;2426:36;;;2442:18;;:::i;:::-;2517:2;2511:9;2485:2;2571:13;;-1:-1:-1;;2567:22:21;;;2591:2;2563:31;2559:40;2547:53;;;2615:18;;;2635:22;;;2612:46;2609:72;;;2661:18;;:::i;:::-;2701:10;2697:2;2690:22;2736:2;2728:6;2721:18;2782:3;2775:4;2770:2;2762:6;2758:15;2754:26;2751:35;2748:55;;;2799:1;2796;2789:12;2748:55;2863:2;2856:4;2848:6;2844:17;2837:4;2829:6;2825:17;2812:54;2910:1;2903:4;2898:2;2890:6;2886:15;2882:26;2875:37;2930:6;2921:15;;;;;;2223:719;;;;:::o;2947:974::-;3089:6;3097;3105;3113;3121;3129;3137;3145;3198:3;3186:9;3177:7;3173:23;3169:33;3166:53;;;3215:1;3212;3205:12;3166:53;3255:9;3242:23;3284:18;3325:2;3317:6;3314:14;3311:34;;;3341:1;3338;3331:12;3311:34;3364:50;3406:7;3397:6;3386:9;3382:22;3364:50;:::i;:::-;3354:60;;3467:2;3456:9;3452:18;3439:32;3423:48;;3496:2;3486:8;3483:16;3480:36;;;3512:1;3509;3502:12;3480:36;;3535:52;3579:7;3568:8;3557:9;3553:24;3535:52;:::i;:::-;3525:62;;;3606:38;3640:2;3629:9;3625:18;3606:38;:::i;:::-;3596:48;;3691:2;3680:9;3676:18;3663:32;3653:42;;3714:39;3748:3;3737:9;3733:19;3714:39;:::i;:::-;3704:49;;3800:3;3789:9;3785:19;3772:33;3762:43;;3824:39;3858:3;3847:9;3843:19;3824:39;:::i;:::-;3814:49;;3910:3;3899:9;3895:19;3882:33;3872:43;;2947:974;;;;;;;;;;;:::o;3926:260::-;3994:6;4002;4055:2;4043:9;4034:7;4030:23;4026:32;4023:52;;;4071:1;4068;4061:12;4023:52;4094:29;4113:9;4094:29;:::i;:::-;4084:39;;4142:38;4176:2;4165:9;4161:18;4142:38;:::i;:::-;4132:48;;3926:260;;;;;:::o;4191:380::-;4270:1;4266:12;;;;4313;;;4334:61;;4388:4;4380:6;4376:17;4366:27;;4334:61;4441:2;4433:6;4430:14;4410:18;4407:38;4404:161;;4487:10;4482:3;4478:20;4475:1;4468:31;4522:4;4519:1;4512:15;4550:4;4547:1;4540:15;4404:161;;4191:380;;;:::o;4576:222::-;4641:9;;;4662:10;;;4659:133;;;4714:10;4709:3;4705:20;4702:1;4695:31;4749:4;4746:1;4739:15;4777:4;4774:1;4767:15;8206:407;8408:2;8390:21;;;8447:2;8427:18;;;8420:30;8486:34;8481:2;8466:18;;8459:62;-1:-1:-1;;;8552:2:21;8537:18;;8530:41;8603:3;8588:19;;8206:407::o;8744:545::-;8846:2;8841:3;8838:11;8835:448;;;8882:1;8907:5;8903:2;8896:17;8952:4;8948:2;8938:19;9022:2;9010:10;9006:19;9003:1;8999:27;8993:4;8989:38;9058:4;9046:10;9043:20;9040:47;;;-1:-1:-1;9081:4:21;9040:47;9136:2;9131:3;9127:12;9124:1;9120:20;9114:4;9110:31;9100:41;;9191:82;9209:2;9202:5;9199:13;9191:82;;;9254:17;;;9235:1;9224:13;9191:82;;9465:1352;9591:3;9585:10;9618:18;9610:6;9607:30;9604:56;;;9640:18;;:::i;:::-;9669:97;9759:6;9719:38;9751:4;9745:11;9719:38;:::i;:::-;9713:4;9669:97;:::i;:::-;9821:4;;9885:2;9874:14;;9902:1;9897:663;;;;10604:1;10621:6;10618:89;;;-1:-1:-1;10673:19:21;;;10667:26;10618:89;-1:-1:-1;;9422:1:21;9418:11;;;9414:24;9410:29;9400:40;9446:1;9442:11;;;9397:57;10720:81;;9867:944;;9897:663;8691:1;8684:14;;;8728:4;8715:18;;-1:-1:-1;;9933:20:21;;;10051:236;10065:7;10062:1;10059:14;10051:236;;;10154:19;;;10148:26;10133:42;;10246:27;;;;10214:1;10202:14;;;;10081:19;;10051:236;;;10055:3;10315:6;10306:7;10303:19;10300:201;;;10376:19;;;10370:26;-1:-1:-1;;10459:1:21;10455:14;;;10471:3;10451:24;10447:37;10443:42;10428:58;10413:74;;10300:201;-1:-1:-1;;;;;10547:1:21;10531:14;;;10527:22;10514:36;;-1:-1:-1;9465:1352:21:o"},"gasEstimates":{"creation":{"codeDepositCost":"709800","executionCost":"741","totalCost":"710541"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24628","balanceOf(address)":"2537","decimals()":"266","decreaseAllowance(address,uint256)":"27016","increaseAllowance(address,uint256)":"infinite","initialize(string,string,address,uint256,address,uint256,address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2326","transfer(address,uint256)":"51147","transferFrom(address,address,uint256)":"infinite"},"internal":{"__ProjectTokenERC20_init(string memory,string memory,address,uint256,address,uint256,address,uint256)":"infinite","__ProjectTokenERC20_init_unchained(address,uint256,address,uint256,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","initialize(string,string,address,uint256,address,uint256,address,uint256)":"a238d311","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_fsociety\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fsocietySupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_authorSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_other\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_otherSupply\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/ProjectTokenERC20.sol\":\"ProjectTokenERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/tokens/ProjectTokenERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { ERC20Upgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\nimport { Initializable } from '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\n\\ncontract ProjectTokenERC20 is Initializable, ERC20Upgradeable {\\n    function initialize(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsociety,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        address _other,\\n        uint256 _otherSupply\\n    ) public virtual initializer {\\n        __ProjectTokenERC20_init(_name, _symbol, _fsociety, _fsocietySupply, _author, _authorSupply, _other, _otherSupply);\\n    }\\n    \\n    /**\\n     * @dev Mint supplies\\n     * - `fsocietySupply` amount of token and transfers them to `fsociety` contract.\\n     * - `authorSupply` amount of token and transfers them to `author`.\\n     * - `otherSupply` amount of token and transfers them to `otherContract`.\\n     *\\n     * See {ERC20-constructor}.\\n     */\\n    function __ProjectTokenERC20_init(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsociety,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        address _other,\\n        uint256 _otherSupply\\n    ) internal onlyInitializing {\\n        __ERC20_init_unchained(_name, _symbol);\\n        __ProjectTokenERC20_init_unchained(_fsociety, _fsocietySupply, _author, _authorSupply, _other, _otherSupply);\\n    }\\n\\n    function __ProjectTokenERC20_init_unchained(\\n        address _fsociety,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        address _other,\\n        uint256 _otherSupply\\n    ) internal onlyInitializing {\\n        _mint(_fsociety, _fsocietySupply);\\n        _mint(_author, _authorSupply);\\n        _mint(_other, _otherSupply);\\n    }\\n}\\n\",\"keccak256\":\"0xd82d22e9dd45fa586f35f08d0e9974ce9b3efd5bfdadf32ee8b41c613bdc6c98\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":6,"contract":"contracts/tokens/ProjectTokenERC20.sol:ProjectTokenERC20","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":9,"contract":"contracts/tokens/ProjectTokenERC20.sol:ProjectTokenERC20","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1208,"contract":"contracts/tokens/ProjectTokenERC20.sol:ProjectTokenERC20","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":187,"contract":"contracts/tokens/ProjectTokenERC20.sol:ProjectTokenERC20","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":193,"contract":"contracts/tokens/ProjectTokenERC20.sol:ProjectTokenERC20","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":195,"contract":"contracts/tokens/ProjectTokenERC20.sol:ProjectTokenERC20","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":197,"contract":"contracts/tokens/ProjectTokenERC20.sol:ProjectTokenERC20","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":199,"contract":"contracts/tokens/ProjectTokenERC20.sol:ProjectTokenERC20","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":779,"contract":"contracts/tokens/ProjectTokenERC20.sol:ProjectTokenERC20","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/tokens/ProjectTokenFactory.sol":{"ProjectTokenFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"}],"name":"TokenCreated","type":"event"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_fsociety","type":"address"},{"internalType":"uint256","name":"_fsocietySupply","type":"uint256"},{"internalType":"address","name":"_author","type":"address"},{"internalType":"uint256","name":"_authorSupply","type":"uint256"},{"internalType":"uint256","name":"_otherSupply","type":"uint256"}],"name":"createToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokens","outputs":[{"internalType":"contract IERC20MetadataUpgradeable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1233":{"entryPoint":null,"id":1233,"parameterSlots":0,"returnSlots":0},"@_3312":{"entryPoint":null,"id":3312,"parameterSlots":0,"returnSlots":0},"@_msgSender_2398":{"entryPoint":null,"id":2398,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1321":{"entryPoint":84,"id":1321,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5061001a33610054565b604051610026906100a4565b604051809103906000f080158015610042573d6000803e3d6000fd5b506001600160a01b03166080526100b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610dfd8061071283390190565b6080516106476100cb600039600060f301526106476000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634b6423d61461005c578063715018a61461008b5780638da5cb5b14610095578063e4860339146100a6578063f2fde38b146100cf575b600080fd5b61006f61006a366004610460565b6100e2565b6040516001600160a01b03909116815260200160405180910390f35b6100936101cd565b005b6000546001600160a01b031661006f565b61006f6100b4366004610502565b6001602052600090815260409020546001600160a01b031681565b6100936100dd366004610502565b6101e1565b60006100ec61025f565b60006101177f00000000000000000000000000000000000000000000000000000000000000006102b9565b60405163a238d31160e01b81529091506001600160a01b0382169063a238d31190610154908c908c908c908c908c908c9033908d9060040161056a565b600060405180830381600087803b15801561016e57600080fd5b505af1158015610182573d6000803e3d6000fd5b505050507fffc04f682c7b287e4b552dacd4b833d7c33dc0549cd6da84388408e4830c0562818a8a6040516101b9939291906105d1565b60405180910390a198975050505050505050565b6101d561025f565b6101df6000610356565b565b6101e961025f565b6001600160a01b0381166102535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61025c81610356565b50565b6000546001600160a01b031633146101df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024a565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166103515760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161024a565b919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126103cd57600080fd5b813567ffffffffffffffff808211156103e8576103e86103a6565b604051601f8301601f19908116603f01168101908282118183101715610410576104106103a6565b8160405283815286602085880101111561042957600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b038116811461035157600080fd5b600080600080600080600060e0888a03121561047b57600080fd5b873567ffffffffffffffff8082111561049357600080fd5b61049f8b838c016103bc565b985060208a01359150808211156104b557600080fd5b506104c28a828b016103bc565b9650506104d160408901610449565b9450606088013593506104e660808901610449565b925060a0880135915060c0880135905092959891949750929550565b60006020828403121561051457600080fd5b61051d82610449565b9392505050565b6000815180845260005b8181101561054a5760208185018101518683018201520161052e565b506000602082860101526020601f19601f83011685010191505092915050565b600061010080835261057e8184018c610524565b90508281036020840152610592818b610524565b6001600160a01b03998a16604085015260608401989098525050938616608085015260a084019290925290931660c082015260e0019190915292915050565b6001600160a01b03841681526060602082018190526000906105f590830185610524565b82810360408401526106078185610524565b969550505050505056fea2646970667358221220bb5924244195a0a5d2ebe26b3412d7ad7ecae949954a027b037250b1313e5d2864736f6c63430008110033608060405234801561001057600080fd5b50610ddd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014157806395d89b411461016a578063a238d31114610172578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101c0565b6040516100ce9190610980565b60405180910390f35b6100ea6100e53660046109ea565b610252565b60405190151581526020016100ce565b6035545b6040519081526020016100ce565b6100ea61011a366004610a14565b61026c565b604051601281526020016100ce565b6100ea61013c3660046109ea565b610290565b6100fe61014f366004610a50565b6001600160a01b031660009081526033602052604090205490565b6100c16102b2565b610185610180366004610b15565b6102c1565b005b6100ea6101953660046109ea565b6103e7565b6100ea6101a83660046109ea565b610462565b6100fe6101bb366004610bc8565b610470565b6060603680546101cf90610bfb565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610bfb565b80156102485780601f1061021d57610100808354040283529160200191610248565b820191906000526020600020905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b60003361026081858561049b565b60019150505b92915050565b60003361027a8582856105bf565b610285858585610639565b506001949350505050565b6000336102608185856102a38383610470565b6102ad9190610c35565b61049b565b6060603780546101cf90610bfb565b600054610100900460ff16158080156102e15750600054600160ff909116105b806102fb5750303b1580156102fb575060005460ff166001145b6103635760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610386576000805461ff0019166101001790555b61039689898989898989896107e4565b80156103dc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b600033816103f58286610470565b9050838110156104555760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161035a565b610285828686840361049b565b600033610260818585610639565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166104fd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161035a565b6001600160a01b03821661055e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161035a565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105cb8484610470565b9050600019811461063357818110156106265760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161035a565b610633848484840361049b565b50505050565b6001600160a01b03831661069d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161035a565b6001600160a01b0382166106ff5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161035a565b6001600160a01b038316600090815260336020526040902054818110156107775760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161035a565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107d79086815260200190565b60405180910390a3610633565b600054610100900460ff1661080b5760405162461bcd60e51b815260040161035a90610c56565b6108158888610832565b610823868686868686610872565b5050505050505050565b505050565b600054610100900460ff166108595760405162461bcd60e51b815260040161035a90610c56565b60366108658382610ce7565b50603761082d8282610ce7565b600054610100900460ff166108995760405162461bcd60e51b815260040161035a90610c56565b6108a386866108bf565b6108ad84846108bf565b6108b782826108bf565b505050505050565b6001600160a01b0382166109155760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161035a565b80603560008282546109279190610c35565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156109ad57858101830151858201604001528201610991565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109e557600080fd5b919050565b600080604083850312156109fd57600080fd5b610a06836109ce565b946020939093013593505050565b600080600060608486031215610a2957600080fd5b610a32846109ce565b9250610a40602085016109ce565b9150604084013590509250925092565b600060208284031215610a6257600080fd5b610a6b826109ce565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a9957600080fd5b813567ffffffffffffffff80821115610ab457610ab4610a72565b604051601f8301601f19908116603f01168101908282118183101715610adc57610adc610a72565b81604052838152866020858801011115610af557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080610100898b031215610b3257600080fd5b883567ffffffffffffffff80821115610b4a57600080fd5b610b568c838d01610a88565b995060208b0135915080821115610b6c57600080fd5b50610b798b828c01610a88565b975050610b8860408a016109ce565b955060608901359450610b9d60808a016109ce565b935060a08901359250610bb260c08a016109ce565b915060e089013590509295985092959890939650565b60008060408385031215610bdb57600080fd5b610be4836109ce565b9150610bf2602084016109ce565b90509250929050565b600181811c90821680610c0f57607f821691505b602082108103610c2f57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026657634e487b7160e01b600052601160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f82111561082d57600081815260208120601f850160051c81016020861015610cc85750805b601f850160051c820191505b818110156108b757828155600101610cd4565b815167ffffffffffffffff811115610d0157610d01610a72565b610d1581610d0f8454610bfb565b84610ca1565b602080601f831160018114610d4a5760008415610d325750858301515b600019600386901b1c1916600185901b1785556108b7565b600085815260208120601f198616915b82811015610d7957888601518255948401946001909101908401610d5a565b5085821015610d975787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220adecc981f9a06c521af1817f233c7a66a8db41805e5342eceabb46be10491c3a64736f6c63430008110033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26 SWAP1 PUSH2 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x42 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xDFD DUP1 PUSH2 0x712 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x647 PUSH2 0xCB PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xF3 ADD MSTORE PUSH2 0x647 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B6423D6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xE4860339 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x460 JUMP JUMPDEST PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x1CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F JUMP JUMPDEST PUSH2 0x6F PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x93 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 PUSH32 0x0 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA238D311 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA238D311 SWAP1 PUSH2 0x154 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 CALLER SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x182 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xFFC04F682C7B287E4B552DACD4B833D7C33DC0549CD6DA84388408E4830C0562 DUP2 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x25F JUMP JUMPDEST PUSH2 0x1DF PUSH1 0x0 PUSH2 0x356 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x25F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP2 PUSH2 0x356 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x24A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x24A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3E8 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x410 JUMPI PUSH2 0x410 PUSH2 0x3A6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49F DUP12 DUP4 DUP13 ADD PUSH2 0x3BC JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C2 DUP11 DUP3 DUP12 ADD PUSH2 0x3BC JUMP JUMPDEST SWAP7 POP POP PUSH2 0x4D1 PUSH1 0x40 DUP10 ADD PUSH2 0x449 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x4E6 PUSH1 0x80 DUP10 ADD PUSH2 0x449 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51D DUP3 PUSH2 0x449 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x54A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x52E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x57E DUP2 DUP5 ADD DUP13 PUSH2 0x524 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x592 DUP2 DUP12 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP SWAP4 DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x5F5 SWAP1 DUP4 ADD DUP6 PUSH2 0x524 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x607 DUP2 DUP6 PUSH2 0x524 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MSIZE 0x24 0x24 COINBASE SWAP6 LOG0 0xA5 0xD2 0xEB 0xE2 PUSH12 0x3412D7AD7ECAE949954A027B SUB PUSH19 0x50B1313E5D2864736F6C634300081100336080 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDDD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xA238D311 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x12E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xB15 JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0xBFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0xBFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x248 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x248 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x49B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x27A DUP6 DUP3 DUP6 PUSH2 0x5BF JUMP JUMPDEST PUSH2 0x285 DUP6 DUP6 DUP6 PUSH2 0x639 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x2A3 DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x2E1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x2FB JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FB JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x363 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x396 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 PUSH2 0x7E4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x3F5 DUP3 DUP7 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH2 0x285 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x49B JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x260 DUP2 DUP6 DUP6 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB DUP5 DUP5 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x633 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35A JUMP JUMPDEST PUSH2 0x633 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x49B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7D7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x815 DUP9 DUP9 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x823 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x872 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x36 PUSH2 0x865 DUP4 DUP3 PUSH2 0xCE7 JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0x82D DUP3 DUP3 PUSH2 0xCE7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35A SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x8A3 DUP7 DUP7 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x8AD DUP5 DUP5 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x8B7 DUP3 DUP3 PUSH2 0x8BF JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35A JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x927 SWAP2 SWAP1 PUSH2 0xC35 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9AD JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x991 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA06 DUP4 PUSH2 0x9CE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA32 DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP3 POP PUSH2 0xA40 PUSH1 0x20 DUP6 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6B DUP3 PUSH2 0x9CE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAB4 JUMPI PUSH2 0xAB4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xADC JUMPI PUSH2 0xADC PUSH2 0xA72 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xB32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB56 DUP13 DUP4 DUP14 ADD PUSH2 0xA88 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xB6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB79 DUP12 DUP3 DUP13 ADD PUSH2 0xA88 JUMP JUMPDEST SWAP8 POP POP PUSH2 0xB88 PUSH1 0x40 DUP11 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH2 0xB9D PUSH1 0x80 DUP11 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH2 0xBB2 PUSH1 0xC0 DUP11 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP10 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE4 DUP4 PUSH2 0x9CE JUMP JUMPDEST SWAP2 POP PUSH2 0xBF2 PUSH1 0x20 DUP5 ADD PUSH2 0x9CE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC0F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC2F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xCC8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B7 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCD4 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD01 JUMPI PUSH2 0xD01 PUSH2 0xA72 JUMP JUMPDEST PUSH2 0xD15 DUP2 PUSH2 0xD0F DUP5 SLOAD PUSH2 0xBFB JUMP JUMPDEST DUP5 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD4A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xD32 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD79 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xD5A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xD97 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xEC 0xC9 DUP2 0xF9 LOG0 PUSH13 0x521AF1817F233C7A66A8DB4180 0x5E MSTORE8 TIMESTAMP 0xEC 0xEA 0xBB CHAINID 0xBE LT 0x49 SHR GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"538:860:19:-:0;;;783:71;;;;;;;;;-1:-1:-1;936:32:6;719:10:12;936:18:6;:32::i;:::-;823:23:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;807:40:19;;;538:860;;2433:187:6;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:6;;;-1:-1:-1;;;;;;2541:17:6;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;538:860:19:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_1264":{"entryPoint":607,"id":1264,"parameterSlots":0,"returnSlots":0},"@_msgSender_2398":{"entryPoint":null,"id":2398,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1321":{"entryPoint":854,"id":1321,"parameterSlots":1,"returnSlots":0},"@clone_1345":{"entryPoint":697,"id":1345,"parameterSlots":1,"returnSlots":1},"@createToken_3364":{"entryPoint":226,"id":3364,"parameterSlots":7,"returnSlots":1},"@owner_1250":{"entryPoint":null,"id":1250,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_1278":{"entryPoint":461,"id":1278,"parameterSlots":0,"returnSlots":0},"@tokens_3290":{"entryPoint":null,"id":3290,"parameterSlots":0,"returnSlots":0},"@transferOwnership_1301":{"entryPoint":481,"id":1301,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":1097,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_addresst_uint256t_uint256":{"entryPoint":1120,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_string":{"entryPoint":1316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1489,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20MetadataUpgradeable_$883__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256__fromStack_reversed":{"entryPoint":1386,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":934,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5526:21","statements":[{"nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:21","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:21","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:21","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:21"},"nodeType":"YulFunctionCall","src":"66:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:21"},"nodeType":"YulFunctionCall","src":"56:31:21"},"nodeType":"YulExpressionStatement","src":"56:31:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:21"},"nodeType":"YulFunctionCall","src":"96:15:21"},"nodeType":"YulExpressionStatement","src":"96:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:21"},"nodeType":"YulFunctionCall","src":"120:15:21"},"nodeType":"YulExpressionStatement","src":"120:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:21"},{"body":{"nodeType":"YulBlock","src":"199:666:21","statements":[{"body":{"nodeType":"YulBlock","src":"248:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"257:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"260:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"250:6:21"},"nodeType":"YulFunctionCall","src":"250:12:21"},"nodeType":"YulExpressionStatement","src":"250:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"227:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"223:3:21"},"nodeType":"YulFunctionCall","src":"223:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"242:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"219:3:21"},"nodeType":"YulFunctionCall","src":"219:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"212:6:21"},"nodeType":"YulFunctionCall","src":"212:35:21"},"nodeType":"YulIf","src":"209:55:21"},{"nodeType":"YulVariableDeclaration","src":"273:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"296:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"283:12:21"},"nodeType":"YulFunctionCall","src":"283:20:21"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"277:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"312:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"322:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"316:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"363:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"365:16:21"},"nodeType":"YulFunctionCall","src":"365:18:21"},"nodeType":"YulExpressionStatement","src":"365:18:21"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"355:2:21"},{"name":"_2","nodeType":"YulIdentifier","src":"359:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"352:2:21"},"nodeType":"YulFunctionCall","src":"352:10:21"},"nodeType":"YulIf","src":"349:36:21"},{"nodeType":"YulVariableDeclaration","src":"394:17:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"408:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"404:3:21"},"nodeType":"YulFunctionCall","src":"404:7:21"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"398:2:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"420:23:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"434:5:21"},"nodeType":"YulFunctionCall","src":"434:9:21"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"424:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"452:71:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"474:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"498:2:21"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"494:3:21"},"nodeType":"YulFunctionCall","src":"494:13:21"},{"name":"_3","nodeType":"YulIdentifier","src":"509:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"490:3:21"},"nodeType":"YulFunctionCall","src":"490:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"514:2:21","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"486:3:21"},"nodeType":"YulFunctionCall","src":"486:31:21"},{"name":"_3","nodeType":"YulIdentifier","src":"519:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"482:3:21"},"nodeType":"YulFunctionCall","src":"482:40:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"470:3:21"},"nodeType":"YulFunctionCall","src":"470:53:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"456:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"582:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"584:16:21"},"nodeType":"YulFunctionCall","src":"584:18:21"},"nodeType":"YulExpressionStatement","src":"584:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"541:10:21"},{"name":"_2","nodeType":"YulIdentifier","src":"553:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"538:2:21"},"nodeType":"YulFunctionCall","src":"538:18:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"561:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"573:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"558:2:21"},"nodeType":"YulFunctionCall","src":"558:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"535:2:21"},"nodeType":"YulFunctionCall","src":"535:46:21"},"nodeType":"YulIf","src":"532:72:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"620:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"624:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"613:6:21"},"nodeType":"YulFunctionCall","src":"613:22:21"},"nodeType":"YulExpressionStatement","src":"613:22:21"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"651:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"659:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"644:6:21"},"nodeType":"YulFunctionCall","src":"644:18:21"},"nodeType":"YulExpressionStatement","src":"644:18:21"},{"body":{"nodeType":"YulBlock","src":"710:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"719:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"722:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"712:6:21"},"nodeType":"YulFunctionCall","src":"712:12:21"},"nodeType":"YulExpressionStatement","src":"712:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"685:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"693:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"681:3:21"},"nodeType":"YulFunctionCall","src":"681:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"698:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"677:3:21"},"nodeType":"YulFunctionCall","src":"677:26:21"},{"name":"end","nodeType":"YulIdentifier","src":"705:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"674:2:21"},"nodeType":"YulFunctionCall","src":"674:35:21"},"nodeType":"YulIf","src":"671:55:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"752:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"760:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"748:3:21"},"nodeType":"YulFunctionCall","src":"748:17:21"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"771:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"779:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"767:3:21"},"nodeType":"YulFunctionCall","src":"767:17:21"},{"name":"_1","nodeType":"YulIdentifier","src":"786:2:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"735:12:21"},"nodeType":"YulFunctionCall","src":"735:54:21"},"nodeType":"YulExpressionStatement","src":"735:54:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"813:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"821:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:21"},"nodeType":"YulFunctionCall","src":"809:15:21"},{"kind":"number","nodeType":"YulLiteral","src":"826:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"805:3:21"},"nodeType":"YulFunctionCall","src":"805:26:21"},{"kind":"number","nodeType":"YulLiteral","src":"833:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"798:6:21"},"nodeType":"YulFunctionCall","src":"798:37:21"},"nodeType":"YulExpressionStatement","src":"798:37:21"},{"nodeType":"YulAssignment","src":"844:15:21","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"853:6:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"844:5:21"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"173:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"181:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"189:5:21","type":""}],"src":"146:719:21"},{"body":{"nodeType":"YulBlock","src":"919:124:21","statements":[{"nodeType":"YulAssignment","src":"929:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"951:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"938:12:21"},"nodeType":"YulFunctionCall","src":"938:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"929:5:21"}]},{"body":{"nodeType":"YulBlock","src":"1021:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1030:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1033:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1023:6:21"},"nodeType":"YulFunctionCall","src":"1023:12:21"},"nodeType":"YulExpressionStatement","src":"1023:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"980:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"991:5:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1006:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1011:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1002:3:21"},"nodeType":"YulFunctionCall","src":"1002:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"1015:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"998:3:21"},"nodeType":"YulFunctionCall","src":"998:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"987:3:21"},"nodeType":"YulFunctionCall","src":"987:31:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"977:2:21"},"nodeType":"YulFunctionCall","src":"977:42:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"970:6:21"},"nodeType":"YulFunctionCall","src":"970:50:21"},"nodeType":"YulIf","src":"967:70:21"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"898:6:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"909:5:21","type":""}],"src":"870:173:21"},{"body":{"nodeType":"YulBlock","src":"1240:707:21","statements":[{"body":{"nodeType":"YulBlock","src":"1287:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1296:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1299:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1289:6:21"},"nodeType":"YulFunctionCall","src":"1289:12:21"},"nodeType":"YulExpressionStatement","src":"1289:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1261:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1270:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1257:3:21"},"nodeType":"YulFunctionCall","src":"1257:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1282:3:21","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1253:3:21"},"nodeType":"YulFunctionCall","src":"1253:33:21"},"nodeType":"YulIf","src":"1250:53:21"},{"nodeType":"YulVariableDeclaration","src":"1312:37:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1339:9:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1326:12:21"},"nodeType":"YulFunctionCall","src":"1326:23:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1316:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1358:28:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1368:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1362:2:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1413:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1422:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1425:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1415:6:21"},"nodeType":"YulFunctionCall","src":"1415:12:21"},"nodeType":"YulExpressionStatement","src":"1415:12:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1401:6:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1409:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1398:2:21"},"nodeType":"YulFunctionCall","src":"1398:14:21"},"nodeType":"YulIf","src":"1395:34:21"},{"nodeType":"YulAssignment","src":"1438:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1470:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1481:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1466:3:21"},"nodeType":"YulFunctionCall","src":"1466:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1490:7:21"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"1448:17:21"},"nodeType":"YulFunctionCall","src":"1448:50:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1438:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"1507:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1540:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1551:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1536:3:21"},"nodeType":"YulFunctionCall","src":"1536:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1523:12:21"},"nodeType":"YulFunctionCall","src":"1523:32:21"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1511:8:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1584:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1593:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1596:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1586:6:21"},"nodeType":"YulFunctionCall","src":"1586:12:21"},"nodeType":"YulExpressionStatement","src":"1586:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1570:8:21"},{"name":"_1","nodeType":"YulIdentifier","src":"1580:2:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1567:2:21"},"nodeType":"YulFunctionCall","src":"1567:16:21"},"nodeType":"YulIf","src":"1564:36:21"},{"nodeType":"YulAssignment","src":"1609:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1641:9:21"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1652:8:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1637:3:21"},"nodeType":"YulFunctionCall","src":"1637:24:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1663:7:21"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"1619:17:21"},"nodeType":"YulFunctionCall","src":"1619:52:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1609:6:21"}]},{"nodeType":"YulAssignment","src":"1680:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1713:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1709:3:21"},"nodeType":"YulFunctionCall","src":"1709:18:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1690:18:21"},"nodeType":"YulFunctionCall","src":"1690:38:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1680:6:21"}]},{"nodeType":"YulAssignment","src":"1737:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1764:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1775:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1760:3:21"},"nodeType":"YulFunctionCall","src":"1760:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1747:12:21"},"nodeType":"YulFunctionCall","src":"1747:32:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1737:6:21"}]},{"nodeType":"YulAssignment","src":"1788:49:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1821:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1832:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1817:3:21"},"nodeType":"YulFunctionCall","src":"1817:19:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1798:18:21"},"nodeType":"YulFunctionCall","src":"1798:39:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1788:6:21"}]},{"nodeType":"YulAssignment","src":"1846:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1873:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1884:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1869:3:21"},"nodeType":"YulFunctionCall","src":"1869:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1856:12:21"},"nodeType":"YulFunctionCall","src":"1856:33:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1846:6:21"}]},{"nodeType":"YulAssignment","src":"1898:43:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1925:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1936:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1921:3:21"},"nodeType":"YulFunctionCall","src":"1921:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1908:12:21"},"nodeType":"YulFunctionCall","src":"1908:33:21"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1898:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1158:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1169:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1181:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1189:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1197:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1205:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1213:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1221:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1229:6:21","type":""}],"src":"1048:899:21"},{"body":{"nodeType":"YulBlock","src":"2053:102:21","statements":[{"nodeType":"YulAssignment","src":"2063:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2075:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2086:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2071:3:21"},"nodeType":"YulFunctionCall","src":"2071:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2063:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2105:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2120:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2136:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2141:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2132:3:21"},"nodeType":"YulFunctionCall","src":"2132:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2145:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2128:3:21"},"nodeType":"YulFunctionCall","src":"2128:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2116:3:21"},"nodeType":"YulFunctionCall","src":"2116:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2098:6:21"},"nodeType":"YulFunctionCall","src":"2098:51:21"},"nodeType":"YulExpressionStatement","src":"2098:51:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2022:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2033:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2044:4:21","type":""}],"src":"1952:203:21"},{"body":{"nodeType":"YulBlock","src":"2230:116:21","statements":[{"body":{"nodeType":"YulBlock","src":"2276:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2285:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2288:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2278:6:21"},"nodeType":"YulFunctionCall","src":"2278:12:21"},"nodeType":"YulExpressionStatement","src":"2278:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2251:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2260:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2247:3:21"},"nodeType":"YulFunctionCall","src":"2247:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2272:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2243:3:21"},"nodeType":"YulFunctionCall","src":"2243:32:21"},"nodeType":"YulIf","src":"2240:52:21"},{"nodeType":"YulAssignment","src":"2301:39:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:21"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2311:18:21"},"nodeType":"YulFunctionCall","src":"2311:29:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2301:6:21"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2196:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2207:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2219:6:21","type":""}],"src":"2160:186:21"},{"body":{"nodeType":"YulBlock","src":"2485:102:21","statements":[{"nodeType":"YulAssignment","src":"2495:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2507:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2518:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2503:3:21"},"nodeType":"YulFunctionCall","src":"2503:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2495:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2537:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2552:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2568:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2573:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2564:3:21"},"nodeType":"YulFunctionCall","src":"2564:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2577:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2560:3:21"},"nodeType":"YulFunctionCall","src":"2560:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2548:3:21"},"nodeType":"YulFunctionCall","src":"2548:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2530:6:21"},"nodeType":"YulFunctionCall","src":"2530:51:21"},"nodeType":"YulExpressionStatement","src":"2530:51:21"}]},"name":"abi_encode_tuple_t_contract$_IERC20MetadataUpgradeable_$883__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2454:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2465:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2476:4:21","type":""}],"src":"2351:236:21"},{"body":{"nodeType":"YulBlock","src":"2642:373:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2652:26:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2672:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2666:5:21"},"nodeType":"YulFunctionCall","src":"2666:12:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2656:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2694:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2699:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2687:6:21"},"nodeType":"YulFunctionCall","src":"2687:19:21"},"nodeType":"YulExpressionStatement","src":"2687:19:21"},{"nodeType":"YulVariableDeclaration","src":"2715:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2724:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2719:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2786:110:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2800:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2810:4:21","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2804:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2842:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"2847:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2838:3:21"},"nodeType":"YulFunctionCall","src":"2838:11:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2851:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2834:3:21"},"nodeType":"YulFunctionCall","src":"2834:20:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2870:5:21"},{"name":"i","nodeType":"YulIdentifier","src":"2877:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2866:3:21"},"nodeType":"YulFunctionCall","src":"2866:13:21"},{"name":"_1","nodeType":"YulIdentifier","src":"2881:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2862:3:21"},"nodeType":"YulFunctionCall","src":"2862:22:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2856:5:21"},"nodeType":"YulFunctionCall","src":"2856:29:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:21"},"nodeType":"YulFunctionCall","src":"2827:59:21"},"nodeType":"YulExpressionStatement","src":"2827:59:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2745:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"2748:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2742:2:21"},"nodeType":"YulFunctionCall","src":"2742:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2756:21:21","statements":[{"nodeType":"YulAssignment","src":"2758:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2767:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"2770:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2763:3:21"},"nodeType":"YulFunctionCall","src":"2763:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2758:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"2738:3:21","statements":[]},"src":"2734:162:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2920:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2925:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2916:3:21"},"nodeType":"YulFunctionCall","src":"2916:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"2934:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2912:3:21"},"nodeType":"YulFunctionCall","src":"2912:27:21"},{"kind":"number","nodeType":"YulLiteral","src":"2941:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2905:6:21"},"nodeType":"YulFunctionCall","src":"2905:38:21"},"nodeType":"YulExpressionStatement","src":"2905:38:21"},{"nodeType":"YulAssignment","src":"2952:57:21","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2967:3:21"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2980:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2988:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2976:3:21"},"nodeType":"YulFunctionCall","src":"2976:15:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2997:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2993:3:21"},"nodeType":"YulFunctionCall","src":"2993:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2972:3:21"},"nodeType":"YulFunctionCall","src":"2972:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2963:3:21"},"nodeType":"YulFunctionCall","src":"2963:39:21"},{"kind":"number","nodeType":"YulLiteral","src":"3004:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2959:3:21"},"nodeType":"YulFunctionCall","src":"2959:50:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2952:3:21"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2619:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2626:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2634:3:21","type":""}],"src":"2592:423:21"},{"body":{"nodeType":"YulBlock","src":"3357:563:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3367:13:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3377:3:21","type":"","value":"256"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3371:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3396:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3407:2:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3389:6:21"},"nodeType":"YulFunctionCall","src":"3389:21:21"},"nodeType":"YulExpressionStatement","src":"3389:21:21"},{"nodeType":"YulVariableDeclaration","src":"3419:59:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3451:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3463:9:21"},{"name":"_1","nodeType":"YulIdentifier","src":"3474:2:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3459:3:21"},"nodeType":"YulFunctionCall","src":"3459:18:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3433:17:21"},"nodeType":"YulFunctionCall","src":"3433:45:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3423:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3498:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3509:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3494:3:21"},"nodeType":"YulFunctionCall","src":"3494:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3518:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3526:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3514:3:21"},"nodeType":"YulFunctionCall","src":"3514:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3487:6:21"},"nodeType":"YulFunctionCall","src":"3487:50:21"},"nodeType":"YulExpressionStatement","src":"3487:50:21"},{"nodeType":"YulAssignment","src":"3546:41:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3572:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"3580:6:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"3554:17:21"},"nodeType":"YulFunctionCall","src":"3554:33:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3546:4:21"}]},{"nodeType":"YulVariableDeclaration","src":"3596:29:21","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3614:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3619:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3610:3:21"},"nodeType":"YulFunctionCall","src":"3610:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"3623:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3606:3:21"},"nodeType":"YulFunctionCall","src":"3606:19:21"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3600:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3645:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3656:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3641:3:21"},"nodeType":"YulFunctionCall","src":"3641:18:21"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3665:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"3673:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3661:3:21"},"nodeType":"YulFunctionCall","src":"3661:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3634:6:21"},"nodeType":"YulFunctionCall","src":"3634:43:21"},"nodeType":"YulExpressionStatement","src":"3634:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3697:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3708:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3693:3:21"},"nodeType":"YulFunctionCall","src":"3693:18:21"},{"name":"value3","nodeType":"YulIdentifier","src":"3713:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3686:6:21"},"nodeType":"YulFunctionCall","src":"3686:34:21"},"nodeType":"YulExpressionStatement","src":"3686:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3740:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3751:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3736:3:21"},"nodeType":"YulFunctionCall","src":"3736:19:21"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3761:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"3769:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3757:3:21"},"nodeType":"YulFunctionCall","src":"3757:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3729:6:21"},"nodeType":"YulFunctionCall","src":"3729:44:21"},"nodeType":"YulExpressionStatement","src":"3729:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3793:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3804:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3789:3:21"},"nodeType":"YulFunctionCall","src":"3789:19:21"},{"name":"value5","nodeType":"YulIdentifier","src":"3810:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3782:6:21"},"nodeType":"YulFunctionCall","src":"3782:35:21"},"nodeType":"YulExpressionStatement","src":"3782:35:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3848:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:21"},"nodeType":"YulFunctionCall","src":"3833:19:21"},{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"3858:6:21"},{"name":"_2","nodeType":"YulIdentifier","src":"3866:2:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3854:3:21"},"nodeType":"YulFunctionCall","src":"3854:15:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3826:6:21"},"nodeType":"YulFunctionCall","src":"3826:44:21"},"nodeType":"YulExpressionStatement","src":"3826:44:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3890:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3901:3:21","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3886:3:21"},"nodeType":"YulFunctionCall","src":"3886:19:21"},{"name":"value7","nodeType":"YulIdentifier","src":"3907:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3879:6:21"},"nodeType":"YulFunctionCall","src":"3879:35:21"},"nodeType":"YulExpressionStatement","src":"3879:35:21"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3270:9:21","type":""},{"name":"value7","nodeType":"YulTypedName","src":"3281:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3289:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3297:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3305:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3313:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3321:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3329:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3337:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3348:4:21","type":""}],"src":"3020:900:21"},{"body":{"nodeType":"YulBlock","src":"4122:283:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4139:9:21"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4154:6:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4170:3:21","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4175:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4166:3:21"},"nodeType":"YulFunctionCall","src":"4166:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"4179:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4162:3:21"},"nodeType":"YulFunctionCall","src":"4162:19:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4150:3:21"},"nodeType":"YulFunctionCall","src":"4150:32:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4132:6:21"},"nodeType":"YulFunctionCall","src":"4132:51:21"},"nodeType":"YulExpressionStatement","src":"4132:51:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4203:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4214:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4199:3:21"},"nodeType":"YulFunctionCall","src":"4199:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4219:2:21","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4192:6:21"},"nodeType":"YulFunctionCall","src":"4192:30:21"},"nodeType":"YulExpressionStatement","src":"4192:30:21"},{"nodeType":"YulVariableDeclaration","src":"4231:59:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4263:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4275:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4286:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4271:3:21"},"nodeType":"YulFunctionCall","src":"4271:18:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4245:17:21"},"nodeType":"YulFunctionCall","src":"4245:45:21"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4235:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4310:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4321:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4306:3:21"},"nodeType":"YulFunctionCall","src":"4306:18:21"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4330:6:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4338:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4326:3:21"},"nodeType":"YulFunctionCall","src":"4326:22:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4299:6:21"},"nodeType":"YulFunctionCall","src":"4299:50:21"},"nodeType":"YulExpressionStatement","src":"4299:50:21"},{"nodeType":"YulAssignment","src":"4358:41:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4384:6:21"},{"name":"tail_1","nodeType":"YulIdentifier","src":"4392:6:21"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4366:17:21"},"nodeType":"YulFunctionCall","src":"4366:33:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4358:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4075:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4086:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4094:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4102:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4113:4:21","type":""}],"src":"3925:480:21"},{"body":{"nodeType":"YulBlock","src":"4584:228:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4601:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4612:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4594:6:21"},"nodeType":"YulFunctionCall","src":"4594:21:21"},"nodeType":"YulExpressionStatement","src":"4594:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4635:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4646:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4631:3:21"},"nodeType":"YulFunctionCall","src":"4631:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"4651:2:21","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4624:6:21"},"nodeType":"YulFunctionCall","src":"4624:30:21"},"nodeType":"YulExpressionStatement","src":"4624:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4674:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4685:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4670:3:21"},"nodeType":"YulFunctionCall","src":"4670:18:21"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"4690:34:21","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4663:6:21"},"nodeType":"YulFunctionCall","src":"4663:62:21"},"nodeType":"YulExpressionStatement","src":"4663:62:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4745:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4756:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4741:3:21"},"nodeType":"YulFunctionCall","src":"4741:18:21"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"4761:8:21","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4734:6:21"},"nodeType":"YulFunctionCall","src":"4734:36:21"},"nodeType":"YulExpressionStatement","src":"4734:36:21"},{"nodeType":"YulAssignment","src":"4779:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4802:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:21"},"nodeType":"YulFunctionCall","src":"4787:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4779:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4561:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4575:4:21","type":""}],"src":"4410:402:21"},{"body":{"nodeType":"YulBlock","src":"4991:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5008:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5019:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5001:6:21"},"nodeType":"YulFunctionCall","src":"5001:21:21"},"nodeType":"YulExpressionStatement","src":"5001:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5042:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5053:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5038:3:21"},"nodeType":"YulFunctionCall","src":"5038:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5058:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5031:6:21"},"nodeType":"YulFunctionCall","src":"5031:30:21"},"nodeType":"YulExpressionStatement","src":"5031:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5081:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5092:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5077:3:21"},"nodeType":"YulFunctionCall","src":"5077:18:21"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"5097:34:21","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5070:6:21"},"nodeType":"YulFunctionCall","src":"5070:62:21"},"nodeType":"YulExpressionStatement","src":"5070:62:21"},{"nodeType":"YulAssignment","src":"5141:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5153:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5164:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5149:3:21"},"nodeType":"YulFunctionCall","src":"5149:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5141:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4968:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4982:4:21","type":""}],"src":"4817:356:21"},{"body":{"nodeType":"YulBlock","src":"5352:172:21","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5369:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5380:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5362:6:21"},"nodeType":"YulFunctionCall","src":"5362:21:21"},"nodeType":"YulExpressionStatement","src":"5362:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5403:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5414:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5399:3:21"},"nodeType":"YulFunctionCall","src":"5399:18:21"},{"kind":"number","nodeType":"YulLiteral","src":"5419:2:21","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5392:6:21"},"nodeType":"YulFunctionCall","src":"5392:30:21"},"nodeType":"YulExpressionStatement","src":"5392:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5442:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5453:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5438:3:21"},"nodeType":"YulFunctionCall","src":"5438:18:21"},{"hexValue":"455243313136373a20637265617465206661696c6564","kind":"string","nodeType":"YulLiteral","src":"5458:24:21","type":"","value":"ERC1167: create failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5431:6:21"},"nodeType":"YulFunctionCall","src":"5431:52:21"},"nodeType":"YulExpressionStatement","src":"5431:52:21"},{"nodeType":"YulAssignment","src":"5492:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5504:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5515:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5500:3:21"},"nodeType":"YulFunctionCall","src":"5500:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5492:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5329:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5343:4:21","type":""}],"src":"5178:346:21"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20MetadataUpgradeable_$883__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 256\n        mstore(headStart, _1)\n        let tail_1 := abi_encode_string(value0, add(headStart, _1))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 64), and(value2, _2))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _2))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), and(value6, _2))\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"ERC1167: create failed\")\n        tail := add(headStart, 96)\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3285":[{"length":32,"start":243}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80634b6423d61461005c578063715018a61461008b5780638da5cb5b14610095578063e4860339146100a6578063f2fde38b146100cf575b600080fd5b61006f61006a366004610460565b6100e2565b6040516001600160a01b03909116815260200160405180910390f35b6100936101cd565b005b6000546001600160a01b031661006f565b61006f6100b4366004610502565b6001602052600090815260409020546001600160a01b031681565b6100936100dd366004610502565b6101e1565b60006100ec61025f565b60006101177f00000000000000000000000000000000000000000000000000000000000000006102b9565b60405163a238d31160e01b81529091506001600160a01b0382169063a238d31190610154908c908c908c908c908c908c9033908d9060040161056a565b600060405180830381600087803b15801561016e57600080fd5b505af1158015610182573d6000803e3d6000fd5b505050507fffc04f682c7b287e4b552dacd4b833d7c33dc0549cd6da84388408e4830c0562818a8a6040516101b9939291906105d1565b60405180910390a198975050505050505050565b6101d561025f565b6101df6000610356565b565b6101e961025f565b6001600160a01b0381166102535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61025c81610356565b50565b6000546001600160a01b031633146101df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024a565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166103515760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161024a565b919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126103cd57600080fd5b813567ffffffffffffffff808211156103e8576103e86103a6565b604051601f8301601f19908116603f01168101908282118183101715610410576104106103a6565b8160405283815286602085880101111561042957600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b038116811461035157600080fd5b600080600080600080600060e0888a03121561047b57600080fd5b873567ffffffffffffffff8082111561049357600080fd5b61049f8b838c016103bc565b985060208a01359150808211156104b557600080fd5b506104c28a828b016103bc565b9650506104d160408901610449565b9450606088013593506104e660808901610449565b925060a0880135915060c0880135905092959891949750929550565b60006020828403121561051457600080fd5b61051d82610449565b9392505050565b6000815180845260005b8181101561054a5760208185018101518683018201520161052e565b506000602082860101526020601f19601f83011685010191505092915050565b600061010080835261057e8184018c610524565b90508281036020840152610592818b610524565b6001600160a01b03998a16604085015260608401989098525050938616608085015260a084019290925290931660c082015260e0019190915292915050565b6001600160a01b03841681526060602082018190526000906105f590830185610524565b82810360408401526106078185610524565b969550505050505056fea2646970667358221220bb5924244195a0a5d2ebe26b3412d7ad7ecae949954a027b037250b1313e5d2864736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4B6423D6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xE4860339 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x460 JUMP JUMPDEST PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x1CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F JUMP JUMPDEST PUSH2 0x6F PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x93 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEC PUSH2 0x25F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117 PUSH32 0x0 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA238D311 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA238D311 SWAP1 PUSH2 0x154 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP13 SWAP1 CALLER SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x182 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xFFC04F682C7B287E4B552DACD4B833D7C33DC0549CD6DA84388408E4830C0562 DUP2 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x25F JUMP JUMPDEST PUSH2 0x1DF PUSH1 0x0 PUSH2 0x356 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x25F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP2 PUSH2 0x356 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x24A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x351 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x24A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3E8 PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x410 JUMPI PUSH2 0x410 PUSH2 0x3A6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x49F DUP12 DUP4 DUP13 ADD PUSH2 0x3BC JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C2 DUP11 DUP3 DUP12 ADD PUSH2 0x3BC JUMP JUMPDEST SWAP7 POP POP PUSH2 0x4D1 PUSH1 0x40 DUP10 ADD PUSH2 0x449 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x4E6 PUSH1 0x80 DUP10 ADD PUSH2 0x449 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51D DUP3 PUSH2 0x449 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x54A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x52E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x57E DUP2 DUP5 ADD DUP13 PUSH2 0x524 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x592 DUP2 DUP12 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP10 DUP11 AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP SWAP4 DUP7 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x5F5 SWAP1 DUP4 ADD DUP6 PUSH2 0x524 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x607 DUP2 DUP6 PUSH2 0x524 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB MSIZE 0x24 0x24 COINBASE SWAP6 LOG0 0xA5 0xD2 0xEB 0xE2 PUSH12 0x3412D7AD7ECAE949954A027B SUB PUSH19 0x50B1313E5D2864736F6C634300081100330000 ","sourceMap":"538:860:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;860:535;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2116:32:21;;;2098:51;;2086:2;2071:18;860:535:19;;;;;;;1831:101:6;;;:::i;:::-;;1201:85;1247:7;1273:6;-1:-1:-1;;;;;1273:6:6;1201:85;;649:59:19;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;649:59:19;;;2081:198:6;;;;;;:::i;:::-;;:::i;860:535:19:-;1123:7;1094:13:6;:11;:13::i;:::-;1142::19::1;1158:19;1171:5;1158:12;:19::i;:::-;1187:129;::::0;-1:-1:-1;;;1187:129:19;;1142:35;;-1:-1:-1;;;;;;1187:35:19;::::1;::::0;::::1;::::0;:129:::1;::::0;1223:5;;1230:7;;1239:9;;1250:15;;1267:7;;1276:13;;1291:10:::1;::::0;1303:12;;1187:129:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1331:35;1344:5;1351;1358:7;1331:35;;;;;;;;:::i;:::-;;;;;;;;1383:5:::0;860:535;-1:-1:-1;;;;;;;;860:535:19:o;1831:101:6:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:6;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:6;;4612:2:21;2161:73:6::1;::::0;::::1;4594:21:21::0;4651:2;4631:18;;;4624:30;4690:34;4670:18;;;4663:62;-1:-1:-1;;;4741:18:21;;;4734:36;4787:19;;2161:73:6::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:6;719:10:12;1422:23:6;1414:68;;;;-1:-1:-1;;;1414:68:6;;5019:2:21;1414:68:6;;;5001:21:21;;;5038:18;;;5031:30;5097:34;5077:18;;;5070:62;5149:18;;1414:68:6;4817:356:21;973:558:7;1030:16;1141:4;1135:11;-1:-1:-1;;;1166:3:7;1159:79;1284:14;1278:4;1274:25;1267:4;1262:3;1258:14;1251:49;-1:-1:-1;;;1329:4:7;1324:3;1320:14;1313:90;1443:4;1438:3;1435:1;1428:20;1416:32;-1:-1:-1;;;;;;;1475:22:7;;1467:57;;;;-1:-1:-1;;;1467:57:7;;5380:2:21;1467:57:7;;;5362:21:21;5419:2;5399:18;;;5392:30;-1:-1:-1;;;5438:18:21;;;5431:52;5500:18;;1467:57:7;5178:346:21;1467:57:7;973:558;;;:::o;2433:187:6:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:6;;;-1:-1:-1;;;;;;2541:17:6;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:127:21:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:21;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:173::-;938:20;;-1:-1:-1;;;;;987:31:21;;977:42;;967:70;;1033:1;1030;1023:12;1048:899;1181:6;1189;1197;1205;1213;1221;1229;1282:3;1270:9;1261:7;1257:23;1253:33;1250:53;;;1299:1;1296;1289:12;1250:53;1339:9;1326:23;1368:18;1409:2;1401:6;1398:14;1395:34;;;1425:1;1422;1415:12;1395:34;1448:50;1490:7;1481:6;1470:9;1466:22;1448:50;:::i;:::-;1438:60;;1551:2;1540:9;1536:18;1523:32;1507:48;;1580:2;1570:8;1567:16;1564:36;;;1596:1;1593;1586:12;1564:36;;1619:52;1663:7;1652:8;1641:9;1637:24;1619:52;:::i;:::-;1609:62;;;1690:38;1724:2;1713:9;1709:18;1690:38;:::i;:::-;1680:48;;1775:2;1764:9;1760:18;1747:32;1737:42;;1798:39;1832:3;1821:9;1817:19;1798:39;:::i;:::-;1788:49;;1884:3;1873:9;1869:19;1856:33;1846:43;;1936:3;1925:9;1921:19;1908:33;1898:43;;1048:899;;;;;;;;;;:::o;2160:186::-;2219:6;2272:2;2260:9;2251:7;2247:23;2243:32;2240:52;;;2288:1;2285;2278:12;2240:52;2311:29;2330:9;2311:29;:::i;:::-;2301:39;2160:186;-1:-1:-1;;;2160:186:21:o;2592:423::-;2634:3;2672:5;2666:12;2699:6;2694:3;2687:19;2724:1;2734:162;2748:6;2745:1;2742:13;2734:162;;;2810:4;2866:13;;;2862:22;;2856:29;2838:11;;;2834:20;;2827:59;2763:12;2734:162;;;2738:3;2941:1;2934:4;2925:6;2920:3;2916:16;2912:27;2905:38;3004:4;2997:2;2993:7;2988:2;2980:6;2976:15;2972:29;2967:3;2963:39;2959:50;2952:57;;;2592:423;;;;:::o;3020:900::-;3348:4;3377:3;3407:2;3396:9;3389:21;3433:45;3474:2;3463:9;3459:18;3451:6;3433:45;:::i;:::-;3419:59;;3526:9;3518:6;3514:22;3509:2;3498:9;3494:18;3487:50;3554:33;3580:6;3572;3554:33;:::i;:::-;-1:-1:-1;;;;;3661:15:21;;;3656:2;3641:18;;3634:43;3708:2;3693:18;;3686:34;;;;-1:-1:-1;;3757:15:21;;;3751:3;3736:19;;3729:44;3614:3;3789:19;;3782:35;;;;3854:15;;;3848:3;3833:19;;3826:44;3901:3;3886:19;3879:35;;;;3546:41;3020:900;-1:-1:-1;;3020:900:21:o;3925:480::-;-1:-1:-1;;;;;4150:32:21;;4132:51;;4219:2;4214;4199:18;;4192:30;;;-1:-1:-1;;4245:45:21;;4271:18;;4263:6;4245:45;:::i;:::-;4338:9;4330:6;4326:22;4321:2;4310:9;4306:18;4299:50;4366:33;4392:6;4384;4366:33;:::i;:::-;4358:41;3925:480;-1:-1:-1;;;;;;3925:480:21:o"},"gasEstimates":{"creation":{"codeDepositCost":"321400","executionCost":"infinite","totalCost":"infinite"},"external":{"createToken(string,string,address,uint256,address,uint256,uint256)":"infinite","owner()":"2341","renounceOwnership()":"infinite","tokens(address)":"2590","transferOwnership(address)":"28399"}},"methodIdentifiers":{"createToken(string,string,address,uint256,address,uint256,uint256)":"4b6423d6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","tokens(address)":"e4860339","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_fsociety\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fsocietySupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_authorSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_otherSupply\",\"type\":\"uint256\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"contract IERC20MetadataUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/ProjectTokenFactory.sol\":\"ProjectTokenFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/tokens/ProjectTokenERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { ERC20Upgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\nimport { Initializable } from '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\n\\ncontract ProjectTokenERC20 is Initializable, ERC20Upgradeable {\\n    function initialize(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsociety,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        address _other,\\n        uint256 _otherSupply\\n    ) public virtual initializer {\\n        __ProjectTokenERC20_init(_name, _symbol, _fsociety, _fsocietySupply, _author, _authorSupply, _other, _otherSupply);\\n    }\\n    \\n    /**\\n     * @dev Mint supplies\\n     * - `fsocietySupply` amount of token and transfers them to `fsociety` contract.\\n     * - `authorSupply` amount of token and transfers them to `author`.\\n     * - `otherSupply` amount of token and transfers them to `otherContract`.\\n     *\\n     * See {ERC20-constructor}.\\n     */\\n    function __ProjectTokenERC20_init(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsociety,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        address _other,\\n        uint256 _otherSupply\\n    ) internal onlyInitializing {\\n        __ERC20_init_unchained(_name, _symbol);\\n        __ProjectTokenERC20_init_unchained(_fsociety, _fsocietySupply, _author, _authorSupply, _other, _otherSupply);\\n    }\\n\\n    function __ProjectTokenERC20_init_unchained(\\n        address _fsociety,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        address _other,\\n        uint256 _otherSupply\\n    ) internal onlyInitializing {\\n        _mint(_fsociety, _fsocietySupply);\\n        _mint(_author, _authorSupply);\\n        _mint(_other, _otherSupply);\\n    }\\n}\\n\",\"keccak256\":\"0xd82d22e9dd45fa586f35f08d0e9974ce9b3efd5bfdadf32ee8b41c613bdc6c98\",\"license\":\"MIT\"},\"contracts/tokens/ProjectTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { Address } from '@openzeppelin/contracts/utils/Address.sol';\\nimport { Clones } from '@openzeppelin/contracts/proxy/Clones.sol';\\nimport { Ownable } from '@openzeppelin/contracts/access/Ownable.sol';\\nimport { IERC20MetadataUpgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol';\\n\\nimport { IProjectTokenFactory } from './interfaces/IProjectTokenFactory.sol';\\nimport { ProjectTokenERC20 } from './ProjectTokenERC20.sol';\\n\\ncontract ProjectTokenFactory is IProjectTokenFactory, Ownable {\\n    \\n    address immutable private proxy;\\n\\n    mapping(address => IERC20MetadataUpgradeable) public tokens;\\n\\n    event TokenCreated(address token, string name, string symbol);\\n\\n    constructor() {\\n        proxy = address(new ProjectTokenERC20());\\n    }\\n\\n    function createToken(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsociety,\\n        uint256 _fsocietySupply, \\n        address _author,\\n        uint256 _authorSupply, \\n        uint256 _otherSupply\\n    ) public onlyOwner returns (address) {\\n        address token = Clones.clone(proxy);\\n        ProjectTokenERC20(token).initialize(_name, _symbol, _fsociety, _fsocietySupply, _author, _authorSupply, msg.sender, _otherSupply);\\n        emit TokenCreated(token, _name, _symbol);\\n        return token;\\n    }\\n\\n}\\n\\n\",\"keccak256\":\"0x3c05121815f3db7c4372cb8fd82ce777363b73eaebe39e1477af376e21da32c8\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IProjectTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { IERC20MetadataUpgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol';\\n\\ninterface IProjectTokenFactory {\\n    \\n    function tokens(address tokenAddress) external returns (IERC20MetadataUpgradeable);\\n\\n    function createToken(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsocietyAddress,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        uint256 _otherSupply\\n    ) external returns (address);\\n    \\n}\\n\",\"keccak256\":\"0xa878d9f6ec956830d7918773396406c2804119b6b924fa15ecee86cab720cf71\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1217,"contract":"contracts/tokens/ProjectTokenFactory.sol:ProjectTokenFactory","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":3290,"contract":"contracts/tokens/ProjectTokenFactory.sol:ProjectTokenFactory","label":"tokens","offset":0,"slot":"1","type":"t_mapping(t_address,t_contract(IERC20MetadataUpgradeable)883)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IERC20MetadataUpgradeable)883":{"encoding":"inplace","label":"contract IERC20MetadataUpgradeable","numberOfBytes":"20"},"t_mapping(t_address,t_contract(IERC20MetadataUpgradeable)883)":{"encoding":"mapping","key":"t_address","label":"mapping(address => contract IERC20MetadataUpgradeable)","numberOfBytes":"32","value":"t_contract(IERC20MetadataUpgradeable)883"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/tokens/interfaces/IProjectTokenFactory.sol":{"IProjectTokenFactory":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_fsocietyAddress","type":"address"},{"internalType":"uint256","name":"_fsocietySupply","type":"uint256"},{"internalType":"address","name":"_author","type":"address"},{"internalType":"uint256","name":"_authorSupply","type":"uint256"},{"internalType":"uint256","name":"_otherSupply","type":"uint256"}],"name":"createToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"name":"tokens","outputs":[{"internalType":"contract IERC20MetadataUpgradeable","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createToken(string,string,address,uint256,address,uint256,uint256)":"4b6423d6","tokens(address)":"e4860339"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_fsocietyAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fsocietySupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_authorSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_otherSupply\",\"type\":\"uint256\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"contract IERC20MetadataUpgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/interfaces/IProjectTokenFactory.sol\":\"IProjectTokenFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IProjectTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { IERC20MetadataUpgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol';\\n\\ninterface IProjectTokenFactory {\\n    \\n    function tokens(address tokenAddress) external returns (IERC20MetadataUpgradeable);\\n\\n    function createToken(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsocietyAddress,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        uint256 _otherSupply\\n    ) external returns (address);\\n    \\n}\\n\",\"keccak256\":\"0xa878d9f6ec956830d7918773396406c2804119b6b924fa15ecee86cab720cf71\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}