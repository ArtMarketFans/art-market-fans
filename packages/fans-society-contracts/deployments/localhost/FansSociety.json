{
  "address": "0x40a42Baf86Fc821f972Ad2aC878729063CeEF403",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wethTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenFactoryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolFactoryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Committed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "target",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "minInvest",
          "type": "uint16"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "authorAddress",
          "type": "address"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Projects.ProjectStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "ProjectStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "abortProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "claimProjectTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "commitOnProject",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_authorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "_target",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "_minInvest",
          "type": "uint16"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "launchProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "fund",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "target",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "minInvest",
          "type": "uint16"
        },
        {
          "internalType": "enum Projects.ProjectStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "authorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "withdrawOnProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdbd78c9d617568d2330ce3380c9240b15e15ecd461dcfc68a3ce3c0982b261be",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x40a42Baf86Fc821f972Ad2aC878729063CeEF403",
    "transactionIndex": 0,
    "gasUsed": "1703666",
    "logsBloom": "0x
    "blockHash": "0x4d40c1e5dbc3aed66ba5684c10611e14f0e7bddc43a56a74f9ecdc45973a24e9",
    "transactionHash": "0xdbd78c9d617568d2330ce3380c9240b15e15ecd461dcfc68a3ce3c0982b261be",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 239,
        "transactionHash": "0xdbd78c9d617568d2330ce3380c9240b15e15ecd461dcfc68a3ce3c0982b261be",
        "address": "0x40a42Baf86Fc821f972Ad2aC878729063CeEF403",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x4d40c1e5dbc3aed66ba5684c10611e14f0e7bddc43a56a74f9ecdc45973a24e9"
      }
    ],
    "blockNumber": 239,
    "cumulativeGasUsed": "1703666",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x02b0B4EFd909240FCB2Eb5FAe060dC60D112E3a4",
    "0x638A246F0Ec8883eF68280293FFE8Cfbabe61B44",
    "0x32EEce76C2C2e8758584A83Ee2F522D4788feA0f"
  ],
  "numDeployments": 6,
  "solcInputHash": "452132cd8fd6d593d74d11ecbb6c2c16",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wethTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolFactoryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Committed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"target\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minInvest\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authorAddress\",\"type\":\"address\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Projects.ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ProjectStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"abortProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"claimProjectTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"commitOnProject\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"_target\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_minInvest\",\"type\":\"uint16\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"launchProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"target\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"minInvest\",\"type\":\"uint16\"},{\"internalType\":\"enum Projects.ProjectStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"authorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawOnProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FansSociety.sol\":\"FansSociety\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/FansSociety.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { Projects } from './Projects.sol';\\n\\ncontract FansSociety is Projects  {\\n    \\n    constructor(\\n        address _wethTokenAddress,\\n\\t\\taddress _tokenFactoryAddress, \\n\\t\\taddress _poolFactoryAddress\\n    ) Projects(_wethTokenAddress, _tokenFactoryAddress, _poolFactoryAddress) {\\n        \\n    }\\n\\n}\\n\",\"keccak256\":\"0xf9722a28aaf800eafb4cee4924f2290e8068cb57f452886e2a2499c67701ded0\",\"license\":\"MIT\"},\"contracts/Projects.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\n\\nimport { Initializable } from '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport { Ownable } from '@openzeppelin/contracts/access/Ownable.sol';\\n\\nimport { IProjectTokenFactory } from './tokens/interfaces/IProjectTokenFactory.sol';\\nimport { ITokensPoolFactory } from './pools/interfaces/ITokensPoolFactory.sol';\\n\\ncontract Projects is Ownable {\\n\\tenum ProjectStatus {\\n\\t\\tOpened,\\n\\t\\tAborted,\\n\\t\\tCompleted,\\n\\t\\tLaunched\\n\\t}\\n\\n\\tstruct Project {\\n\\t\\tstring name;\\n\\t\\tstring description;\\n\\t\\tstring symbol;\\n\\t\\tuint256 fund;\\n\\t\\tuint256 liquidity;\\n\\t\\tuint32 target;\\n\\t\\tuint16 minInvest;\\n\\t\\tProjectStatus status;\\n\\t\\taddress authorAddress;\\n\\t\\taddress tokenAddress;\\n\\t}\\n\\n\\taddress internal wethTokenAddress;\\n\\n\\taddress internal tokenFactoryAddress;\\n\\taddress internal poolFactoryAddress;\\n\\n\\tuint256 private constant FSOCIETY_SUPPLY = 27;\\n\\tuint256 private constant AUTHOR_SUPPLY = 27;\\n\\tuint256 private constant LIQUIDITY_SUPPLY = 30;\\n\\tuint256 private constant INVESTORS_SUPPLY = 35;\\n\\n\\tuint256 private constant MAX_DURATION = 604800; // 1 week\\n\\n\\tuint256 private constant PRECISION = 2;\\n\\n\\n\\tuint256 public count;\\n\\n\\tmapping(uint256 => Project) public projects;\\n\\n\\tmapping(uint256 => mapping(address => uint256)) public commitments;\\n\\n\\tevent ProjectCreated(\\n\\t\\tuint256 id,\\n\\t\\tstring name,\\n\\t\\tstring symbol,\\n\\t\\tstring description,\\n\\t\\tuint32 target,\\n\\t\\tuint16 minInvest,\\n\\t\\taddress indexed authorAddress\\n\\t);\\n\\n\\tevent Committed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent Withdrawed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent Claimed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent ProjectStatusChanged(uint256 indexed id, ProjectStatus status);\\n\\n\\tmodifier onlyAuthor(uint256 _id) {\\n\\t\\trequire(msg.sender == projects[_id].authorAddress, 'Not author');\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier statusIs(uint256 _id, ProjectStatus _status) {\\n\\t\\trequire(projects[_id].status == _status, 'Bad project status');\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier isCommited(uint256 _id) {\\n\\t\\trequire(commitments[_id][msg.sender] >= 0, 'No commitment');\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(\\n\\t\\taddress _wethTokenAddress,\\n\\t\\taddress _tokenFactoryAddress, \\n\\t\\taddress _poolFactoryAddress\\n\\t) {\\n\\t\\twethTokenAddress = _wethTokenAddress;\\n\\t\\ttokenFactoryAddress = _tokenFactoryAddress;\\n\\t\\tpoolFactoryAddress = _poolFactoryAddress;\\n\\t}\\n\\n\\tfunction createProject(\\n\\t\\taddress _authorAddress,\\n\\t\\tstring calldata _name,\\n\\t\\tstring calldata _symbol,\\n\\t\\tstring calldata _description,\\n\\t\\tuint32 _target,\\n\\t\\tuint16 _minInvest\\n\\t) external onlyOwner {\\n\\n\\t\\tcount++;\\n\\n\\t\\tprojects[count] = Project({\\n\\t\\t\\tname: _name,\\n\\t\\t\\tsymbol: _symbol,\\n\\t\\t\\tdescription: _description,\\n\\t\\t\\tfund: 0,\\n\\t\\t\\tliquidity: 0,\\n\\t\\t\\ttarget: _target,\\n\\t\\t\\tminInvest: _minInvest,\\n\\t\\t\\tstatus: ProjectStatus.Opened,\\n\\t\\t\\tauthorAddress: _authorAddress,\\n\\t\\t\\ttokenAddress: address(0)\\n\\t\\t});\\n\\n\\t\\temit ProjectCreated(\\n\\t\\t\\tcount,\\n\\t\\t\\t_name,\\n\\t\\t\\t_symbol,\\n\\t\\t\\t_description,\\n\\t\\t\\t_target,\\n\\t\\t\\t_minInvest,\\n\\t\\t\\t_authorAddress\\n\\t\\t);\\n\\t}\\n\\n\\tfunction abortProject(uint256 _id) external onlyOwner statusIs(_id, ProjectStatus.Opened) {\\n\\t\\tprojects[_id].status = ProjectStatus.Aborted;\\n\\t\\temit ProjectStatusChanged(_id, ProjectStatus.Aborted);\\n\\t}\\n\\n\\tfunction commitOnProject(uint256 _id) external payable statusIs(_id, ProjectStatus.Opened) {\\n\\t\\trequire(msg.value >= 0.01 ether, 'min 0.01 ether');\\n\\n\\t\\tProject memory project = projects[_id];\\n\\n\\t\\t(uint value, uint liquidity) = computeValueAndLiquidity(msg.value);\\n\\n\\t\\tproject.fund += value;\\n\\t\\tproject.liquidity += liquidity;\\n\\n\\t\\tcommitments[_id][msg.sender] += msg.value;\\n\\t\\temit Committed(_id, msg.sender, msg.value);\\n\\n\\t\\tif (project.fund >= project.target) {\\n\\t\\t\\tproject.status = ProjectStatus.Completed;\\n\\t\\t\\temit ProjectStatusChanged(_id, ProjectStatus.Completed);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction withdrawOnProject(uint256 _id) external statusIs(_id, ProjectStatus.Opened) isCommited(_id) {\\n\\t\\tuint256 commitment = commitments[_id][msg.sender];\\n\\n\\t\\t(uint value, uint liquidity) = computeValueAndLiquidity(commitment);\\n\\t\\tprojects[_id].fund -= value;\\n\\t\\tprojects[_id].liquidity -= liquidity;\\n\\n\\t\\tcommitments[_id][msg.sender] = 0;\\n\\n\\t\\t(bool sent, ) = msg.sender.call{ value: commitment }('');\\n\\t\\trequire(sent, 'withdraw failed');\\n\\n\\t\\temit Withdrawed(_id, msg.sender, commitment);\\n\\t}\\n\\n\\tfunction launchProject(uint256 _id) external onlyAuthor(_id) statusIs(_id, ProjectStatus.Completed) {\\n\\t\\tProject memory project = projects[_id];\\n\\n\\t\\taddress tokenAddress = IProjectTokenFactory(tokenFactoryAddress).createToken(\\n\\t\\t\\tproject.name,\\n\\t\\t\\tproject.symbol,\\n\\t\\t\\taddress(this),\\n\\t\\t\\tFSOCIETY_SUPPLY,\\n\\t\\t\\tproject.authorAddress,\\n\\t\\t\\tAUTHOR_SUPPLY,\\n\\t\\t\\tINVESTORS_SUPPLY\\n\\t\\t);\\n\\n\\t\\t(address poolAddress, ) = ITokensPoolFactory(poolFactoryAddress).createPool(\\n\\t\\t\\ttokenAddress,\\n\\t\\t\\twethTokenAddress\\n\\t\\t);\\n\\n\\t\\t// TODO: add pool liquidity here \\n\\n\\t\\temit ProjectStatusChanged(_id, ProjectStatus.Launched);\\n\\t}\\n\\n\\tfunction claimProjectTokens(uint256 _id) external statusIs(_id, ProjectStatus.Completed) isCommited(_id) {\\n\\t\\tuint256 commitment = commitments[_id][msg.sender];\\n\\n\\t\\t(uint value, ) = computeValueAndLiquidity(commitment);\\n\\n\\t\\tuint256 tokenAmount = (INVESTORS_SUPPLY / projects[_id].fund) * value;\\n\\t\\t\\n\\t\\tIProjectTokenFactory(tokenFactoryAddress)\\n\\t\\t\\t.tokens(projects[_id].tokenAddress)\\n\\t\\t\\t.transfer(msg.sender, tokenAmount);\\n\\t}\\n\\n\\tfunction computeValueAndLiquidity(uint256 _value) private pure returns (uint256 amount, uint256 liquidity) {\\n\\t\\tuint256 _liquidity = (_value ** PRECISION) / 20; // 5%\\n\\t\\tuint256 _amount = (_value ** PRECISION) - liquidity;\\n\\t\\treturn (_amount, _liquidity);\\n\\t}\\n}\\n\",\"keccak256\":\"0xfd5260d355d6992e029741fa634475cc1e1e00bf38d39705e75e20b3e895aa4a\",\"license\":\"MIT\"},\"contracts/pools/interfaces/ITokensPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface ITokensPool {\\n\\n}\\n\",\"keccak256\":\"0x7ac72d3ff0503a826a4212e471c74c4dae24afd341e8e3a838cea1b775a5f376\",\"license\":\"MIT\"},\"contracts/pools/interfaces/ITokensPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { ITokensPool } from './ITokensPool.sol';\\n\\ninterface ITokensPoolFactory {\\n    \\n    function createPool(\\n        address _token1,\\n        address _token2\\n    ) external returns (address poolAddress, bytes32 poolHash);\\n\\n    function getPoolByTokensPair(address _token1, address _token2) external view returns (ITokensPool);\\n\\n    function getPoolByHash(bytes32 _hash) external view returns (ITokensPool);\\n\\n    function getTokenPools(address _token) external view returns (address[] memory);\\n\\n}\\n\",\"keccak256\":\"0x2f4d87912043eaeb26ed509c678c2d69e46b63b8de92e553f46e8dd826fcd846\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IProjectTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { IERC20MetadataUpgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol';\\n\\ninterface IProjectTokenFactory {\\n    \\n    function tokens(address tokenAddress) external returns (IERC20MetadataUpgradeable);\\n\\n    function createToken(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsocietyAddress,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        uint256 _otherSupply\\n    ) external returns (address);\\n    \\n}\\n\",\"keccak256\":\"0xa878d9f6ec956830d7918773396406c2804119b6b924fa15ecee86cab720cf71\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c8063715018a611610064578063715018a6146101805780638da5cb5b14610195578063a3bfb7bd146101bd578063e90d4c06146101dd578063f1244ad814610215578063f2fde38b1461023557600080fd5b806306661abd146100ac578063107046bd146100d557806316509ee21461010b57806344a9ae8c146101205780635eed1cc21461014057806360ae7c3b14610160575b600080fd5b3480156100b857600080fd5b506100c260045481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100f56100f03660046114bf565b610255565b6040516100cc9a99989796959493929190611556565b61011e6101193660046114bf565b61045c565b005b34801561012c57600080fd5b5061011e61013b3660046114bf565b610861565b34801561014c57600080fd5b5061011e61015b366004611664565b610a08565b34801561016c57600080fd5b5061011e61017b3660046114bf565b610c90565b34801561018c57600080fd5b5061011e610e33565b3480156101a157600080fd5b506000546040516001600160a01b0390911681526020016100cc565b3480156101c957600080fd5b5061011e6101d83660046114bf565b610e47565b3480156101e957600080fd5b506100c26101f836600461173b565b600660209081526000928352604080842090915290825290205481565b34801561022157600080fd5b5061011e6102303660046114bf565b610f03565b34801561024157600080fd5b5061011e61025036600461176b565b61135c565b6005602052600090815260409020805481906102709061178f565b80601f016020809104026020016040519081016040528092919081815260200182805461029c9061178f565b80156102e95780601f106102be576101008083540402835291602001916102e9565b820191906000526020600020905b8154815290600101906020018083116102cc57829003601f168201915b5050505050908060010180546102fe9061178f565b80601f016020809104026020016040519081016040528092919081815260200182805461032a9061178f565b80156103775780601f1061034c57610100808354040283529160200191610377565b820191906000526020600020905b81548152906001019060200180831161035a57829003601f168201915b50505050509080600201805461038c9061178f565b80601f01602080910402602001604051908101604052809291908181526020018280546103b89061178f565b80156104055780601f106103da57610100808354040283529160200191610405565b820191906000526020600020905b8154815290600101906020018083116103e857829003601f168201915b5050506003840154600485015460058601546006909601549495919490935063ffffffff8216925061ffff6401000000008304169160ff600160301b820416916001600160a01b03600160381b909204821691168a565b8060008060008381526005602081905260409091200154600160301b900460ff16600381111561048e5761048e61151e565b146104b45760405162461bcd60e51b81526004016104ab906117c9565b60405180910390fd5b662386f26fc100003410156104fc5760405162461bcd60e51b815260206004820152600e60248201526d36b4b710181718189032ba3432b960911b60448201526064016104ab565b600083815260056020526040808220815161014081019092528054829082906105249061178f565b80601f01602080910402602001604051908101604052809291908181526020018280546105509061178f565b801561059d5780601f106105725761010080835404028352916020019161059d565b820191906000526020600020905b81548152906001019060200180831161058057829003601f168201915b505050505081526020016001820180546105b69061178f565b80601f01602080910402602001604051908101604052809291908181526020018280546105e29061178f565b801561062f5780601f106106045761010080835404028352916020019161062f565b820191906000526020600020905b81548152906001019060200180831161061257829003601f168201915b505050505081526020016002820180546106489061178f565b80601f01602080910402602001604051908101604052809291908181526020018280546106749061178f565b80156106c15780601f10610696576101008083540402835291602001916106c1565b820191906000526020600020905b8154815290600101906020018083116106a457829003601f168201915b5050509183525050600382810154602083015260048301546040830152600583015463ffffffff81166060840152640100000000810461ffff16608084015260a090920191600160301b900460ff16908111156107205761072061151e565b60038111156107315761073161151e565b815260058201546001600160a01b03600160381b90910481166020830152600690920154909116604090910152905060008061076c346113d5565b915091508183606001818151610782919061180b565b90525060808301805182919061079990839061180b565b9052506000868152600660209081526040808320338452909152812080543492906107c590849061180b565b9091555050604051348152339087907f245cbccbc6875e4b0475a653568fd4f7c2dae5fb8929e33c0d66dc530ba11b009060200160405180910390a38260a0015163ffffffff1683606001511061085957600260e0840181905260405187917f35872be4c2085eaf9ca9a10d056eefec79968f825846792411ede75f331e9392916108509190611824565b60405180910390a25b505050505050565b8060008060008381526005602081905260409091200154600160301b900460ff1660038111156108935761089361151e565b146108b05760405162461bcd60e51b81526004016104ab906117c9565b60008381526006602090815260408083203384529091528120548491806108d6836113d5565b6000898152600560205260408120600301805493955091935084926108fc908490611832565b909155505060008781526005602052604081206004018054839290610922908490611832565b909155505060008781526006602090815260408083203380855292528083208390555185908381818185875af1925050503d806000811461097f576040519150601f19603f3d011682016040523d82523d6000602084013e610984565b606091505b50509050806109c75760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b60448201526064016104ab565b604051848152339089907f7fd902d6e186354d1617b957fc4cb4a144f44a19cc5c4525cfb772d707c405c29060200160405180910390a35050505050505050565b610a10611415565b60048054906000610a2083611845565b919050555060405180610140016040528089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f880181900481028201810190925286815291810191908790879081908401838280828437600092019190915250505090825250604080516020601f8a018190048102820181019092528881529181019190899089908190840183828082843760009201829052509385525050506020808301829052604080840183905263ffffffff8716606085015261ffff8616608085015260a084018390526001600160a01b038e1660c085015260e09093018290526004548252600590522081518190610b3b90826118bf565b5060208201516001820190610b5090826118bf565b5060408201516002820190610b6590826118bf565b5060608201516003808301919091556080830151600483015560a083015160058301805460c086015161ffff166401000000000265ffffffffffff1990911663ffffffff909316929092179190911780825560e08501519266ff0000000000001990911690600160301b908490811115610be157610be161151e565b0217905550610100820151600582018054670100000000000000600160d81b031916600160381b6001600160a01b039384160217905561012090920151600690910180546001600160a01b031916918316919091179055600454604051918b16917f736f208d820d5c06b0e76085cea2da38f6f5f2a7704f69a9ea5980dd5f5c04dc91610c7d918c908c908c908c908c908c908c908c906119a8565b60405180910390a2505050505050505050565b8060028060008381526005602081905260409091200154600160301b900460ff166003811115610cc257610cc261151e565b14610cdf5760405162461bcd60e51b81526004016104ab906117c9565b60008381526006602090815260408083203384529091528120548491610d04826113d5565b50600087815260056020526040812060030154919250908290610d28906023611a11565b610d329190611a33565b6002546000898152600560205260409081902060060154905163e486033960e01b81526001600160a01b039182166004820152929350169063e4860339906024016020604051808303816000875af1158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db69190611a4a565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044016020604051808303816000875af1158015610e05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e299190611a67565b5050505050505050565b610e3b611415565b610e45600061146f565b565b610e4f611415565b8060008060008381526005602081905260409091200154600160301b900460ff166003811115610e8157610e8161151e565b14610e9e5760405162461bcd60e51b81526004016104ab906117c9565b60008381526005602081905260409182902001805466ff0000000000001916600160301b1790555183907f35872be4c2085eaf9ca9a10d056eefec79968f825846792411ede75f331e939290610ef690600190611824565b60405180910390a2505050565b600081815260056020819052604090912001548190600160381b90046001600160a01b03163314610f635760405162461bcd60e51b815260206004820152600a6024820152692737ba1030baba3437b960b11b60448201526064016104ab565b8160028060008381526005602081905260409091200154600160301b900460ff166003811115610f9557610f9561151e565b14610fb25760405162461bcd60e51b81526004016104ab906117c9565b60008481526005602052604080822081516101408101909252805482908290610fda9061178f565b80601f01602080910402602001604051908101604052809291908181526020018280546110069061178f565b80156110535780601f1061102857610100808354040283529160200191611053565b820191906000526020600020905b81548152906001019060200180831161103657829003601f168201915b5050505050815260200160018201805461106c9061178f565b80601f01602080910402602001604051908101604052809291908181526020018280546110989061178f565b80156110e55780601f106110ba576101008083540402835291602001916110e5565b820191906000526020600020905b8154815290600101906020018083116110c857829003601f168201915b505050505081526020016002820180546110fe9061178f565b80601f016020809104026020016040519081016040528092919081815260200182805461112a9061178f565b80156111775780601f1061114c57610100808354040283529160200191611177565b820191906000526020600020905b81548152906001019060200180831161115a57829003601f168201915b5050509183525050600382810154602083015260048301546040830152600583015463ffffffff81166060840152640100000000810461ffff16608084015260a090920191600160301b900460ff16908111156111d6576111d661151e565b60038111156111e7576111e761151e565b815260058201546001600160a01b03600160381b90910481166020830152600690920154821660409182015260025483518483015161010086015193516325b211eb60e11b81529596506000959290941693634b6423d693611255933091601b918290602390600401611a89565b6020604051808303816000875af1158015611274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112989190611a4a565b60035460015460405163e343361560e01b81526001600160a01b038085166004830152918216602482015292935060009291169063e34336159060440160408051808303816000875af11580156112f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113179190611ae3565b509050867f35872be4c2085eaf9ca9a10d056eefec79968f825846792411ede75f331e9392600360405161134b9190611824565b60405180910390a250505050505050565b611364611415565b6001600160a01b0381166113c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ab565b6113d28161146f565b50565b6000808060146113e6600286611bf5565b6113f09190611a11565b9050600082611400600287611bf5565b61140a9190611832565b959194509092505050565b6000546001600160a01b03163314610e455760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156114d157600080fd5b5035919050565b6000815180845260005b818110156114fe576020818501810151868301820152016114e2565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b6004811061155257634e487b7160e01b600052602160045260246000fd5b9052565b600061014080835261156a8184018e6114d8565b9050828103602084015261157e818d6114d8565b90508281036040840152611592818c6114d8565b91505088606083015287608083015263ffffffff871660a083015261ffff861660c08301526115c460e0830186611534565b6001600160a01b03938416610100830152919092166101209092019190915298975050505050505050565b6001600160a01b03811681146113d257600080fd5b60008083601f84011261161657600080fd5b50813567ffffffffffffffff81111561162e57600080fd5b60208301915083602082850101111561164657600080fd5b9250929050565b803561ffff8116811461165f57600080fd5b919050565b600080600080600080600080600060c08a8c03121561168257600080fd5b893561168d816115ef565b985060208a013567ffffffffffffffff808211156116aa57600080fd5b6116b68d838e01611604565b909a50985060408c01359150808211156116cf57600080fd5b6116db8d838e01611604565b909850965060608c01359150808211156116f457600080fd5b506117018c828d01611604565b90955093505060808a013563ffffffff8116811461171e57600080fd5b915061172c60a08b0161164d565b90509295985092959850929598565b6000806040838503121561174e57600080fd5b823591506020830135611760816115ef565b809150509250929050565b60006020828403121561177d57600080fd5b8135611788816115ef565b9392505050565b600181811c908216806117a357607f821691505b6020821081036117c357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601290820152714261642070726f6a6563742073746174757360701b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561181e5761181e6117f5565b92915050565b6020810161181e8284611534565b8181038181111561181e5761181e6117f5565b600060018201611857576118576117f5565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f8211156118ba57600081815260208120601f850160051c8101602086101561189b5750805b601f850160051c820191505b81811015610859578281556001016118a7565b505050565b815167ffffffffffffffff8111156118d9576118d961185e565b6118ed816118e7845461178f565b84611874565b602080601f831160018114611922576000841561190a5750858301515b600019600386901b1c1916600185901b178555610859565b600085815260208120601f198616915b8281101561195157888601518255948401946001909101908401611932565b508582101561196f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c0602082015260006119c260c083018a8c61197f565b82810360408401526119d581898b61197f565b905082810360608401526119ea81878961197f565b91505063ffffffff8416608083015261ffff831660a08301529a9950505050505050505050565b600082611a2e57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761181e5761181e6117f5565b600060208284031215611a5c57600080fd5b8151611788816115ef565b600060208284031215611a7957600080fd5b8151801515811461178857600080fd5b60e081526000611a9c60e083018a6114d8565b8281036020840152611aae818a6114d8565b6001600160a01b0398891660408501526060840197909752505092909416608083015260a082015260c0019190915292915050565b60008060408385031215611af657600080fd5b8251611b01816115ef565b6020939093015192949293505050565b600181815b80851115611b4c578160001904821115611b3257611b326117f5565b80851615611b3f57918102915b93841c9390800290611b16565b509250929050565b600082611b635750600161181e565b81611b705750600061181e565b8160018114611b865760028114611b9057611bac565b600191505061181e565b60ff841115611ba157611ba16117f5565b50506001821b61181e565b5060208310610133831016604e8410600b8410161715611bcf575081810a61181e565b611bd98383611b11565b8060001904821115611bed57611bed6117f5565b029392505050565b60006117888383611b5456fea264697066735822122031e9e08d899fdb3dcebe28c9befa346bdebc8fad0781a1251d034e9b56c5033064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 563,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 833,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "wethTokenAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 835,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "tokenFactoryAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 837,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "poolFactoryAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 857,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "count",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 862,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "projects",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Project)831_storage)"
      },
      {
        "astId": 868,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "commitments",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(ProjectStatus)809": {
        "encoding": "inplace",
        "label": "enum Projects.ProjectStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Project)831_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Projects.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)831_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)831_storage": {
        "encoding": "inplace",
        "label": "struct Projects.Project",
        "members": [
          {
            "astId": 811,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 813,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 815,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "symbol",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 817,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "fund",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 819,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "liquidity",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 821,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "target",
            "offset": 0,
            "slot": "5",
            "type": "t_uint32"
          },
          {
            "astId": 823,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "minInvest",
            "offset": 4,
            "slot": "5",
            "type": "t_uint16"
          },
          {
            "astId": 826,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "status",
            "offset": 6,
            "slot": "5",
            "type": "t_enum(ProjectStatus)809"
          },
          {
            "astId": 828,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "authorAddress",
            "offset": 7,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 830,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "tokenAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}