{
  "address": "0x01c1DeF3b91672704716159C9041Aeca392DdFfb",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wethTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenFactoryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolFactoryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Committed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProjectCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fund",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "name": "ProjectCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "startsAt",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "endsAt",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "TokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "claimProjectTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "commitOnProject",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_authorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_startsAt",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_endsAt",
          "type": "uint32"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "createProjectToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fund",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "startsAt",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "endsAt",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "authorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "withdrawOnProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x07d5688cfa633c5508a7b32d47a7bae784d8c26b5fbe4d60983e7f86529f51fb",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x01c1DeF3b91672704716159C9041Aeca392DdFfb",
    "transactionIndex": 0,
    "gasUsed": "1884795",
    "logsBloom": "0x
    "blockHash": "0x1741938433254388611da68e0d1d363037ec2807f5b962ce8674f99af9a9fbe2",
    "transactionHash": "0x07d5688cfa633c5508a7b32d47a7bae784d8c26b5fbe4d60983e7f86529f51fb",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 223,
        "transactionHash": "0x07d5688cfa633c5508a7b32d47a7bae784d8c26b5fbe4d60983e7f86529f51fb",
        "address": "0x01c1DeF3b91672704716159C9041Aeca392DdFfb",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x1741938433254388611da68e0d1d363037ec2807f5b962ce8674f99af9a9fbe2"
      }
    ],
    "blockNumber": 223,
    "cumulativeGasUsed": "1884795",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xfcDB4564c18A9134002b9771816092C9693622e3",
    "0x927b167526bAbB9be047421db732C663a0b77B11",
    "0x32EEce76C2C2e8758584A83Ee2F522D4788feA0f"
  ],
  "numDeployments": 1,
  "solcInputHash": "9692d66f73acaa248bf79b0c77ae0aa5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wethTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolFactoryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Committed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProjectCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fund\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"ProjectCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"startsAt\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"endsAt\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"TokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"claimProjectTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"commitOnProject\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_target\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_startsAt\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_endsAt\",\"type\":\"uint32\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"createProjectToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startsAt\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"endsAt\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"authorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawOnProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FansSociety.sol\":\"FansSociety\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/FansSociety.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { Projects } from './Projects.sol';\\n\\ncontract FansSociety is Projects  {\\n    \\n    constructor(\\n        address _wethTokenAddress,\\n\\t\\taddress _tokenFactoryAddress, \\n\\t\\taddress _poolFactoryAddress\\n    ) Projects(_wethTokenAddress, _tokenFactoryAddress, _poolFactoryAddress) {\\n        \\n    }\\n\\n}\\n\",\"keccak256\":\"0xf9722a28aaf800eafb4cee4924f2290e8068cb57f452886e2a2499c67701ded0\",\"license\":\"MIT\"},\"contracts/Projects.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.17;\\n\\nimport { Initializable } from '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport { Ownable } from '@openzeppelin/contracts/access/Ownable.sol';\\n\\nimport { IProjectTokenFactory } from './tokens/interfaces/IProjectTokenFactory.sol';\\nimport { ITokensPoolFactory } from './pools/interfaces/ITokensPoolFactory.sol';\\n\\ncontract Projects is Ownable {\\n\\tstruct Project {\\n\\t\\tstring name;\\n\\t\\tstring description;\\n\\t\\tstring symbol;\\n\\t\\tuint256 target;\\n\\t\\tuint256 fund;\\n\\t\\tuint256 liquidity;\\n\\t\\tuint32 startsAt;\\n\\t\\tuint32 endsAt;\\n\\t\\tbool completed;\\n\\t\\taddress authorAddress;\\n\\t\\taddress tokenAddress;\\n\\t}\\n\\n\\taddress internal wethTokenAddress;\\n\\n\\taddress internal tokenFactoryAddress;\\n\\taddress internal poolFactoryAddress;\\n\\n\\tuint256 private constant FSOCIETY_SUPPLY = 27;\\n\\tuint256 private constant AUTHOR_SUPPLY = 27;\\n\\tuint256 private constant LIQUIDITY_SUPPLY = 30;\\n\\tuint256 private constant INVESTORS_SUPPLY = 35;\\n\\n\\tuint256 private constant MAX_DURATION = 604800; // 1 week\\n\\n\\tuint256 private constant PRECISION = 2;\\n\\n\\n\\tuint256 public count;\\n\\n\\tmapping(uint256 => Project) public projects;\\n\\n\\tmapping(uint256 => mapping(address => uint256)) public commitments;\\n\\n\\tevent ProjectCreated(\\n\\t\\tuint256 id,\\n\\t\\tstring name,\\n\\t\\tstring description,\\n\\t\\tuint256 target,\\n\\t\\tuint32 indexed startsAt,\\n\\t\\tuint32 indexed endsAt,\\n\\t\\taddress indexed author\\n\\t);\\n\\n\\tevent ProjectCancelled(uint256 id);\\n\\n\\tevent Committed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent Withdrawed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent Claimed(uint256 indexed id, address indexed caller, uint256 amount);\\n\\n\\tevent ProjectCompleted(uint256 indexed id, uint fund, uint liquidity);\\n\\n\\tevent TokenCreated(uint256 indexed id, address tokenAddress, string name, string symbol);\\n\\n\\tmodifier onlyAuthor(uint256 _id) {\\n\\t\\trequire(msg.sender == projects[_id].authorAddress, 'Not author');\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier crowdfundingOpened(uint256 _id) {\\n\\t\\t//require(block.timestamp >= projects[_id].startsAt, 'not started');\\n\\t\\trequire(block.timestamp <= projects[_id].endsAt, 'Already ended');\\n\\t\\trequire(projects[_id].completed == false, 'Project completed');\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier crowdfundingClosed(uint256 _id) {\\n\\t\\trequire(\\n\\t\\t\\tblock.timestamp > projects[_id].endsAt || projects[_id].completed,\\n\\t\\t\\t'not closed'\\n\\t\\t);\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier isCommited(uint256 _id) {\\n\\t\\trequire(commitments[_id][msg.sender] >= 0, 'No commitment');\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(\\n\\t\\taddress _wethTokenAddress,\\n\\t\\taddress _tokenFactoryAddress, \\n\\t\\taddress _poolFactoryAddress\\n\\t) {\\n\\t\\twethTokenAddress = _wethTokenAddress;\\n\\t\\ttokenFactoryAddress = _tokenFactoryAddress;\\n\\t\\tpoolFactoryAddress = _poolFactoryAddress;\\n\\t}\\n\\n\\tfunction createProject(\\n\\t\\taddress _authorAddress,\\n\\t\\tstring calldata _name,\\n\\t\\tstring calldata _symbol,\\n\\t\\tstring calldata _description,\\n\\t\\tuint256 _target,\\n\\t\\tuint32 _startsAt,\\n\\t\\tuint32 _endsAt\\n\\t) external onlyOwner {\\n\\t\\trequire(_startsAt >= block.timestamp, 'Invalid start time');\\n\\t\\trequire(_endsAt > _startsAt, 'Invalid end time');\\n\\t\\trequire(\\n\\t\\t\\t_endsAt <= block.timestamp + MAX_DURATION,\\n\\t\\t\\t'Maximum duration exceeded'\\n\\t\\t);\\n\\n\\t\\tcount++;\\n\\n\\t\\tprojects[count] = Project({\\n\\t\\t\\tname: _name,\\n\\t\\t\\tdescription: _description,\\n\\t\\t\\tsymbol: _symbol,\\n\\t\\t\\ttarget: _target,\\n\\t\\t\\tfund: 0,\\n\\t\\t\\tliquidity: 0,\\n\\t\\t\\tstartsAt: _startsAt,\\n\\t\\t\\tendsAt: _endsAt,\\n\\t\\t\\tcompleted: false,\\n\\t\\t\\tauthorAddress: _authorAddress,\\n\\t\\t\\ttokenAddress: address(0)\\n\\t\\t});\\n\\n\\t\\temit ProjectCreated(\\n\\t\\t\\tcount,\\n\\t\\t\\t_name,\\n\\t\\t\\t_description,\\n\\t\\t\\t_target,\\n\\t\\t\\t_startsAt,\\n\\t\\t\\t_endsAt,\\n\\t\\t\\t_authorAddress\\n\\t\\t);\\n\\t}\\n\\n\\tfunction cancelProject(uint256 _id) external onlyAuthor(_id) crowdfundingOpened(_id) {\\n\\t\\trequire(projects[_id].startsAt > block.timestamp, 'Project already started');\\n\\t\\tdelete projects[_id];\\n\\t\\temit ProjectCancelled(_id);\\n\\t}\\n\\n\\tfunction commitOnProject(uint256 _id) external payable crowdfundingOpened(_id) {\\n\\t\\trequire(msg.value >= 0.01 ether, 'min 0.01 ether');\\n\\n\\t\\tProject memory project = projects[_id];\\n\\n\\t\\t(uint value, uint liquidity) = computeValueAndLiquidity(msg.value);\\n\\n\\t\\tproject.fund += value;\\n\\t\\tproject.liquidity += liquidity;\\n\\n\\t\\tcommitments[_id][msg.sender] += msg.value;\\n\\t\\temit Committed(_id, msg.sender, msg.value);\\n\\n\\t\\tif (project.fund >= project.target) {\\n\\t\\t\\tproject.completed = true;\\n\\t\\t\\temit ProjectCompleted(_id, project.fund, project.liquidity);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction withdrawOnProject(uint256 _id) external crowdfundingOpened(_id) isCommited(_id) {\\n\\t\\tuint256 commitment = commitments[_id][msg.sender];\\n\\n\\t\\t(uint value, uint liquidity) = computeValueAndLiquidity(commitment);\\n\\t\\tprojects[_id].fund -= value;\\n\\t\\tprojects[_id].liquidity -= liquidity;\\n\\n\\t\\tcommitments[_id][msg.sender] = 0;\\n\\n\\t\\t(bool sent, ) = msg.sender.call{ value: commitment }('');\\n\\t\\trequire(sent, 'withdraw failed');\\n\\n\\t\\temit Withdrawed(_id, msg.sender, commitment);\\n\\t}\\n\\n\\tfunction createProjectToken(uint256 _id) external onlyAuthor(_id) crowdfundingClosed(_id) {\\n\\t\\tProject memory project = projects[_id];\\n\\n\\t\\taddress tokenAddress = IProjectTokenFactory(tokenFactoryAddress).createToken(\\n\\t\\t\\tproject.name,\\n\\t\\t\\tproject.symbol,\\n\\t\\t\\taddress(this),\\n\\t\\t\\tFSOCIETY_SUPPLY,\\n\\t\\t\\tproject.authorAddress,\\n\\t\\t\\tAUTHOR_SUPPLY,\\n\\t\\t\\tINVESTORS_SUPPLY\\n\\t\\t);\\n\\t\\temit TokenCreated(_id, tokenAddress, project.name, project.symbol);\\n\\n\\t\\t(address poolAddress, ) = ITokensPoolFactory(poolFactoryAddress).createPool(\\n\\t\\t\\ttokenAddress,\\n\\t\\t\\twethTokenAddress\\n\\t\\t);\\n\\n\\t\\tIERC20(tokenAddress).transfer(poolAddress, FSOCIETY_SUPPLY); // TODO: take a part of supply\\n\\t}\\n\\n\\tfunction claimProjectTokens(uint256 _id) external crowdfundingClosed(_id) isCommited(_id) {\\n\\t\\tuint256 commitment = commitments[_id][msg.sender];\\n\\n\\t\\t(uint value, ) = computeValueAndLiquidity(commitment);\\n\\n\\t\\tuint256 tokenAmount = (INVESTORS_SUPPLY / projects[_id].fund) * value;\\n\\t\\t\\n\\t\\tIProjectTokenFactory(tokenFactoryAddress)\\n\\t\\t\\t.tokens(projects[_id].tokenAddress)\\n\\t\\t\\t.transfer(msg.sender, tokenAmount);\\n\\t}\\n\\n\\tfunction computeValueAndLiquidity(uint256 _value) private pure returns (uint256 amount, uint256 liquidity) {\\n\\t\\tuint256 _liquidity = (_value ** PRECISION) / 20; // 5%\\n\\t\\tuint256 _amount = (_value ** PRECISION) - liquidity;\\n\\t\\treturn (_amount, _liquidity);\\n\\t}\\n}\\n\",\"keccak256\":\"0xc2a8afb4bf841af31359e5ca3385404a772dd1d0a49a0aabc86093beb301b9a5\",\"license\":\"MIT\"},\"contracts/pools/interfaces/ITokensPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\ninterface ITokensPool {\\n\\n}\\n\",\"keccak256\":\"0x7ac72d3ff0503a826a4212e471c74c4dae24afd341e8e3a838cea1b775a5f376\",\"license\":\"MIT\"},\"contracts/pools/interfaces/ITokensPoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { ITokensPool } from './ITokensPool.sol';\\n\\ninterface ITokensPoolFactory {\\n    \\n    function createPool(\\n        address _token1,\\n        address _token2\\n    ) external returns (address poolAddress, bytes32 poolHash);\\n\\n    function getPoolByTokensPair(address _token1, address _token2) external view returns (ITokensPool);\\n\\n    function getPoolByHash(bytes32 _hash) external view returns (ITokensPool);\\n\\n    function getTokenPools(address _token) external view returns (address[] memory);\\n\\n}\\n\",\"keccak256\":\"0x2f4d87912043eaeb26ed509c678c2d69e46b63b8de92e553f46e8dd826fcd846\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IProjectTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\nimport { IERC20MetadataUpgradeable } from '@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol';\\n\\ninterface IProjectTokenFactory {\\n    \\n    function tokens(address tokenAddress) external returns (IERC20MetadataUpgradeable);\\n\\n    function createToken(\\n        string memory _name, \\n        string memory _symbol, \\n        address _fsocietyAddress,\\n        uint256 _fsocietySupply,\\n        address _author,\\n        uint256 _authorSupply, \\n        uint256 _otherSupply\\n    ) external returns (address);\\n    \\n}\\n\",\"keccak256\":\"0xa878d9f6ec956830d7918773396406c2804119b6b924fa15ecee86cab720cf71\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620020ce380380620020ce8339810160408190526200003491620000f6565b828282620000423362000089565b600180546001600160a01b039485166001600160a01b0319918216179091556002805493851693821693909317909255600380549190931691161790555062000140915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000f157600080fd5b919050565b6000806000606084860312156200010c57600080fd5b6200011784620000d9565b92506200012760208501620000d9565b91506200013760408501620000d9565b90509250925092565b611f7e80620001506000396000f3fe6080604052600436106100a75760003560e01c80636bf5d328116100645780636bf5d32814610181578063715018a6146101a15780638da5cb5b146101b6578063e90d4c06146101de578063f2fde38b14610216578063fdb684e71461023657600080fd5b806306661abd146100ac578063107046bd146100d557806316509ee21461010c578063249411471461012157806344a9ae8c1461014157806360ae7c3b14610161575b600080fd5b3480156100b857600080fd5b506100c260045481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100f56100f036600461180d565b610256565b6040516100cc9b9a9998979695949392919061186c565b61011f61011a36600461180d565b610462565b005b34801561012d57600080fd5b5061011f61013c36600461180d565b61087b565b34801561014d57600080fd5b5061011f61015c36600461180d565b610a61565b34801561016d57600080fd5b5061011f61017c36600461180d565b610c31565b34801561018d57600080fd5b5061011f61019c36600461180d565b610e04565b3480156101ad57600080fd5b5061011f6112b1565b3480156101c257600080fd5b506000546040516001600160a01b0390911681526020016100cc565b3480156101ea57600080fd5b506100c26101f9366004611916565b600660209081526000928352604080842090915290825290205481565b34801561022257600080fd5b5061011f610231366004611946565b6112c5565b34801561024257600080fd5b5061011f6102513660046119cc565b61133e565b60056020526000908152604090208054819061027190611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461029d90611aa2565b80156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b5050505050908060010180546102ff90611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461032b90611aa2565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b50505050509080600201805461038d90611aa2565b80601f01602080910402602001604051908101604052809291908181526020018280546103b990611aa2565b80156104065780601f106103db57610100808354040283529160200191610406565b820191906000526020600020905b8154815290600101906020018083116103e957829003601f168201915b505050600384015460048501546005860154600687015460079097015495969295919450925063ffffffff80831692600160201b81049091169160ff600160401b830416916001600160a01b03600160481b909104811691168b565b6000818152600560205260409020600601548190600160201b900463ffffffff164211156104ab5760405162461bcd60e51b81526004016104a290611adc565b60405180910390fd5b600081815260056020526040902060060154600160401b900460ff16156104e45760405162461bcd60e51b81526004016104a290611b03565b662386f26fc1000034101561052c5760405162461bcd60e51b815260206004820152600e60248201526d36b4b710181718189032ba3432b960911b60448201526064016104a2565b6000828152600560205260408082208151610160810190925280548290829061055490611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461058090611aa2565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b505050505081526020016001820180546105e690611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461061290611aa2565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b5050505050815260200160028201805461067890611aa2565b80601f01602080910402602001604051908101604052809291908181526020018280546106a490611aa2565b80156106f15780601f106106c6576101008083540402835291602001916106f1565b820191906000526020600020905b8154815290600101906020018083116106d457829003601f168201915b5050509183525050600382015460208201526004820154604082015260058201546060820152600682015463ffffffff8082166080840152600160201b82041660a083015260ff600160401b820416151560c08301526001600160a01b03600160481b909104811660e083015260079092015490911661010090910152905060008061077c346116d5565b9150915081836080018181516107929190611b44565b90525060a0830180518291906107a9908390611b44565b9052506000858152600660209081526040808320338452909152812080543492906107d5908490611b44565b9091555050604051348152339086907f245cbccbc6875e4b0475a653568fd4f7c2dae5fb8929e33c0d66dc530ba11b009060200160405180910390a38260600151836080015110610874576001610100840152608083015160a084015160405187927ff418560cae8df9d7d7fb63eca7a926821d509b9751b541b3aac4249c34bafa639261086b92918252602082015260400190565b60405180910390a25b5050505050565b6000818152600560205260409020600601548190600160481b90046001600160a01b031633146108da5760405162461bcd60e51b815260206004820152600a6024820152692737ba1030baba3437b960b11b60448201526064016104a2565b6000828152600560205260409020600601548290600160201b900463ffffffff1642111561091a5760405162461bcd60e51b81526004016104a290611adc565b600081815260056020526040902060060154600160401b900460ff16156109535760405162461bcd60e51b81526004016104a290611b03565b6000838152600560205260409020600601544263ffffffff909116116109bb5760405162461bcd60e51b815260206004820152601760248201527f50726f6a65637420616c7265616479207374617274656400000000000000000060448201526064016104a2565b6000838152600560205260408120906109d482826117bf565b6109e26001830160006117bf565b6109f06002830160006117bf565b506000600382018190556004820181905560058201556006810180546001600160e81b031916905560070180546001600160a01b03191690556040518381527fe3805ed669490875ae87c5c8b1ad6ecca0e5e67305a833926d0d4317c4822fc09060200160405180910390a1505050565b6000818152600560205260409020600601548190600160201b900463ffffffff16421115610aa15760405162461bcd60e51b81526004016104a290611adc565b600081815260056020526040902060060154600160401b900460ff1615610ada5760405162461bcd60e51b81526004016104a290611b03565b6000828152600660209081526040808320338452909152812054839180610b00836116d5565b600088815260056020526040812060040180549395509193508492610b26908490611b5d565b909155505060008681526005602081905260408220018054839290610b4c908490611b5d565b909155505060008681526006602090815260408083203380855292528083208390555185908381818185875af1925050503d8060008114610ba9576040519150601f19603f3d011682016040523d82523d6000602084013e610bae565b606091505b5050905080610bf15760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b60448201526064016104a2565b604051848152339088907f7fd902d6e186354d1617b957fc4cb4a144f44a19cc5c4525cfb772d707c405c29060200160405180910390a350505050505050565b6000818152600560205260409020600601548190600160201b900463ffffffff16421180610c775750600081815260056020526040902060060154600160401b900460ff165b610cb05760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104a2565b60008281526006602090815260408083203384529091528120548391610cd5826116d5565b50600086815260056020526040812060040154919250908290610cf9906023611b70565b610d039190611b92565b6002546000888152600560205260409081902060070154905163e486033960e01b81526001600160a01b039182166004820152929350169063e4860339906024016020604051808303816000875af1158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d879190611ba9565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044015b6020604051808303816000875af1158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfb9190611bc6565b50505050505050565b6000818152600560205260409020600601548190600160481b90046001600160a01b03163314610e635760405162461bcd60e51b815260206004820152600a6024820152692737ba1030baba3437b960b11b60448201526064016104a2565b6000828152600560205260409020600601548290600160201b900463ffffffff16421180610ea95750600081815260056020526040902060060154600160401b900460ff165b610ee25760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104a2565b60008381526005602052604080822081516101608101909252805482908290610f0a90611aa2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3690611aa2565b8015610f835780601f10610f5857610100808354040283529160200191610f83565b820191906000526020600020905b815481529060010190602001808311610f6657829003601f168201915b50505050508152602001600182018054610f9c90611aa2565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc890611aa2565b80156110155780601f10610fea57610100808354040283529160200191611015565b820191906000526020600020905b815481529060010190602001808311610ff857829003601f168201915b5050505050815260200160028201805461102e90611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461105a90611aa2565b80156110a75780601f1061107c576101008083540402835291602001916110a7565b820191906000526020600020905b81548152906001019060200180831161108a57829003601f168201915b50505091835250506003820154602082015260048083015460408084019190915260058401546060840152600684015463ffffffff8082166080860152600160201b82041660a085015260ff600160401b820416151560c08501526001600160a01b03600160481b909104811660e085015260079094015484166101009093019290925260025484518584015161012087015194516325b211eb60e11b81529697506000969290951694634b6423d69461117094929391923092601b9291839160239101611be8565b6020604051808303816000875af115801561118f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b39190611ba9565b9050847fcc6bab703d778894c5a2492ec687c950f3a2b101a32ca70efec1a6d547285c4982846000015185604001516040516111f193929190611c42565b60405180910390a260035460015460405163e343361560e01b81526001600160a01b0384811660048301529182166024820152600092919091169063e34336159060440160408051808303816000875af1158015611253573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112779190611c82565b5060405163a9059cbb60e01b81526001600160a01b038083166004830152601b60248301529192509083169063a9059cbb90604401610db8565b6112b9611715565b6112c3600061176f565b565b6112cd611715565b6001600160a01b0381166113325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a2565b61133b8161176f565b50565b611346611715565b428263ffffffff1610156113915760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642073746172742074696d6560701b60448201526064016104a2565b8163ffffffff168163ffffffff16116113df5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420656e642074696d6560801b60448201526064016104a2565b6113ec62093a8042611b44565b8163ffffffff1611156114415760405162461bcd60e51b815260206004820152601960248201527f4d6178696d756d206475726174696f6e2065786365656465640000000000000060448201526064016104a2565b6004805490600061145183611cb0565b91905055506040518061016001604052808a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f890181900481028201810190925287815291810191908890889081908401838280828437600092019190915250505090825250604080516020601f8b0181900481028201810190925289815291810191908a908a90819084018382808284376000920182905250938552505050602080830187905260408084018390526060840183905263ffffffff8088166080860152861660a085015260c084018390526001600160a01b038f1660e085015261010090930182905260045482526005905220815181906115729082611d2e565b50602082015160018201906115879082611d2e565b506040820151600282019061159c9082611d2e565b5060608201516003820155608082015160048083019190915560a0830151600583015560c083015160068301805460e086015161010087015161012088015163ffffffff95861667ffffffffffffffff1990941693909317600160201b928616929092029190911768010000000000000000600160e81b031916600160401b911515919091027fffffff0000000000000000000000000000000000000000ffffffffffffffffff1617600160481b6001600160a01b03928316021790915561014090940151600790930180546001600160a01b0319169385169390931790925554604051928d1692848316928616917f7b326102dcfe2b1310763f0f085e5cc5ea850382eb6f93e4ddc906f17f773d38916116c191908f908f908d908d908d90611e17565b60405180910390a450505050505050505050565b6000808060146116e6600286611f3c565b6116f09190611b70565b9050600082611700600287611f3c565b61170a9190611b5d565b959194509092505050565b6000546001600160a01b031633146112c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5080546117cb90611aa2565b6000825580601f106117db575050565b601f01602090049060005260206000209081019061133b91905b8082111561180957600081556001016117f5565b5090565b60006020828403121561181f57600080fd5b5035919050565b6000815180845260005b8181101561184c57602081850181015186830182015201611830565b506000602082860101526020601f19601f83011685010191505092915050565b60006101608083526118808184018f611826565b90508281036020840152611894818e611826565b905082810360408401526118a8818d611826565b606084019b909b525050608081019790975260a087019590955263ffffffff93841660c08701529190921660e08501529015156101008401526001600160a01b0390811661012084015216610140909101529392505050565b6001600160a01b038116811461133b57600080fd5b6000806040838503121561192957600080fd5b82359150602083013561193b81611901565b809150509250929050565b60006020828403121561195857600080fd5b813561196381611901565b9392505050565b60008083601f84011261197c57600080fd5b50813567ffffffffffffffff81111561199457600080fd5b6020830191508360208285010111156119ac57600080fd5b9250929050565b803563ffffffff811681146119c757600080fd5b919050565b60008060008060008060008060008060e08b8d0312156119eb57600080fd5b8a356119f681611901565b995060208b013567ffffffffffffffff80821115611a1357600080fd5b611a1f8e838f0161196a565b909b50995060408d0135915080821115611a3857600080fd5b611a448e838f0161196a565b909950975060608d0135915080821115611a5d57600080fd5b50611a6a8d828e0161196a565b90965094505060808b01359250611a8360a08c016119b3565b9150611a9160c08c016119b3565b90509295989b9194979a5092959850565b600181811c90821680611ab657607f821691505b602082108103611ad657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600d908201526c105b1c9958591e48195b991959609a1b604082015260600190565b602080825260119082015270141c9bda9958dd0818dbdb5c1b195d1959607a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611b5757611b57611b2e565b92915050565b81810381811115611b5757611b57611b2e565b600082611b8d57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417611b5757611b57611b2e565b600060208284031215611bbb57600080fd5b815161196381611901565b600060208284031215611bd857600080fd5b8151801515811461196357600080fd5b60e081526000611bfb60e083018a611826565b8281036020840152611c0d818a611826565b6001600160a01b0398891660408501526060840197909752505092909416608083015260a082015260c0019190915292915050565b6001600160a01b0384168152606060208201819052600090611c6690830185611826565b8281036040840152611c788185611826565b9695505050505050565b60008060408385031215611c9557600080fd5b8251611ca081611901565b6020939093015192949293505050565b600060018201611cc257611cc2611b2e565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f821115611d2957600081815260208120601f850160051c81016020861015611d065750805b601f850160051c820191505b81811015611d2557828155600101611d12565b5050505b505050565b815167ffffffffffffffff811115611d4857611d48611cc9565b611d5c81611d568454611aa2565b84611cdf565b602080601f831160018114611d915760008415611d795750858301515b600019600386901b1c1916600185901b178555611d25565b600085815260208120601f198616915b82811015611dc057888601518255948401946001909101908401611da1565b5085821015611dde5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b868152608060208201526000611e31608083018789611dee565b8281036040840152611e44818688611dee565b915050826060830152979650505050505050565b600181815b80851115611e93578160001904821115611e7957611e79611b2e565b80851615611e8657918102915b93841c9390800290611e5d565b509250929050565b600082611eaa57506001611b57565b81611eb757506000611b57565b8160018114611ecd5760028114611ed757611ef3565b6001915050611b57565b60ff841115611ee857611ee8611b2e565b50506001821b611b57565b5060208310610133831016604e8410600b8410161715611f16575081810a611b57565b611f208383611e58565b8060001904821115611f3457611f34611b2e565b029392505050565b60006119638383611e9b56fea26469706673582212208b4d00fe50170f115a30cc4f5ff528ca766def5c2dbbb954cd8de62cac70c16264736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c80636bf5d328116100645780636bf5d32814610181578063715018a6146101a15780638da5cb5b146101b6578063e90d4c06146101de578063f2fde38b14610216578063fdb684e71461023657600080fd5b806306661abd146100ac578063107046bd146100d557806316509ee21461010c578063249411471461012157806344a9ae8c1461014157806360ae7c3b14610161575b600080fd5b3480156100b857600080fd5b506100c260045481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100f56100f036600461180d565b610256565b6040516100cc9b9a9998979695949392919061186c565b61011f61011a36600461180d565b610462565b005b34801561012d57600080fd5b5061011f61013c36600461180d565b61087b565b34801561014d57600080fd5b5061011f61015c36600461180d565b610a61565b34801561016d57600080fd5b5061011f61017c36600461180d565b610c31565b34801561018d57600080fd5b5061011f61019c36600461180d565b610e04565b3480156101ad57600080fd5b5061011f6112b1565b3480156101c257600080fd5b506000546040516001600160a01b0390911681526020016100cc565b3480156101ea57600080fd5b506100c26101f9366004611916565b600660209081526000928352604080842090915290825290205481565b34801561022257600080fd5b5061011f610231366004611946565b6112c5565b34801561024257600080fd5b5061011f6102513660046119cc565b61133e565b60056020526000908152604090208054819061027190611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461029d90611aa2565b80156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b5050505050908060010180546102ff90611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461032b90611aa2565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b50505050509080600201805461038d90611aa2565b80601f01602080910402602001604051908101604052809291908181526020018280546103b990611aa2565b80156104065780601f106103db57610100808354040283529160200191610406565b820191906000526020600020905b8154815290600101906020018083116103e957829003601f168201915b505050600384015460048501546005860154600687015460079097015495969295919450925063ffffffff80831692600160201b81049091169160ff600160401b830416916001600160a01b03600160481b909104811691168b565b6000818152600560205260409020600601548190600160201b900463ffffffff164211156104ab5760405162461bcd60e51b81526004016104a290611adc565b60405180910390fd5b600081815260056020526040902060060154600160401b900460ff16156104e45760405162461bcd60e51b81526004016104a290611b03565b662386f26fc1000034101561052c5760405162461bcd60e51b815260206004820152600e60248201526d36b4b710181718189032ba3432b960911b60448201526064016104a2565b6000828152600560205260408082208151610160810190925280548290829061055490611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461058090611aa2565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b505050505081526020016001820180546105e690611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461061290611aa2565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b5050505050815260200160028201805461067890611aa2565b80601f01602080910402602001604051908101604052809291908181526020018280546106a490611aa2565b80156106f15780601f106106c6576101008083540402835291602001916106f1565b820191906000526020600020905b8154815290600101906020018083116106d457829003601f168201915b5050509183525050600382015460208201526004820154604082015260058201546060820152600682015463ffffffff8082166080840152600160201b82041660a083015260ff600160401b820416151560c08301526001600160a01b03600160481b909104811660e083015260079092015490911661010090910152905060008061077c346116d5565b9150915081836080018181516107929190611b44565b90525060a0830180518291906107a9908390611b44565b9052506000858152600660209081526040808320338452909152812080543492906107d5908490611b44565b9091555050604051348152339086907f245cbccbc6875e4b0475a653568fd4f7c2dae5fb8929e33c0d66dc530ba11b009060200160405180910390a38260600151836080015110610874576001610100840152608083015160a084015160405187927ff418560cae8df9d7d7fb63eca7a926821d509b9751b541b3aac4249c34bafa639261086b92918252602082015260400190565b60405180910390a25b5050505050565b6000818152600560205260409020600601548190600160481b90046001600160a01b031633146108da5760405162461bcd60e51b815260206004820152600a6024820152692737ba1030baba3437b960b11b60448201526064016104a2565b6000828152600560205260409020600601548290600160201b900463ffffffff1642111561091a5760405162461bcd60e51b81526004016104a290611adc565b600081815260056020526040902060060154600160401b900460ff16156109535760405162461bcd60e51b81526004016104a290611b03565b6000838152600560205260409020600601544263ffffffff909116116109bb5760405162461bcd60e51b815260206004820152601760248201527f50726f6a65637420616c7265616479207374617274656400000000000000000060448201526064016104a2565b6000838152600560205260408120906109d482826117bf565b6109e26001830160006117bf565b6109f06002830160006117bf565b506000600382018190556004820181905560058201556006810180546001600160e81b031916905560070180546001600160a01b03191690556040518381527fe3805ed669490875ae87c5c8b1ad6ecca0e5e67305a833926d0d4317c4822fc09060200160405180910390a1505050565b6000818152600560205260409020600601548190600160201b900463ffffffff16421115610aa15760405162461bcd60e51b81526004016104a290611adc565b600081815260056020526040902060060154600160401b900460ff1615610ada5760405162461bcd60e51b81526004016104a290611b03565b6000828152600660209081526040808320338452909152812054839180610b00836116d5565b600088815260056020526040812060040180549395509193508492610b26908490611b5d565b909155505060008681526005602081905260408220018054839290610b4c908490611b5d565b909155505060008681526006602090815260408083203380855292528083208390555185908381818185875af1925050503d8060008114610ba9576040519150601f19603f3d011682016040523d82523d6000602084013e610bae565b606091505b5050905080610bf15760405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b60448201526064016104a2565b604051848152339088907f7fd902d6e186354d1617b957fc4cb4a144f44a19cc5c4525cfb772d707c405c29060200160405180910390a350505050505050565b6000818152600560205260409020600601548190600160201b900463ffffffff16421180610c775750600081815260056020526040902060060154600160401b900460ff165b610cb05760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104a2565b60008281526006602090815260408083203384529091528120548391610cd5826116d5565b50600086815260056020526040812060040154919250908290610cf9906023611b70565b610d039190611b92565b6002546000888152600560205260409081902060070154905163e486033960e01b81526001600160a01b039182166004820152929350169063e4860339906024016020604051808303816000875af1158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d879190611ba9565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044015b6020604051808303816000875af1158015610dd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfb9190611bc6565b50505050505050565b6000818152600560205260409020600601548190600160481b90046001600160a01b03163314610e635760405162461bcd60e51b815260206004820152600a6024820152692737ba1030baba3437b960b11b60448201526064016104a2565b6000828152600560205260409020600601548290600160201b900463ffffffff16421180610ea95750600081815260056020526040902060060154600160401b900460ff165b610ee25760405162461bcd60e51b815260206004820152600a6024820152691b9bdd0818db1bdcd95960b21b60448201526064016104a2565b60008381526005602052604080822081516101608101909252805482908290610f0a90611aa2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3690611aa2565b8015610f835780601f10610f5857610100808354040283529160200191610f83565b820191906000526020600020905b815481529060010190602001808311610f6657829003601f168201915b50505050508152602001600182018054610f9c90611aa2565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc890611aa2565b80156110155780601f10610fea57610100808354040283529160200191611015565b820191906000526020600020905b815481529060010190602001808311610ff857829003601f168201915b5050505050815260200160028201805461102e90611aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461105a90611aa2565b80156110a75780601f1061107c576101008083540402835291602001916110a7565b820191906000526020600020905b81548152906001019060200180831161108a57829003601f168201915b50505091835250506003820154602082015260048083015460408084019190915260058401546060840152600684015463ffffffff8082166080860152600160201b82041660a085015260ff600160401b820416151560c08501526001600160a01b03600160481b909104811660e085015260079094015484166101009093019290925260025484518584015161012087015194516325b211eb60e11b81529697506000969290951694634b6423d69461117094929391923092601b9291839160239101611be8565b6020604051808303816000875af115801561118f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b39190611ba9565b9050847fcc6bab703d778894c5a2492ec687c950f3a2b101a32ca70efec1a6d547285c4982846000015185604001516040516111f193929190611c42565b60405180910390a260035460015460405163e343361560e01b81526001600160a01b0384811660048301529182166024820152600092919091169063e34336159060440160408051808303816000875af1158015611253573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112779190611c82565b5060405163a9059cbb60e01b81526001600160a01b038083166004830152601b60248301529192509083169063a9059cbb90604401610db8565b6112b9611715565b6112c3600061176f565b565b6112cd611715565b6001600160a01b0381166113325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a2565b61133b8161176f565b50565b611346611715565b428263ffffffff1610156113915760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642073746172742074696d6560701b60448201526064016104a2565b8163ffffffff168163ffffffff16116113df5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420656e642074696d6560801b60448201526064016104a2565b6113ec62093a8042611b44565b8163ffffffff1611156114415760405162461bcd60e51b815260206004820152601960248201527f4d6178696d756d206475726174696f6e2065786365656465640000000000000060448201526064016104a2565b6004805490600061145183611cb0565b91905055506040518061016001604052808a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f890181900481028201810190925287815291810191908890889081908401838280828437600092019190915250505090825250604080516020601f8b0181900481028201810190925289815291810191908a908a90819084018382808284376000920182905250938552505050602080830187905260408084018390526060840183905263ffffffff8088166080860152861660a085015260c084018390526001600160a01b038f1660e085015261010090930182905260045482526005905220815181906115729082611d2e565b50602082015160018201906115879082611d2e565b506040820151600282019061159c9082611d2e565b5060608201516003820155608082015160048083019190915560a0830151600583015560c083015160068301805460e086015161010087015161012088015163ffffffff95861667ffffffffffffffff1990941693909317600160201b928616929092029190911768010000000000000000600160e81b031916600160401b911515919091027fffffff0000000000000000000000000000000000000000ffffffffffffffffff1617600160481b6001600160a01b03928316021790915561014090940151600790930180546001600160a01b0319169385169390931790925554604051928d1692848316928616917f7b326102dcfe2b1310763f0f085e5cc5ea850382eb6f93e4ddc906f17f773d38916116c191908f908f908d908d908d90611e17565b60405180910390a450505050505050505050565b6000808060146116e6600286611f3c565b6116f09190611b70565b9050600082611700600287611f3c565b61170a9190611b5d565b959194509092505050565b6000546001600160a01b031633146112c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5080546117cb90611aa2565b6000825580601f106117db575050565b601f01602090049060005260206000209081019061133b91905b8082111561180957600081556001016117f5565b5090565b60006020828403121561181f57600080fd5b5035919050565b6000815180845260005b8181101561184c57602081850181015186830182015201611830565b506000602082860101526020601f19601f83011685010191505092915050565b60006101608083526118808184018f611826565b90508281036020840152611894818e611826565b905082810360408401526118a8818d611826565b606084019b909b525050608081019790975260a087019590955263ffffffff93841660c08701529190921660e08501529015156101008401526001600160a01b0390811661012084015216610140909101529392505050565b6001600160a01b038116811461133b57600080fd5b6000806040838503121561192957600080fd5b82359150602083013561193b81611901565b809150509250929050565b60006020828403121561195857600080fd5b813561196381611901565b9392505050565b60008083601f84011261197c57600080fd5b50813567ffffffffffffffff81111561199457600080fd5b6020830191508360208285010111156119ac57600080fd5b9250929050565b803563ffffffff811681146119c757600080fd5b919050565b60008060008060008060008060008060e08b8d0312156119eb57600080fd5b8a356119f681611901565b995060208b013567ffffffffffffffff80821115611a1357600080fd5b611a1f8e838f0161196a565b909b50995060408d0135915080821115611a3857600080fd5b611a448e838f0161196a565b909950975060608d0135915080821115611a5d57600080fd5b50611a6a8d828e0161196a565b90965094505060808b01359250611a8360a08c016119b3565b9150611a9160c08c016119b3565b90509295989b9194979a5092959850565b600181811c90821680611ab657607f821691505b602082108103611ad657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600d908201526c105b1c9958591e48195b991959609a1b604082015260600190565b602080825260119082015270141c9bda9958dd0818dbdb5c1b195d1959607a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115611b5757611b57611b2e565b92915050565b81810381811115611b5757611b57611b2e565b600082611b8d57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417611b5757611b57611b2e565b600060208284031215611bbb57600080fd5b815161196381611901565b600060208284031215611bd857600080fd5b8151801515811461196357600080fd5b60e081526000611bfb60e083018a611826565b8281036020840152611c0d818a611826565b6001600160a01b0398891660408501526060840197909752505092909416608083015260a082015260c0019190915292915050565b6001600160a01b0384168152606060208201819052600090611c6690830185611826565b8281036040840152611c788185611826565b9695505050505050565b60008060408385031215611c9557600080fd5b8251611ca081611901565b6020939093015192949293505050565b600060018201611cc257611cc2611b2e565b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f821115611d2957600081815260208120601f850160051c81016020861015611d065750805b601f850160051c820191505b81811015611d2557828155600101611d12565b5050505b505050565b815167ffffffffffffffff811115611d4857611d48611cc9565b611d5c81611d568454611aa2565b84611cdf565b602080601f831160018114611d915760008415611d795750858301515b600019600386901b1c1916600185901b178555611d25565b600085815260208120601f198616915b82811015611dc057888601518255948401946001909101908401611da1565b5085821015611dde5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b868152608060208201526000611e31608083018789611dee565b8281036040840152611e44818688611dee565b915050826060830152979650505050505050565b600181815b80851115611e93578160001904821115611e7957611e79611b2e565b80851615611e8657918102915b93841c9390800290611e5d565b509250929050565b600082611eaa57506001611b57565b81611eb757506000611b57565b8160018114611ecd5760028114611ed757611ef3565b6001915050611b57565b60ff841115611ee857611ee8611b2e565b50506001821b611b57565b5060208310610133831016604e8410600b8410161715611f16575081810a611b57565b611f208383611e58565b8060001904821115611f3457611f34611b2e565b029392505050565b60006119638383611e9b56fea26469706673582212208b4d00fe50170f115a30cc4f5ff528ca766def5c2dbbb954cd8de62cac70c16264736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1217,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2469,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "wethTokenAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2471,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "tokenFactoryAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2473,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "poolFactoryAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 2493,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "count",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2498,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "projects",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Project)2467_storage)"
      },
      {
        "astId": 2504,
        "contract": "contracts/FansSociety.sol:FansSociety",
        "label": "commitments",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Project)2467_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Projects.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)2467_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)2467_storage": {
        "encoding": "inplace",
        "label": "struct Projects.Project",
        "members": [
          {
            "astId": 2446,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2448,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 2450,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "symbol",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 2452,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "target",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 2454,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "fund",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 2456,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "liquidity",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 2458,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "startsAt",
            "offset": 0,
            "slot": "6",
            "type": "t_uint32"
          },
          {
            "astId": 2460,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "endsAt",
            "offset": 4,
            "slot": "6",
            "type": "t_uint32"
          },
          {
            "astId": 2462,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "completed",
            "offset": 8,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 2464,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "authorAddress",
            "offset": 9,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 2466,
            "contract": "contracts/FansSociety.sol:FansSociety",
            "label": "tokenAddress",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}